const unsigned char bitmapOPEN_SANS_EXTRABOLD_11PX_UNICODE[] = {
//unicode 0x0000A1
  0xCF, 0xFF,
//unicode 0x0000BF
  0x8C, 0x01, 0xE4, 0xC6, 0xF0,
//unicode 0x0000C0
  0x0C, 0x18, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C1
  0x30, 0x18, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C2
  0x38, 0x2C, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C3
  0x2C, 0x34, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C4
  0x2C, 0x2C, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C6
  0xF8, 0xA3, 0xC1, 0x06, 0x7B, 0x6E, 0xF8, 0x61,
  0xC6, 0xF8,
//unicode 0x0000C7
  0xFE, 0x30, 0x0C, 0xC3, 0x30, 0x78, 0x0C, 0xC2,
//unicode 0x0000C8
  0xC6, 0xF0, 0x33, 0x3F, 0x33, 0x0F,
//unicode 0x0000C9
  0x6C, 0xF0, 0x33, 0x3F, 0x33, 0x0F,
//unicode 0x0000CA
  0x6E, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000CB
  0x6B, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000CD
  0x1E, 0xB6, 0x6D, 0xDB,
//unicode 0x0000CE
  0xB6, 0x60, 0x66, 0x66, 0x66, 0x06,
//unicode 0x0000CF
  0xB9, 0x60, 0x66, 0x66, 0x66, 0x06,
//unicode 0x0000D1
  0x2C, 0x1E, 0xE0, 0x7C, 0x7E, 0xBF, 0xF7, 0xFB,
  0xF9, 0x1C,
//unicode 0x0000D3
  0x38, 0x04, 0xC0, 0x37, 0x1E, 0x8F, 0xC7, 0xE3,
  0xB1, 0x0F,
//unicode 0x0000D4
  0x1C, 0x1B, 0xC0, 0x37, 0x1E, 0x8F, 0xC7, 0xE3,
  0xB1, 0x0F,
//unicode 0x0000D5
  0x2C, 0x0D, 0xC0, 0x37, 0x1E, 0x8F, 0xC7, 0xE3,
  0xB1, 0x0F,
//unicode 0x0000D6
  0x34, 0x1B, 0xC0, 0x37, 0x1E, 0x8F, 0xC7, 0xE3,
  0xB1, 0x0F,
//unicode 0x0000D9
  0x0E, 0x02, 0xCC, 0xF3, 0x3C, 0xCF, 0xF3, 0xEC,
  0x01,
//unicode 0x0000DA
  0x18, 0x03, 0xCC, 0xF3, 0x3C, 0xCF, 0xF3, 0xEC,
  0x01,
//unicode 0x0000DB
  0x9C, 0x05, 0xCC, 0xF3, 0x3C, 0xCF, 0xF3, 0xEC,
  0x01,
//unicode 0x0000DC
  0x96, 0x0D, 0xCC, 0xF3, 0x3C, 0xCF, 0xF3, 0xEC,
  0x01,
//unicode 0x0000DF
  0x9E, 0xD9, 0x6E, 0xB3, 0xDB, 0xCD, 0x7F,
//unicode 0x0000E0
  0x0C, 0x06, 0x78, 0xB0, 0x3F, 0xCF, 0x3E,
//unicode 0x0000E1
  0x38, 0x02, 0xF8, 0xB0, 0x7F, 0xDF, 0x3E,
//unicode 0x0000E2
  0x9C, 0x0D, 0x78, 0xB0, 0x3F, 0xCF, 0x3E,
//unicode 0x0000E3
  0xAC, 0x0F, 0xF8, 0xB0, 0x7F, 0xDF, 0x3E,
//unicode 0x0000E4
  0x24, 0x0D, 0xF8, 0xB0, 0x7F, 0xDF, 0x3E,
//unicode 0x0000E6
  0xFE, 0xC1, 0xE4, 0xFF, 0x0D, 0x37, 0xB8, 0x07,
//unicode 0x0000E7
  0xBC, 0x71, 0x1C, 0x06, 0xCF, 0x60, 0x0C,
//unicode 0x0000E8
  0x0C, 0x0C, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000E9
  0x30, 0x0C, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000EA
  0x1C, 0x1B, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000EB
  0x36, 0x1B, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000ED
  0x1E, 0xB6, 0x6D, 0x03,
//unicode 0x0000EE
  0x6E, 0x03, 0x63, 0x8C, 0x31, 0x06,
//unicode 0x0000EF
  0x2D, 0xB6, 0x6D, 0x03,
//unicode 0x0000F1
  0x56, 0x83, 0xBE, 0xF7, 0xDE, 0x1B,
//unicode 0x0000F3
  0x38, 0x04, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F4
  0x1C, 0x1B, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F5
  0x2C, 0x0D, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F6
  0x34, 0x1A, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F9
  0x86, 0x81, 0xBD, 0xF7, 0xDE, 0x17,
//unicode 0x0000FA
  0x98, 0x81, 0xBD, 0xF7, 0xDE, 0x17,
//unicode 0x0000FB
  0x6E, 0x83, 0xBD, 0xF7, 0xDE, 0x17,
//unicode 0x0000FC
  0x52, 0x83, 0xBD, 0xF7, 0xDE, 0x17,
//unicode 0x00011E
  0x12, 0x07, 0xF8, 0xC3, 0xB0, 0xCF, 0xF3, 0xEC,
  0x03,
//unicode 0x00011F
  0x36, 0x0E, 0xC0, 0x6F, 0xB3, 0x79, 0x0C, 0xBE,
  0xF1, 0xD8, 0x03,
//unicode 0x000130
  0xCF, 0xFF, 0x3F,
//unicode 0x000131
  0xFF, 0x0F,
//unicode 0x000152
  0xFE, 0xC7, 0x8C, 0x19, 0x3F, 0x66, 0xCC, 0x18,
  0xFF,
//unicode 0x000153
  0xDC, 0xB3, 0xD3, 0xF9, 0xEF, 0x60, 0x07, 0xEE,
  0x01,
//unicode 0x00015E
  0xBE, 0x61, 0x38, 0x1C, 0x9E, 0x7D, 0x0C, 0xC2,
//unicode 0x00015F
  0x6F, 0x3C, 0x87, 0x9F, 0x31, 0x07,
//unicode 0x000401
  0x6B, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x000410
  0x3C, 0x3C, 0x3C, 0x7E, 0x66, 0x7E, 0xE7, 0xC3,
//unicode 0x000411
  0xDF, 0x30, 0x7C, 0xDB, 0xBE, 0x3D,
//unicode 0x000412
  0xDF, 0xB6, 0x3D, 0xDB, 0xBE, 0x7D,
//unicode 0x000413
  0x7F, 0x8C, 0x31, 0xC6, 0x18,
//unicode 0x000414
  0xFC, 0x98, 0x31, 0x63, 0xC6, 0xCC, 0x98, 0xB1,
  0xFF, 0x83, 0x07, 0x0F, 0x06,
//unicode 0x000415
  0x3F, 0xF3, 0x33, 0xF3,
//unicode 0x000416
  0x77, 0xB7, 0x1B, 0x7F, 0xF8, 0xC3, 0x1F, 0xFF,
  0xD9, 0xED, 0xEE,
//unicode 0x000417
  0x1E, 0x19, 0x8C, 0x01, 0x83, 0xC7, 0x3E,
//unicode 0x000418
  0xF3, 0xF9, 0x7E, 0xFF, 0x7E, 0x9F, 0xCF,
//unicode 0x000419
  0x36, 0x0E, 0x60, 0x3E, 0xDF, 0xEF, 0xDF, 0xEF,
  0xF3, 0x19,
//unicode 0x00041A
  0xF3, 0xD9, 0xE6, 0xF1, 0xD9, 0xCC, 0xE6,
//unicode 0x00041B
  0x7C, 0x36, 0x9B, 0x6D, 0x36, 0x9B, 0xC7,
//unicode 0x00041C
  0xC7, 0x8F, 0xBF, 0x7F, 0xFF, 0x7E, 0xF5, 0xEE,
  0xDD,
//unicode 0x00041D
  0xF3, 0x3C, 0xFF, 0xF3, 0x3C, 0xCF,
//unicode 0x00041E
  0xBE, 0xF1, 0x78, 0x3C, 0x1E, 0x8F, 0x7D,
//unicode 0x00041F
  0xFF, 0x3C, 0xCF, 0xF3, 0x3C, 0xCF,
//unicode 0x000420
  0xDF, 0xB6, 0x6F, 0xDF, 0x30, 0x0C,
//unicode 0x000421
  0xFE, 0x30, 0x0C, 0xC3, 0x30, 0x78,
//unicode 0x000422
  0x7F, 0x06, 0x83, 0xC1, 0x60, 0x30, 0x18,
//unicode 0x000423
  0xC7, 0x66, 0x66, 0x6C, 0x3C, 0x38, 0x18, 0x1F,
//unicode 0x000424
  0x30, 0xF0, 0x63, 0xDB, 0xEC, 0xB7, 0xDB, 0xC6,
  0x0F, 0x0C,
//unicode 0x000425
  0x67, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x66, 0xE7,
//unicode 0x000426
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF,
  0xC0, 0xC0, 0xC0,
//unicode 0x000427
  0xF3, 0x3C, 0xCF, 0xF3, 0x0F, 0xC3,
//unicode 0x000428
  0x33, 0xCF, 0x3C, 0xF3, 0xCC, 0x33, 0xCF, 0x3C,
  0xF3, 0xFF,
//unicode 0x000429
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0xF3, 0xFF, 0x00, 0x0C, 0xC0, 0x00,
  0x0C,
//unicode 0x00042A
  0x0F, 0x0C, 0x0C, 0x7C, 0x6C, 0xEC, 0x6C, 0x7C,
//unicode 0x00042B
  0xC3, 0xC3, 0xC3, 0xCF, 0xDB, 0xDB, 0xDB, 0xCF,
//unicode 0x00042C
  0xC3, 0x30, 0x7C, 0xDB, 0xBE, 0x3D,
//unicode 0x00042D
  0x1F, 0x0C, 0xFB, 0x30, 0x1C, 0x7F,
//unicode 0x00042E
  0xE3, 0xCD, 0xBC, 0xF3, 0xC7, 0x1B, 0xCF, 0x3C,
  0xF3, 0x78,
//unicode 0x00042F
  0xBC, 0x6D, 0xDB, 0xBC, 0x6D, 0xDF,
//unicode 0x000430
  0x3E, 0xEC, 0xDF, 0xB7, 0x0F,
//unicode 0x000431
  0xB8, 0x63, 0xF8, 0xB7, 0x6D, 0x73,
//unicode 0x000432
  0x7F, 0xBF, 0xBD, 0x3F,
//unicode 0x000433
  0x7F, 0x8C, 0x31, 0x06,
//unicode 0x000434
  0x7C, 0x6C, 0x64, 0x66, 0x66, 0xFF, 0xC3, 0xC3,
//unicode 0x000435
  0x3C, 0xD3, 0xFF, 0x60, 0xE0, 0x01,
//unicode 0x000436
  0x36, 0xB3, 0x1D, 0x7F, 0x78, 0x63, 0xB3, 0x9B,
  0x03,
//unicode 0x000437
  0x1E, 0xC6, 0xE0, 0xF9, 0x07,
//unicode 0x000438
  0xF3, 0xFE, 0xFF, 0xF7, 0x0C,
//unicode 0x000439
  0xB3, 0x07, 0xCC, 0xFB, 0xFF, 0xDF, 0x33,
//unicode 0x00043A
  0xFB, 0xF6, 0x3C, 0xDB, 0x0E,
//unicode 0x00043B
  0x7C, 0x36, 0x9B, 0x6C, 0x3E, 0x03,
//unicode 0x00043C
  0xF7, 0xFB, 0xFD, 0xFE, 0x5F, 0x03,
//unicode 0x00043D
  0x7B, 0xFF, 0xBD, 0x37,
//unicode 0x00043E
  0x1C, 0xDB, 0xFD, 0x6E, 0xE3,
//unicode 0x00043F
  0x7F, 0xEF, 0xBD, 0x37,
//unicode 0x000440
  0xDF, 0xB6, 0xEF, 0xDB, 0x37, 0x0C, 0x03,
//unicode 0x000441
  0xBC, 0x71, 0x1C, 0x26, 0x0F,
//unicode 0x000442
  0x7F, 0x06, 0x83, 0xC1, 0x60,
//unicode 0x000443
  0x63, 0x9B, 0x8D, 0xC6, 0xE1, 0x70, 0x18, 0x0E,
//unicode 0x000444
  0x18, 0x18, 0x7E, 0xDB, 0xDB, 0xDB, 0xDB, 0x7E,
  0x18, 0x18, 0x18,
//unicode 0x000445
  0x77, 0x1B, 0x87, 0x63, 0xBB, 0x03,
//unicode 0x000446
  0xBB, 0xDD, 0x6E, 0xB7, 0xFB, 0x83, 0xC1,
//unicode 0x000447
  0xF7, 0x7D, 0xFB, 0x30, 0x0C,
//unicode 0x000448
  0xBB, 0x77, 0xEF, 0xDE, 0xBD, 0xFB, 0x3F,
//unicode 0x000449
  0xB3, 0x99, 0xCD, 0x6C, 0x66, 0x33, 0x9B, 0xFF,
  0x03, 0x18, 0xC0,
//unicode 0x00044A
  0x0F, 0x0C, 0x7C, 0xEC, 0xEC, 0x7C,
//unicode 0x00044B
  0xC3, 0xC3, 0xDF, 0xDB, 0xDB, 0xDF,
//unicode 0x00044C
  0x63, 0xBC, 0xBD, 0x1F,
//unicode 0x00044D
  0x0F, 0xE6, 0x63, 0xD9, 0x03,
//unicode 0x00044E
  0x73, 0xB6, 0x7D, 0xDF, 0xBE, 0x6D, 0x0E,
//unicode 0x00044F
  0xFE, 0x6D, 0xFB, 0xF6, 0x0C,
//unicode 0x000451
  0x34, 0x1A, 0x80, 0x67, 0xFA, 0x1F, 0x0C, 0x3C,
//unicode 0x0020A4
  0xBC, 0x61, 0x7C, 0x86, 0x67, 0xF8,
//unicode 0x00FFFD
  0x10, 0x70, 0x10, 0xF1, 0xF6, 0xFD, 0xB9, 0x3B,
  0x3E, 0x28, 0x20,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_EXTRABOLD_11PX_UNICODE[125] = {
  { 0x0000A1,   3,  0,  5, 1, 0,     0 }, //unicode 0x0000A1
  { 0x0000BF,   6,  0,  5, 1, 0,     2 }, //unicode 0x0000BF
  { 0x0000C0,   8,  0,  0, 0, 0,     7 }, //unicode 0x0000C0
  { 0x0000C1,   8,  0,  0, 0, 0,    18 }, //unicode 0x0000C1
  { 0x0000C2,   8,  0,  0, 0, 0,    29 }, //unicode 0x0000C2
  { 0x0000C3,   8,  0,  0, 0, 0,    40 }, //unicode 0x0000C3
  { 0x0000C4,   8,  0,  0, 0, 0,    51 }, //unicode 0x0000C4
  { 0x0000C6,  11,  0,  3, 1, 0,    62 }, //unicode 0x0000C6
  { 0x0000C7,   7,  1,  3, 0, 0,    72 }, //unicode 0x0000C7
  { 0x0000C8,   6,  1,  0, 1, 0,    80 }, //unicode 0x0000C8
  { 0x0000C9,   6,  1,  0, 1, 0,    86 }, //unicode 0x0000C9
  { 0x0000CA,   6,  1,  0, 0, 0,    92 }, //unicode 0x0000CA
  { 0x0000CB,   6,  1,  0, 0, 0,    99 }, //unicode 0x0000CB
  { 0x0000CD,   5,  1,  0, 1, 0,   106 }, //unicode 0x0000CD
  { 0x0000CE,   6,  0,  0, 2, 0,   110 }, //unicode 0x0000CE
  { 0x0000CF,   6,  0,  0, 2, 0,   116 }, //unicode 0x0000CF
  { 0x0000D1,   9,  1,  0, 1, 0,   122 }, //unicode 0x0000D1
  { 0x0000D3,   9,  1,  0, 1, 0,   132 }, //unicode 0x0000D3
  { 0x0000D4,   9,  1,  0, 1, 0,   142 }, //unicode 0x0000D4
  { 0x0000D5,   9,  1,  0, 1, 0,   152 }, //unicode 0x0000D5
  { 0x0000D6,   9,  1,  0, 1, 0,   162 }, //unicode 0x0000D6
  { 0x0000D9,   8,  1,  0, 1, 0,   172 }, //unicode 0x0000D9
  { 0x0000DA,   8,  1,  0, 1, 0,   181 }, //unicode 0x0000DA
  { 0x0000DB,   8,  1,  0, 1, 0,   190 }, //unicode 0x0000DB
  { 0x0000DC,   8,  1,  0, 1, 0,   199 }, //unicode 0x0000DC
  { 0x0000DF,   8,  1,  3, 0, 0,   208 }, //unicode 0x0000DF
  { 0x0000E0,   7,  0,  2, 1, 0,   215 }, //unicode 0x0000E0
  { 0x0000E1,   7,  0,  2, 1, 0,   222 }, //unicode 0x0000E1
  { 0x0000E2,   7,  0,  2, 1, 0,   229 }, //unicode 0x0000E2
  { 0x0000E3,   7,  0,  2, 1, 0,   236 }, //unicode 0x0000E3
  { 0x0000E4,   7,  0,  2, 1, 0,   243 }, //unicode 0x0000E4
  { 0x0000E6,  10,  0,  5, 0, 0,   250 }, //unicode 0x0000E6
  { 0x0000E7,   6,  0,  5, 0, 0,   258 }, //unicode 0x0000E7
  { 0x0000E8,   7,  0,  2, 0, 0,   265 }, //unicode 0x0000E8
  { 0x0000E9,   7,  0,  2, 0, 0,   273 }, //unicode 0x0000E9
  { 0x0000EA,   7,  0,  2, 0, 0,   281 }, //unicode 0x0000EA
  { 0x0000EB,   7,  0,  2, 0, 0,   289 }, //unicode 0x0000EB
  { 0x0000ED,   5,  1,  2, 1, 0,   297 }, //unicode 0x0000ED
  { 0x0000EE,   6,  0,  2, 1, 0,   301 }, //unicode 0x0000EE
  { 0x0000EF,   6,  2,  2, 1, 0,   307 }, //unicode 0x0000EF
  { 0x0000F1,   7,  1,  2, 1, 0,   311 }, //unicode 0x0000F1
  { 0x0000F3,   7,  0,  2, 0, 0,   317 }, //unicode 0x0000F3
  { 0x0000F4,   7,  0,  2, 0, 0,   325 }, //unicode 0x0000F4
  { 0x0000F5,   7,  0,  2, 0, 0,   333 }, //unicode 0x0000F5
  { 0x0000F6,   7,  0,  2, 0, 0,   341 }, //unicode 0x0000F6
  { 0x0000F9,   7,  1,  2, 1, 0,   349 }, //unicode 0x0000F9
  { 0x0000FA,   7,  1,  2, 1, 0,   355 }, //unicode 0x0000FA
  { 0x0000FB,   7,  1,  2, 1, 0,   361 }, //unicode 0x0000FB
  { 0x0000FC,   7,  1,  2, 1, 0,   367 }, //unicode 0x0000FC
  { 0x00011E,   8,  1,  0, 1, 0,   373 }, //unicode 0x00011E
  { 0x00011F,   7,  0,  2, 0, 0,   382 }, //unicode 0x00011F
  { 0x000130,   4,  1,  0, 1, 0,   393 }, //unicode 0x000130
  { 0x000131,   4,  1,  5, 1, 0,   396 }, //unicode 0x000131
  { 0x000152,  11,  1,  3, 1, 0,   398 }, //unicode 0x000152
  { 0x000153,  11,  0,  5, 0, 0,   407 }, //unicode 0x000153
  { 0x00015E,   6,  0,  3, 0, 0,   416 }, //unicode 0x00015E
  { 0x00015F,   6,  1,  5, 0, 0,   424 }, //unicode 0x00015F
  { 0x000401,   6,  1,  0, 0, 0,   430 }, //unicode 0x000401
  { 0x000410,   8,  0,  3, 0, 0,   437 }, //unicode 0x000410
  { 0x000411,   7,  1,  3, 0, 0,   445 }, //unicode 0x000411
  { 0x000412,   7,  1,  3, 0, 0,   451 }, //unicode 0x000412
  { 0x000413,   7,  1,  3, 1, 0,   457 }, //unicode 0x000413
  { 0x000414,   9,  0,  3, 0, 0,   462 }, //unicode 0x000414
  { 0x000415,   6,  1,  3, 1, 0,   475 }, //unicode 0x000415
  { 0x000416,  13,  0,  3, 2, 0,   479 }, //unicode 0x000416
  { 0x000417,   7,  0,  3, 0, 0,   490 }, //unicode 0x000417
  { 0x000418,   9,  1,  3, 1, 0,   497 }, //unicode 0x000418
  { 0x000419,   9,  1,  0, 1, 0,   504 }, //unicode 0x000419
  { 0x00041A,   8,  1,  3, 0, 0,   514 }, //unicode 0x00041A
  { 0x00041B,   8,  0,  3, 1, 0,   521 }, //unicode 0x00041B
  { 0x00041C,  11,  1,  3, 1, 0,   528 }, //unicode 0x00041C
  { 0x00041D,   8,  1,  3, 1, 0,   537 }, //unicode 0x00041D
  { 0x00041E,   9,  1,  3, 1, 0,   543 }, //unicode 0x00041E
  { 0x00041F,   8,  1,  3, 1, 0,   550 }, //unicode 0x00041F
  { 0x000420,   7,  1,  3, 0, 0,   556 }, //unicode 0x000420
  { 0x000421,   7,  1,  3, 0, 0,   562 }, //unicode 0x000421
  { 0x000422,   7,  0,  3, 0, 0,   568 }, //unicode 0x000422
  { 0x000423,   8,  0,  3, 0, 0,   575 }, //unicode 0x000423
  { 0x000424,  10,  0,  3, 0, 0,   583 }, //unicode 0x000424
  { 0x000425,   8,  0,  3, 0, 0,   593 }, //unicode 0x000425
  { 0x000426,   9,  1,  3, 0, 0,   601 }, //unicode 0x000426
  { 0x000427,   8,  1,  3, 1, 0,   612 }, //unicode 0x000427
  { 0x000428,  12,  1,  3, 1, 0,   618 }, //unicode 0x000428
  { 0x000429,  13,  1,  3, 0, 0,   628 }, //unicode 0x000429
  { 0x00042A,   8,  0,  3, 0, 0,   645 }, //unicode 0x00042A
  { 0x00042B,  10,  1,  3, 1, 0,   653 }, //unicode 0x00042B
  { 0x00042C,   7,  1,  3, 0, 0,   661 }, //unicode 0x00042C
  { 0x00042D,   7,  0,  3, 1, 0,   667 }, //unicode 0x00042D
  { 0x00042E,  12,  1,  3, 1, 0,   673 }, //unicode 0x00042E
  { 0x00042F,   8,  0,  3, 2, 0,   683 }, //unicode 0x00042F
  { 0x000430,   7,  0,  5, 1, 0,   689 }, //unicode 0x000430
  { 0x000431,   7,  0,  3, 1, 0,   694 }, //unicode 0x000431
  { 0x000432,   7,  1,  5, 1, 0,   700 }, //unicode 0x000432
  { 0x000433,   6,  1,  5, 0, 0,   704 }, //unicode 0x000433
  { 0x000434,   8,  0,  5, 0, 0,   708 }, //unicode 0x000434
  { 0x000435,   7,  0,  5, 0, 0,   716 }, //unicode 0x000435
  { 0x000436,  12,  0,  5, 1, 0,   722 }, //unicode 0x000436
  { 0x000437,   6,  0,  5, 0, 0,   731 }, //unicode 0x000437
  { 0x000438,   8,  1,  5, 1, 0,   736 }, //unicode 0x000438
  { 0x000439,   8,  1,  2, 1, 0,   741 }, //unicode 0x000439
  { 0x00043A,   8,  1,  5, 1, 0,   748 }, //unicode 0x00043A
  { 0x00043B,   8,  0,  5, 1, 0,   753 }, //unicode 0x00043B
  { 0x00043C,   9,  1,  5, 1, 0,   759 }, //unicode 0x00043C
  { 0x00043D,   7,  1,  5, 1, 0,   765 }, //unicode 0x00043D
  { 0x00043E,   7,  0,  5, 0, 0,   769 }, //unicode 0x00043E
  { 0x00043F,   7,  1,  5, 1, 0,   774 }, //unicode 0x00043F
  { 0x000440,   7,  1,  5, 0, 0,   778 }, //unicode 0x000440
  { 0x000441,   6,  0,  5, 0, 0,   785 }, //unicode 0x000441
  { 0x000442,   7,  0,  5, 0, 0,   790 }, //unicode 0x000442
  { 0x000443,   8,  0,  5, 1, 0,   795 }, //unicode 0x000443
  { 0x000444,  10,  1,  3, 1, 0,   803 }, //unicode 0x000444
  { 0x000445,   7,  0,  5, 0, 0,   814 }, //unicode 0x000445
  { 0x000446,   9,  1,  5, 1, 0,   820 }, //unicode 0x000446
  { 0x000447,   7,  0,  5, 1, 0,   827 }, //unicode 0x000447
  { 0x000448,  11,  1,  5, 1, 0,   832 }, //unicode 0x000448
  { 0x000449,  12,  1,  5, 0, 0,   839 }, //unicode 0x000449
  { 0x00044A,   8,  0,  5, 0, 0,   850 }, //unicode 0x00044A
  { 0x00044B,  10,  1,  5, 1, 0,   856 }, //unicode 0x00044B
  { 0x00044C,   7,  1,  5, 1, 0,   862 }, //unicode 0x00044C
  { 0x00044D,   6,  0,  5, 0, 0,   866 }, //unicode 0x00044D
  { 0x00044E,  10,  1,  5, 0, 0,   871 }, //unicode 0x00044E
  { 0x00044F,   8,  0,  5, 2, 0,   878 }, //unicode 0x00044F
  { 0x000451,   7,  0,  2, 0, 0,   883 }, //unicode 0x000451
  { 0x0020A4,   7,  0,  3, 1, 0,   891 }, //unicode 0x0020A4
  { 0x00FFFD,  11,  1,  3, 1, 0,   897 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_EXTRABOLD_11PX_UNICODE = {
  908, // bitmap len
  BAGL_FONT_OPEN_SANS_EXTRABOLD_11px, // font id
  11, // baseline (does already contain the nb of skipped lines)
  charactersOPEN_SANS_EXTRABOLD_11PX_UNICODE,
  bitmapOPEN_SANS_EXTRABOLD_11PX_UNICODE
};
