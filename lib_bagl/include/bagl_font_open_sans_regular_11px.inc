const unsigned char bitmapOPEN_SANS_REGULAR_11PX[] = {
//ascii 0x0020
//ascii 0x0021
  0xBF,
//ascii 0x0022
  0x0F,
//ascii 0x0023
  0x20, 0x92, 0x9F, 0x42, 0xF9, 0x49, 0x04,
//ascii 0x0024
  0x5F, 0x65, 0xCC, 0x0F,
//ascii 0x0025
  0xA3, 0x4A, 0xA5, 0xBD, 0xA5, 0x52, 0xC5,
//ascii 0x0026
  0x4E, 0x92, 0x18, 0x65, 0x1A, 0xBD,
//ascii 0x0027
  0x03,
//ascii 0x0028
  0x6A, 0x95, 0x0A,
//ascii 0x0029
  0x95, 0x6A, 0x05,
//ascii 0x002A
  0x04, 0xF1, 0x33, 0x12,
//ascii 0x002B
  0xC8, 0x8F,
//ascii 0x002C
  0x1A,
//ascii 0x002D
  0x03,
//ascii 0x002E
  0x01,
//ascii 0x002F
  0x48, 0x44, 0x22, 0x12,
//ascii 0x0030
  0x96, 0x99, 0x99, 0x69,
//ascii 0x0031
  0x2E, 0x49, 0x92,
//ascii 0x0032
  0x87, 0x88, 0x24, 0xF1,
//ascii 0x0033
  0x87, 0x68, 0x88, 0x78,
//ascii 0x0034
  0x10, 0x46, 0x49, 0xD2, 0x0F, 0x41,
//ascii 0x0035
  0x1F, 0xF1, 0x88, 0x78,
//ascii 0x0036
  0x1E, 0xF1, 0x99, 0x69,
//ascii 0x0037
  0x8F, 0x48, 0x24, 0x22,
//ascii 0x0038
  0x96, 0x69, 0x99, 0x69,
//ascii 0x0039
  0x96, 0x99, 0x8F, 0x78,
//ascii 0x003A
  0x21,
//ascii 0x003B
  0x02, 0x68,
//ascii 0x003C
  0x48, 0x33, 0x84,
//ascii 0x003D
  0x0F, 0x0F,
//ascii 0x003E
  0x21, 0xCC, 0x12,
//ascii 0x003F
  0x87, 0x48, 0x22, 0x20,
//ascii 0x0040
  0x7C, 0x82, 0xB9, 0xA5, 0xA5, 0xA5, 0xFD, 0x01,
  0x3E,
//ascii 0x0041
  0x08, 0x0A, 0x85, 0x22, 0xF2, 0x89, 0x82,
//ascii 0x0042
  0x3F, 0xC6, 0x17, 0x63, 0xFC,
//ascii 0x0043
  0x7E, 0x84, 0x10, 0xC2, 0xF0,
//ascii 0x0044
  0x5F, 0x18, 0x86, 0x61, 0x18, 0x7E,
//ascii 0x0045
  0x1F, 0xF1, 0x11, 0xF1,
//ascii 0x0046
  0x3F, 0x84, 0xF0, 0x43, 0x08,
//ascii 0x0047
  0x7E, 0x10, 0x04, 0x71, 0x18, 0xFA,
//ascii 0x0048
  0x61, 0x18, 0xFE, 0x61, 0x18, 0x86,
//ascii 0x0049
  0xFF,
//ascii 0x004A
  0x24, 0x49, 0x92, 0x1C,
//ascii 0x004B
  0x51, 0x52, 0x0C, 0x45, 0x12, 0x85,
//ascii 0x004C
  0x21, 0x84, 0x10, 0x42, 0xF8,
//ascii 0x004D
  0xC3, 0xC3, 0xC3, 0xA5, 0xA5, 0x99, 0x99, 0x99,
//ascii 0x004E
  0xE1, 0x58, 0x96, 0x69, 0x1A, 0x87,
//ascii 0x004F
  0xBE, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x7D,
//ascii 0x0050
  0x2F, 0xC6, 0xF8, 0x42, 0x08,
//ascii 0x0051
  0xBE, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x7D, 0x10,
  0x10,
//ascii 0x0052
  0x2F, 0xC6, 0xF8, 0x52, 0x8C,
//ascii 0x0053
  0x1E, 0x31, 0x8C, 0x78,
//ascii 0x0054
  0x9F, 0x10, 0x42, 0x08, 0x21,
//ascii 0x0055
  0x61, 0x18, 0x86, 0x61, 0x18, 0x7A,
//ascii 0x0056
  0x41, 0x91, 0x48, 0x44, 0xA1, 0x50, 0x10,
//ascii 0x0057
  0x31, 0xCA, 0x24, 0x93, 0x52, 0x4A, 0x29, 0x45,
  0x08, 0x21,
//ascii 0x0058
  0xA1, 0xC4, 0x30, 0x8C, 0x24, 0x85,
//ascii 0x0059
  0xA1, 0x24, 0x31, 0x08, 0x82, 0x20,
//ascii 0x005A
  0x8F, 0x44, 0x12, 0xF1,
//ascii 0x005B
  0x4F, 0x92, 0x24, 0x39,
//ascii 0x005C
  0x21, 0x22, 0x44, 0x84,
//ascii 0x005D
  0x27, 0x49, 0x92, 0x3C,
//ascii 0x005E
  0x0C, 0x23, 0x49, 0x21,
//ascii 0x005F
  0x1F,
//ascii 0x0060
  0x09,
//ascii 0x0061
  0x8F, 0x9F, 0xF9,
//ascii 0x0062
  0x21, 0xBC, 0x18, 0x63, 0x7C,
//ascii 0x0063
  0x1E, 0x11, 0xE1,
//ascii 0x0064
  0x10, 0xFA, 0x18, 0x63, 0xF4,
//ascii 0x0065
  0x9E, 0x1F, 0xE1,
//ascii 0x0066
  0x2C, 0x2F, 0x22, 0x22,
//ascii 0x0067
  0xBE, 0x24, 0x39, 0x82, 0x17, 0x86, 0x1E,
//ascii 0x0068
  0x21, 0xBC, 0x18, 0x63, 0x8C,
//ascii 0x0069
  0xFD,
//ascii 0x006A
  0x04, 0x49, 0x92, 0xE4, 0x01,
//ascii 0x006B
  0x11, 0x59, 0x53, 0x99,
//ascii 0x006C
  0xFF,
//ascii 0x006D
  0xEF, 0x91, 0x91, 0x91, 0x91, 0x91,
//ascii 0x006E
  0x2F, 0xC6, 0x18, 0x23,
//ascii 0x006F
  0x2E, 0xC6, 0x18, 0x1D,
//ascii 0x0070
  0x2F, 0xC6, 0x18, 0x5F, 0x08, 0x01,
//ascii 0x0071
  0x3E, 0xC6, 0x18, 0x3D, 0x84, 0x10,
//ascii 0x0072
  0x4F, 0x92,
//ascii 0x0073
  0x17, 0x43, 0x78,
//ascii 0x0074
  0xF2, 0x22, 0x22, 0x0E,
//ascii 0x0075
  0x31, 0xC6, 0x18, 0x3F,
//ascii 0x0076
  0xA1, 0x24, 0x49, 0x0C, 0x03,
//ascii 0x0077
  0x11, 0x55, 0xA9, 0x52, 0x45, 0x84, 0x08,
//ascii 0x0078
  0x99, 0x66, 0x99,
//ascii 0x0079
  0xA1, 0x24, 0x49, 0x0C, 0x43, 0x10, 0x03,
//ascii 0x007A
  0x1F, 0x11, 0x22, 0x3E,
//ascii 0x007B
  0x96, 0x94, 0x48, 0x32,
//ascii 0x007C
  0xFF, 0x07,
//ascii 0x007D
  0x93, 0x44, 0x4A, 0x1A,
//ascii 0x007E
  0xC3,
};

const bagl_font_character_t charactersOPEN_SANS_REGULAR_11PX[95] = {
  { 0,     0,  3,0, 0, 0 }, //asciii 0x0020
  { 0,     0,  3,1, 1, 1 }, //asciii 0x0021
  { 0,     1,  4,1, 1, 1 }, //asciii 0x0022
  { 0,     2,  7,0, 1, 0 }, //asciii 0x0023
  { 0,     9,  6,1, 2, 1 }, //asciii 0x0024
  { 0,    13,  9,1, 1, 1 }, //asciii 0x0025
  { 0,    20,  9,1, 1, 2 }, //asciii 0x0026
  { 0,    26,  2,1, 1, 0 }, //asciii 0x0027
  { 0,    27,  3,0, 1, 1 }, //asciii 0x0028
  { 0,    30,  3,1, 1, 0 }, //asciii 0x0029
  { 0,    33,  6,0, 1, 0 }, //asciii 0x002A
  { 0,    37,  6,0, 4, 0 }, //asciii 0x002B
  { 0,    39,  3,0, 8, 1 }, //asciii 0x002C
  { 0,    40,  4,1, 6, 1 }, //asciii 0x002D
  { 0,    41,  3,1, 8, 1 }, //asciii 0x002E
  { 0,    42,  4,0, 1, 0 }, //asciii 0x002F
  { 0,    46,  6,1, 1, 1 }, //asciii 0x0030
  { 0,    50,  6,1, 1, 2 }, //asciii 0x0031
  { 0,    53,  6,1, 1, 1 }, //asciii 0x0032
  { 0,    57,  6,1, 1, 1 }, //asciii 0x0033
  { 0,    61,  8,1, 1, 1 }, //asciii 0x0034
  { 0,    67,  6,1, 1, 1 }, //asciii 0x0035
  { 0,    71,  6,1, 1, 1 }, //asciii 0x0036
  { 0,    75,  6,1, 1, 1 }, //asciii 0x0037
  { 0,    79,  6,1, 1, 1 }, //asciii 0x0038
  { 0,    83,  6,1, 1, 1 }, //asciii 0x0039
  { 0,    87,  3,1, 3, 1 }, //asciii 0x003A
  { 0,    88,  3,0, 3, 1 }, //asciii 0x003B
  { 0,    90,  6,1, 2, 1 }, //asciii 0x003C
  { 0,    93,  6,1, 4, 1 }, //asciii 0x003D
  { 0,    95,  6,1, 2, 1 }, //asciii 0x003E
  { 0,    98,  5,1, 1, 0 }, //asciii 0x003F
  { 0,   102, 10,1, 1, 1 }, //asciii 0x0040
  { 0,   111,  7,0, 1, 0 }, //asciii 0x0041
  { 0,   118,  7,1, 1, 1 }, //asciii 0x0042
  { 0,   123,  7,1, 1, 1 }, //asciii 0x0043
  { 0,   128,  8,1, 1, 1 }, //asciii 0x0044
  { 0,   134,  6,1, 1, 1 }, //asciii 0x0045
  { 0,   138,  6,1, 1, 0 }, //asciii 0x0046
  { 0,   143,  8,1, 1, 1 }, //asciii 0x0047
  { 0,   149,  8,1, 1, 1 }, //asciii 0x0048
  { 0,   155,  3,1, 1, 1 }, //asciii 0x0049
  { 0,   156,  4,0, 1, 1 }, //asciii 0x004A
  { 0,   160,  7,1, 1, 0 }, //asciii 0x004B
  { 0,   166,  6,1, 1, 0 }, //asciii 0x004C
  { 0,   171, 10,1, 1, 1 }, //asciii 0x004D
  { 0,   179,  8,1, 1, 1 }, //asciii 0x004E
  { 0,   185,  9,1, 1, 1 }, //asciii 0x004F
  { 0,   192,  7,1, 1, 1 }, //asciii 0x0050
  { 0,   197,  9,1, 1, 1 }, //asciii 0x0051
  { 0,   206,  7,1, 1, 1 }, //asciii 0x0052
  { 0,   211,  6,1, 1, 1 }, //asciii 0x0053
  { 0,   215,  7,1, 1, 1 }, //asciii 0x0054
  { 0,   220,  8,1, 1, 1 }, //asciii 0x0055
  { 0,   226,  7,0, 1, 0 }, //asciii 0x0056
  { 0,   233, 10,0, 1, 0 }, //asciii 0x0057
  { 0,   243,  7,0, 1, 1 }, //asciii 0x0058
  { 0,   249,  6,0, 1, 0 }, //asciii 0x0059
  { 0,   255,  6,1, 1, 1 }, //asciii 0x005A
  { 0,   259,  4,1, 1, 0 }, //asciii 0x005B
  { 0,   263,  4,0, 1, 0 }, //asciii 0x005C
  { 0,   267,  4,0, 1, 1 }, //asciii 0x005D
  { 0,   271,  6,0, 1, 0 }, //asciii 0x005E
  { 0,   275,  6,0, 10, 1 }, //asciii 0x005F
  { 0,   276,  6,2, 0, 2 }, //asciii 0x0060
  { 0,   277,  6,1, 3, 1 }, //asciii 0x0061
  { 0,   280,  7,1, 1, 1 }, //asciii 0x0062
  { 0,   285,  5,1, 3, 0 }, //asciii 0x0063
  { 0,   288,  7,1, 1, 1 }, //asciii 0x0064
  { 0,   293,  6,1, 3, 1 }, //asciii 0x0065
  { 0,   296,  5,0, 1, 1 }, //asciii 0x0066
  { 0,   300,  6,0, 3, 0 }, //asciii 0x0067
  { 0,   307,  7,1, 1, 1 }, //asciii 0x0068
  { 0,   312,  3,1, 1, 1 }, //asciii 0x0069
  { 0,   313,  4,0, 1, 1 }, //asciii 0x006A
  { 0,   318,  6,1, 1, 1 }, //asciii 0x006B
  { 0,   322,  3,1, 1, 1 }, //asciii 0x006C
  { 0,   323, 10,1, 3, 1 }, //asciii 0x006D
  { 0,   329,  7,1, 3, 1 }, //asciii 0x006E
  { 0,   333,  7,1, 3, 1 }, //asciii 0x006F
  { 0,   337,  7,1, 3, 1 }, //asciii 0x0070
  { 0,   343,  7,1, 3, 1 }, //asciii 0x0071
  { 0,   349,  4,1, 3, 0 }, //asciii 0x0072
  { 0,   351,  5,1, 3, 0 }, //asciii 0x0073
  { 0,   354,  4,0, 2, 0 }, //asciii 0x0074
  { 0,   358,  7,1, 3, 1 }, //asciii 0x0075
  { 0,   362,  6,0, 3, 0 }, //asciii 0x0076
  { 0,   367,  9,0, 3, 0 }, //asciii 0x0077
  { 0,   374,  6,1, 3, 1 }, //asciii 0x0078
  { 0,   377,  6,0, 3, 0 }, //asciii 0x0079
  { 0,   384,  5,0, 3, 0 }, //asciii 0x007A
  { 0,   388,  4,1, 1, 0 }, //asciii 0x007B
  { 0,   392,  6,3, 1, 2 }, //asciii 0x007C
  { 0,   394,  4,0, 1, 1 }, //asciii 0x007D
  { 0,   398,  6,1, 4, 1 }, //asciii 0x007E
};

const bagl_font_t fontOPEN_SANS_REGULAR_11PX = {
  399, // bitmap len
  BAGL_FONT_OPEN_SANS_REGULAR_11px, // font id
  1, // bpp => 1 for B&W
  12, // height (does already contain the nb of skipped lines)
  9, // baseline (does already contain the nb of skipped lines)
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_REGULAR_11PX,
  bitmapOPEN_SANS_REGULAR_11PX
};
