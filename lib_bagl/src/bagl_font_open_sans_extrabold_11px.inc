const unsigned char bitmapOPEN_SANS_EXTRABOLD_11PX[] = {
//ascii 0x0020
//ascii 0x0021
  0xFF, 0xF3,
//ascii 0x0022
  0x3B, 0x25,
//ascii 0x0023
  0x24, 0x92, 0x9F, 0xF2, 0x97, 0x48, 0x24,
//ascii 0x0024
  0x88, 0xB7, 0x2C, 0x0E, 0x87, 0xA6, 0x1F, 0x02,
//ascii 0x0025
  0x4E, 0xAC, 0xB1, 0xC2, 0x7E, 0x7E, 0x63, 0x8D,
  0x35, 0x72,
//ascii 0x0026
  0x3C, 0x6C, 0xD8, 0xE0, 0xE0, 0xED, 0x9E, 0x3D,
  0xDF,
//ascii 0x0027
  0x17,
//ascii 0x0028
  0xB4, 0xB7, 0xCD, 0x26,
//ascii 0x0029
  0xD9, 0x6C, 0x7B, 0x0B,
//ascii 0x002A
  0x4C, 0xFB, 0x7B, 0x1E,
//ascii 0x002B
  0x0C, 0xF3, 0x33, 0x0C,
//ascii 0x002C
  0xD6,
//ascii 0x002D
  0xFF,
//ascii 0x002E
  0x0F,
//ascii 0x002F
  0x18, 0x31, 0x66, 0x8C, 0x18,
//ascii 0x0030
  0xDE, 0x3C, 0xCF, 0xF3, 0x3C, 0x7B,
//ascii 0x0031
  0xEC, 0xCF, 0xCC, 0xCC,
//ascii 0x0032
  0x6E, 0x63, 0xCC, 0x9C, 0xF9,
//ascii 0x0033
  0x0F, 0x63, 0x87, 0x31, 0x7E,
//ascii 0x0034
  0x18, 0xC7, 0x69, 0xDA, 0x8F, 0x61,
//ascii 0x0035
  0x3F, 0xF3, 0xCC, 0xFC,
//ascii 0x0036
  0x9C, 0x21, 0x7C, 0xF3, 0x3C, 0x7B,
//ascii 0x0037
  0x1F, 0x63, 0xCC, 0x18, 0x33,
//ascii 0x0038
  0xDE, 0x3C, 0x7B, 0xF3, 0x3C, 0x7B,
//ascii 0x0039
  0xDE, 0x3C, 0xCF, 0x3E, 0x8C, 0x39,
//ascii 0x003A
  0x0F, 0x0F,
//ascii 0x003B
  0x36, 0x60, 0x0D,
//ascii 0x003C
  0x98, 0x99, 0x61, 0x18, 0x06,
//ascii 0x003D
  0x3F, 0xF0, 0x03,
//ascii 0x003E
  0xC3, 0x30, 0xCC, 0xCC,
//ascii 0x003F
  0x0F, 0x63, 0x67, 0x80, 0x31,
//ascii 0x0040
  0xF8, 0x30, 0x66, 0xF7, 0xD6, 0x4B, 0xAF, 0xBD,
  0x9F, 0x01, 0xF8, 0x01,
//ascii 0x0041
  0x18, 0x3C, 0x3C, 0x7E, 0x66, 0x7E, 0xE7, 0xC3,
//ascii 0x0042
  0x7F, 0xEF, 0xB7, 0xF7, 0xFE,
//ascii 0x0043
  0x7E, 0x8C, 0x31, 0xC6, 0xF0,
//ascii 0x0044
  0xDF, 0x3C, 0xCF, 0xF3, 0x3C, 0x7F,
//ascii 0x0045
  0x3F, 0xF3, 0x33, 0xF3,
//ascii 0x0046
  0x7F, 0x8C, 0x37, 0xC6, 0x18,
//ascii 0x0047
  0xFE, 0x30, 0xEC, 0xF3, 0x3C, 0xFB,
//ascii 0x0048
  0xF3, 0x3C, 0xFF, 0xF3, 0x3C, 0xCF,
//ascii 0x0049
  0xFF, 0xFF,
//ascii 0x004A
  0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x07,
//ascii 0x004B
  0xF3, 0xD9, 0xE6, 0xF1, 0xD9, 0xCC, 0xE6,
//ascii 0x004C
  0x63, 0x8C, 0x31, 0xC6, 0xF8,
//ascii 0x004D
  0xC7, 0x8F, 0xBF, 0x7F, 0xFF, 0x7E, 0xF5, 0xEE,
  0xDD,
//ascii 0x004E
  0xE7, 0xF3, 0xFB, 0xBD, 0xDF, 0xCF, 0xE7,
//ascii 0x004F
  0xBE, 0xF1, 0x78, 0x3C, 0x1E, 0x8F, 0x7D,
//ascii 0x0050
  0x7F, 0xEF, 0xFD, 0xC7, 0x18,
//ascii 0x0051
  0xBE, 0xF1, 0x78, 0x3C, 0x1E, 0x8F, 0x7D, 0x30,
  0x30,
//ascii 0x0052
  0xCF, 0xB6, 0x6D, 0xCF, 0xB6, 0xCD,
//ascii 0x0053
  0x7E, 0x8C, 0xE3, 0x38, 0x7F,
//ascii 0x0054
  0x3F, 0xC3, 0x30, 0x0C, 0xC3, 0x30,
//ascii 0x0055
  0xF3, 0x3C, 0xCF, 0xF3, 0x3C, 0x7B,
//ascii 0x0056
  0xF3, 0x3C, 0xCF, 0x9E, 0xE7, 0x31,
//ascii 0x0057
  0x73, 0xB6, 0x9B, 0xDD, 0xAC, 0x66, 0x35, 0xEE,
  0x70, 0x07, 0x1B,
//ascii 0x0058
  0xC3, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x66, 0xC3,
//ascii 0x0059
  0x63, 0x9B, 0x8D, 0x83, 0xC1, 0x60, 0x30,
//ascii 0x005A
  0x7F, 0x18, 0x0E, 0xC3, 0x70, 0x18, 0xFE,
//ascii 0x005B
  0x3F, 0x33, 0x33, 0x33, 0xF3,
//ascii 0x005C
  0x43, 0x18, 0xC3, 0x18, 0xC2,
//ascii 0x005D
  0xCF, 0xCC, 0xCC, 0xCC, 0xFC,
//ascii 0x005E
  0x0C, 0xE3, 0x49, 0x33,
//ascii 0x005F
  0x3F,
//ascii 0x0060
  0x33,
//ascii 0x0061
  0x1E, 0xEC, 0xCF, 0xB3, 0x0F,
//ascii 0x0062
  0xC3, 0xF0, 0x6D, 0xFB, 0xBE, 0x7D,
//ascii 0x0063
  0xBC, 0x71, 0x1C, 0x06, 0x0F,
//ascii 0x0064
  0x30, 0xCC, 0xDB, 0xF7, 0x6D, 0xF3,
//ascii 0x0065
  0x3C, 0xF3, 0xFF, 0x60, 0xE0, 0x01,
//ascii 0x0066
  0xDC, 0x7C, 0x63, 0x8C, 0x31,
//ascii 0x0067
  0x7E, 0x9B, 0xCD, 0x63, 0xF0, 0x8D, 0xC7, 0x3E,
//ascii 0x0068
  0x63, 0xFC, 0xBD, 0xF7, 0xDE,
//ascii 0x0069
  0xF3, 0xFF,
//ascii 0x006A
  0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0x07,
//ascii 0x006B
  0xC3, 0xB0, 0x7D, 0xCF, 0xB3, 0xED,
//ascii 0x006C
  0xFF, 0xFF,
//ascii 0x006D
  0xED, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB,
//ascii 0x006E
  0x7D, 0xEF, 0xBD, 0x37,
//ascii 0x006F
  0x1C, 0xDB, 0xFD, 0x6E, 0xE3,
//ascii 0x0070
  0xDF, 0xB6, 0xEF, 0xDB, 0x37, 0x0C, 0x03,
//ascii 0x0071
  0xBE, 0x7D, 0xDF, 0xB6, 0x0F, 0xC3, 0x30,
//ascii 0x0072
  0xFD, 0x33, 0x33,
//ascii 0x0073
  0x6F, 0x3C, 0x8F, 0x1F,
//ascii 0x0074
  0xE6, 0x1B, 0x63, 0x0C, 0x07,
//ascii 0x0075
  0x7B, 0xEF, 0xBD, 0x2F,
//ascii 0x0076
  0x63, 0x9B, 0xCD, 0xC6, 0xE1,
//ascii 0x0077
  0x33, 0xDB, 0xE6, 0x9F, 0x7F, 0xCC, 0x30, 0x03,
//ascii 0x0078
  0x77, 0x1B, 0x87, 0x63, 0xBB, 0x03,
//ascii 0x0079
  0x63, 0x9B, 0x8D, 0xC6, 0xE1, 0x70, 0x18, 0x0E,
//ascii 0x007A
  0x3F, 0xC6, 0x30, 0xC6, 0x0F,
//ascii 0x007B
  0x9C, 0x31, 0x76, 0x0E, 0x63, 0x8C, 0x03,
//ascii 0x007C
  0xFF, 0xFF, 0x3F,
//ascii 0x007D
  0xC7, 0x18, 0xC3, 0xB9, 0x31, 0xE6,
//ascii 0x007E
  0x6F, 0x0F,
};

const bagl_font_character_t charactersOPEN_SANS_EXTRABOLD_11PX[95] = {
  { 0,     0,  3,0, 0, 0 }, //asciii 0x0020
  { 0,     0,  3,1, 1, 0 }, //asciii 0x0021
  { 0,     2,  6,1, 1, 0 }, //asciii 0x0022
  { 0,     4,  7,0, 1, 0 }, //asciii 0x0023
  { 0,    11,  6,0, 0, 0 }, //asciii 0x0024
  { 0,    19, 11,0, 1, 1 }, //asciii 0x0025
  { 0,    29,  9,0, 1, 0 }, //asciii 0x0026
  { 0,    38,  3,1, 1, 0 }, //asciii 0x0027
  { 0,    39,  4,0, 1, 1 }, //asciii 0x0028
  { 0,    43,  4,1, 1, 0 }, //asciii 0x0029
  { 0,    47,  6,0, 1, 0 }, //asciii 0x002A
  { 0,    51,  6,0, 2, 0 }, //asciii 0x002B
  { 0,    55,  3,0, 7, 0 }, //asciii 0x002C
  { 0,    56,  4,0, 5, 0 }, //asciii 0x002D
  { 0,    57,  3,1, 7, 0 }, //asciii 0x002E
  { 0,    58,  5,0, 1, 0 }, //asciii 0x002F
  { 0,    63,  8,1, 1, 1 }, //asciii 0x0030
  { 0,    69,  6,1, 1, 1 }, //asciii 0x0031
  { 0,    73,  7,1, 1, 1 }, //asciii 0x0032
  { 0,    78,  7,1, 1, 1 }, //asciii 0x0033
  { 0,    83,  8,1, 1, 1 }, //asciii 0x0034
  { 0,    89,  6,1, 1, 1 }, //asciii 0x0035
  { 0,    93,  8,1, 1, 1 }, //asciii 0x0036
  { 0,    99,  7,1, 1, 1 }, //asciii 0x0037
  { 0,   104,  8,1, 1, 1 }, //asciii 0x0038
  { 0,   110,  8,1, 1, 1 }, //asciii 0x0039
  { 0,   116,  3,1, 3, 0 }, //asciii 0x003A
  { 0,   118,  3,0, 3, 0 }, //asciii 0x003B
  { 0,   121,  5,0, 2, 0 }, //asciii 0x003C
  { 0,   126,  6,0, 4, 0 }, //asciii 0x003D
  { 0,   129,  5,0, 2, 0 }, //asciii 0x003E
  { 0,   133,  6,0, 1, 1 }, //asciii 0x003F
  { 0,   138, 10,0, 1, 0 }, //asciii 0x0040
  { 0,   150,  8,0, 1, 0 }, //asciii 0x0041
  { 0,   158,  7,1, 1, 1 }, //asciii 0x0042
  { 0,   163,  7,1, 1, 1 }, //asciii 0x0043
  { 0,   168,  8,1, 1, 1 }, //asciii 0x0044
  { 0,   174,  6,1, 1, 1 }, //asciii 0x0045
  { 0,   178,  6,1, 1, 0 }, //asciii 0x0046
  { 0,   183,  8,1, 1, 1 }, //asciii 0x0047
  { 0,   189,  8,1, 1, 1 }, //asciii 0x0048
  { 0,   195,  4,1, 1, 1 }, //asciii 0x0049
  { 0,   197,  5,0, 1, 1 }, //asciii 0x004A
  { 0,   203,  8,1, 1, 0 }, //asciii 0x004B
  { 0,   210,  6,1, 1, 0 }, //asciii 0x004C
  { 0,   215, 11,1, 1, 1 }, //asciii 0x004D
  { 0,   224,  9,1, 1, 1 }, //asciii 0x004E
  { 0,   231,  9,1, 1, 1 }, //asciii 0x004F
  { 0,   238,  7,1, 1, 1 }, //asciii 0x0050
  { 0,   243,  9,1, 1, 1 }, //asciii 0x0051
  { 0,   252,  8,1, 1, 1 }, //asciii 0x0052
  { 0,   258,  6,1, 1, 0 }, //asciii 0x0053
  { 0,   263,  6,0, 1, 0 }, //asciii 0x0054
  { 0,   269,  8,1, 1, 1 }, //asciii 0x0055
  { 0,   275,  6,0, 1, 0 }, //asciii 0x0056
  { 0,   281, 11,0, 1, 0 }, //asciii 0x0057
  { 0,   292,  8,0, 1, 0 }, //asciii 0x0058
  { 0,   300,  7,0, 1, 0 }, //asciii 0x0059
  { 0,   307,  7,0, 1, 0 }, //asciii 0x005A
  { 0,   314,  5,1, 1, 0 }, //asciii 0x005B
  { 0,   319,  5,0, 1, 0 }, //asciii 0x005C
  { 0,   324,  5,0, 1, 1 }, //asciii 0x005D
  { 0,   329,  7,0, 1, 1 }, //asciii 0x005E
  { 0,   333,  7,0, 10, 1 }, //asciii 0x005F
  { 0,   334,  7,2, 0, 2 }, //asciii 0x0060
  { 0,   335,  7,0, 3, 1 }, //asciii 0x0061
  { 0,   340,  7,1, 1, 0 }, //asciii 0x0062
  { 0,   346,  6,0, 3, 0 }, //asciii 0x0063
  { 0,   351,  7,0, 1, 1 }, //asciii 0x0064
  { 0,   357,  7,0, 3, 0 }, //asciii 0x0065
  { 0,   363,  6,0, 1, 1 }, //asciii 0x0066
  { 0,   368,  7,0, 3, 0 }, //asciii 0x0067
  { 0,   376,  7,1, 1, 1 }, //asciii 0x0068
  { 0,   381,  4,1, 1, 1 }, //asciii 0x0069
  { 0,   383,  5,0, 1, 1 }, //asciii 0x006A
  { 0,   389,  7,1, 1, 0 }, //asciii 0x006B
  { 0,   395,  4,1, 1, 1 }, //asciii 0x006C
  { 0,   397, 10,1, 3, 1 }, //asciii 0x006D
  { 0,   403,  7,1, 3, 1 }, //asciii 0x006E
  { 0,   407,  7,0, 3, 0 }, //asciii 0x006F
  { 0,   412,  7,1, 3, 0 }, //asciii 0x0070
  { 0,   419,  7,0, 3, 1 }, //asciii 0x0071
  { 0,   426,  5,1, 3, 0 }, //asciii 0x0072
  { 0,   429,  6,1, 3, 0 }, //asciii 0x0073
  { 0,   433,  5,0, 2, 0 }, //asciii 0x0074
  { 0,   438,  7,1, 3, 1 }, //asciii 0x0075
  { 0,   442,  7,0, 3, 0 }, //asciii 0x0076
  { 0,   447, 10,0, 3, 0 }, //asciii 0x0077
  { 0,   455,  7,0, 3, 0 }, //asciii 0x0078
  { 0,   461,  8,0, 3, 1 }, //asciii 0x0079
  { 0,   469,  6,0, 3, 0 }, //asciii 0x007A
  { 0,   474,  5,0, 1, 0 }, //asciii 0x007B
  { 0,   481,  6,2, 1, 2 }, //asciii 0x007C
  { 0,   484,  5,0, 1, 0 }, //asciii 0x007D
  { 0,   490,  6,0, 4, 0 }, //asciii 0x007E
};

const bagl_font_t fontOPEN_SANS_EXTRABOLD_11PX = {
  492, // bitmap len
  BAGL_FONT_OPEN_SANS_EXTRABOLD_11px, // font id
  1, // bpp => 1 for B&W
  12, // height (does already contain the nb of skipped lines)
  9, // baseline (does already contain the nb of skipped lines)
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_EXTRABOLD_11PX,
  bitmapOPEN_SANS_EXTRABOLD_11PX
};
