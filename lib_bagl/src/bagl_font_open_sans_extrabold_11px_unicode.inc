const unsigned char bitmapOPEN_SANS_EXTRABOLD_11PX_UNICODE[] = {
//unicode 0x0000A1
  0x1B, 0xB6, 0x6D,
//unicode 0x0000BF
  0x0C, 0x03, 0x20, 0xCE, 0x30, 0x78,
//unicode 0x0000C0
  0x0C, 0x18, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C1
  0x30, 0x18, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C2
  0x38, 0x2C, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C3
  0x2C, 0x34, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C4
  0x2C, 0x2C, 0x00, 0x3C, 0x3C, 0x3C, 0x7E, 0x66,
  0x7E, 0xE7, 0xC3,
//unicode 0x0000C6
  0xF8, 0x43, 0x03, 0x1B, 0xD8, 0xE3, 0x06, 0x3F,
  0x98, 0x61, 0x7C,
//unicode 0x0000C7
  0xFE, 0x30, 0x0C, 0xC3, 0x30, 0x78, 0x0C, 0xC2,
//unicode 0x0000C8
  0x86, 0x81, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000C9
  0xCC, 0x80, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000CA
  0x6E, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000CB
  0x6B, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x0000CD
  0x36, 0x30, 0x33, 0x33, 0x33, 0x03,
//unicode 0x0000CE
  0xC6, 0x02, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61,
//unicode 0x0000CF
  0xC9, 0x02, 0x18, 0x86, 0x61, 0x18, 0x86, 0x61,
//unicode 0x0000D1
  0x2C, 0x3C, 0x00, 0x67, 0x67, 0x6F, 0x6F, 0x7B,
  0x7B, 0x73, 0x73,
//unicode 0x0000D3
  0x38, 0x08, 0x00, 0x3E, 0x63, 0x63, 0x63, 0x63,
  0x63, 0x63, 0x3E,
//unicode 0x0000D4
  0x1C, 0x36, 0x00, 0x3E, 0x63, 0x63, 0x63, 0x63,
  0x63, 0x63, 0x3E,
//unicode 0x0000D5
  0x2C, 0x1A, 0x00, 0x3E, 0x63, 0x63, 0x63, 0x63,
  0x63, 0x63, 0x3E,
//unicode 0x0000D6
  0x34, 0x36, 0x00, 0x3E, 0x63, 0x63, 0x63, 0x63,
  0x63, 0x63, 0x3E,
//unicode 0x0000D9
  0x0E, 0x04, 0x60, 0x36, 0x9B, 0xCD, 0x66, 0xB3,
  0x99, 0x07,
//unicode 0x0000DA
  0x18, 0x06, 0x60, 0x36, 0x9B, 0xCD, 0x66, 0xB3,
  0x99, 0x07,
//unicode 0x0000DB
  0x1C, 0x0B, 0x60, 0x36, 0x9B, 0xCD, 0x66, 0xB3,
  0x99, 0x07,
//unicode 0x0000DC
  0x16, 0x1B, 0x60, 0x36, 0x9B, 0xCD, 0x66, 0xB3,
  0x99, 0x07,
//unicode 0x0000DF
  0x9E, 0xD9, 0x6E, 0xB3, 0xDB, 0xCD, 0x7F,
//unicode 0x0000E0
  0x0C, 0x0C, 0xC0, 0x03, 0xF3, 0xCD, 0x66, 0x3E,
//unicode 0x0000E1
  0x38, 0x04, 0xC0, 0x07, 0xF3, 0xDD, 0x6E, 0x3E,
//unicode 0x0000E2
  0x1C, 0x1B, 0xC0, 0x03, 0xF3, 0xCD, 0x66, 0x3E,
//unicode 0x0000E3
  0x2C, 0x1F, 0xC0, 0x07, 0xF3, 0xDD, 0x6E, 0x3E,
//unicode 0x0000E4
  0x24, 0x1A, 0xC0, 0x07, 0xF3, 0xDD, 0x6E, 0x3E,
//unicode 0x0000E6
  0xFE, 0xC1, 0xE4, 0xFF, 0x0D, 0x37, 0xB8, 0x07,
//unicode 0x0000E7
  0xBC, 0x71, 0x1C, 0x06, 0xCF, 0x60, 0x0C,
//unicode 0x0000E8
  0x0C, 0x0C, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000E9
  0x30, 0x0C, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000EA
  0x1C, 0x1B, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000EB
  0x36, 0x1B, 0x80, 0x67, 0xFE, 0x1F, 0x0C, 0x3C,
//unicode 0x0000ED
  0x36, 0x30, 0x33, 0x33, 0x03,
//unicode 0x0000EE
  0xCE, 0x06, 0x18, 0x86, 0x61, 0x18, 0x06,
//unicode 0x0000EF
  0x55, 0x30, 0x33, 0x33, 0x03,
//unicode 0x0000F1
  0x96, 0x06, 0x74, 0xDB, 0xB6, 0x6D, 0x1B,
//unicode 0x0000F3
  0x38, 0x04, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F4
  0x1C, 0x1B, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F5
  0x2C, 0x0D, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F6
  0x34, 0x1A, 0x80, 0x63, 0xBB, 0xDF, 0x6D, 0x1C,
//unicode 0x0000F9
  0x06, 0x03, 0x6C, 0xDB, 0xB6, 0x6D, 0x17,
//unicode 0x0000FA
  0x18, 0x03, 0x6C, 0xDB, 0xB6, 0x6D, 0x17,
//unicode 0x0000FB
  0xCE, 0x06, 0x6C, 0xDB, 0xB6, 0x6D, 0x17,
//unicode 0x0000FC
  0x92, 0x06, 0x6C, 0xDB, 0xB6, 0x6D, 0x17,
//unicode 0x00011E
  0x12, 0x0E, 0xC0, 0x37, 0x18, 0xEC, 0x66, 0xB3,
  0x99, 0x0F,
//unicode 0x00011F
  0x36, 0x0E, 0xC0, 0x6F, 0xB3, 0x79, 0x0C, 0xBE,
  0xF1, 0xD8, 0x03,
//unicode 0x000130
  0x1B, 0xB6, 0x6D, 0xDB,
//unicode 0x000131
  0xDB, 0xB6, 0x01,
//unicode 0x000152
  0xFE, 0x8D, 0x31, 0xC6, 0x78, 0x63, 0x8C, 0x31,
  0x86, 0x7F,
//unicode 0x000153
  0xDC, 0xB3, 0xD3, 0xF9, 0xEF, 0x60, 0x07, 0xEE,
  0x01,
//unicode 0x00015E
  0xBE, 0x61, 0x38, 0x1C, 0x9E, 0x7D, 0x0C, 0xC2,
//unicode 0x00015F
  0x6F, 0x3C, 0x87, 0x9F, 0x31, 0x07,
//unicode 0x000401
  0x6B, 0x83, 0x37, 0xC6, 0x1B, 0x63, 0x3C,
//unicode 0x000410
  0x3C, 0x3C, 0x3C, 0x7E, 0x66, 0x7E, 0xE7, 0xC3,
//unicode 0x000411
  0xDF, 0x30, 0x7C, 0xDB, 0xBE, 0x3D,
//unicode 0x000412
  0xDF, 0xB6, 0x3D, 0xDB, 0xBE, 0x7D,
//unicode 0x000413
  0xDF, 0x30, 0x0C, 0xC3, 0x30, 0x0C,
//unicode 0x000414
  0xFC, 0x98, 0x31, 0x63, 0xC6, 0xCC, 0x98, 0xB1,
  0xFF, 0x83, 0x07, 0x0F, 0x06,
//unicode 0x000415
  0x6F, 0x8C, 0x37, 0xC6, 0x78,
//unicode 0x000416
  0x77, 0xC7, 0x6E, 0xF0, 0x07, 0xFE, 0xC0, 0x1F,
  0xFC, 0x87, 0xDD, 0xB8, 0x3B,
//unicode 0x000417
  0x1E, 0x19, 0x8C, 0x01, 0x83, 0xC7, 0x3E,
//unicode 0x000418
  0x73, 0x73, 0x7B, 0x7B, 0x6F, 0x6F, 0x67, 0x67,
//unicode 0x000419
  0x36, 0x1C, 0x00, 0x73, 0x73, 0x7B, 0x7B, 0x6F,
  0x6F, 0x67, 0x67,
//unicode 0x00041A
  0xF3, 0xD9, 0xE6, 0xF1, 0xD9, 0xCC, 0xE6,
//unicode 0x00041B
  0x7C, 0x6C, 0x6C, 0x6C, 0x66, 0x66, 0x66, 0x63,
//unicode 0x00041C
  0xC7, 0x1D, 0xF7, 0xDE, 0x7B, 0xEF, 0xAD, 0xB6,
  0xDB, 0x6E,
//unicode 0x00041D
  0xB3, 0xD9, 0xEC, 0x37, 0x9B, 0xCD, 0x66,
//unicode 0x00041E
  0x3E, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x3E,
//unicode 0x00041F
  0xBF, 0xD9, 0x6C, 0x36, 0x9B, 0xCD, 0x66,
//unicode 0x000420
  0xDF, 0xB6, 0x6F, 0xDF, 0x30, 0x0C,
//unicode 0x000421
  0xFE, 0x30, 0x0C, 0xC3, 0x30, 0x78,
//unicode 0x000422
  0x7F, 0x06, 0x83, 0xC1, 0x60, 0x30, 0x18,
//unicode 0x000423
  0xC7, 0x66, 0x66, 0x6C, 0x3C, 0x38, 0x18, 0x1F,
//unicode 0x000424
  0x30, 0xF0, 0x63, 0xDB, 0xEC, 0xB7, 0xDB, 0xC6,
  0x0F, 0x0C,
//unicode 0x000425
  0x67, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x66, 0xE7,
//unicode 0x000426
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF,
  0xC0, 0xC0, 0xC0,
//unicode 0x000427
  0xB3, 0xD9, 0x6C, 0x36, 0xFB, 0xC1, 0x60,
//unicode 0x000428
  0x33, 0x9B, 0xD9, 0xCC, 0x66, 0x36, 0xB3, 0x99,
  0xCD, 0xEC, 0x7F,
//unicode 0x000429
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0xF3, 0xFF, 0x00, 0x0C, 0xC0, 0x00,
  0x0C,
//unicode 0x00042A
  0x0F, 0x0C, 0x0C, 0x7C, 0x6C, 0xEC, 0x6C, 0x7C,
//unicode 0x00042B
  0xC3, 0x86, 0x0D, 0x7B, 0xB6, 0x6D, 0xDB, 0xB6,
  0x67,
//unicode 0x00042C
  0xC3, 0x30, 0x7C, 0xDB, 0xBE, 0x3D,
//unicode 0x00042D
  0x1F, 0x18, 0xCC, 0x07, 0x83, 0xC5, 0x3E,
//unicode 0x00042E
  0xE3, 0x99, 0xD9, 0xCE, 0x3E, 0xB6, 0xB1, 0x99,
  0xCD, 0x6C, 0x3C,
//unicode 0x00042F
  0x3C, 0x36, 0x36, 0x36, 0x3C, 0x36, 0x36, 0x37,
//unicode 0x000430
  0x3E, 0x98, 0xEF, 0x76, 0xF3, 0x01,
//unicode 0x000431
  0x38, 0x87, 0xC1, 0x77, 0xB3, 0xD9, 0x38,
//unicode 0x000432
  0xDF, 0xF6, 0x6C, 0xDB, 0x07,
//unicode 0x000433
  0x7F, 0x8C, 0x31, 0x06,
//unicode 0x000434
  0x7C, 0x6C, 0x64, 0x66, 0x66, 0xFF, 0xC3, 0xC3,
//unicode 0x000435
  0x3C, 0xD3, 0xFF, 0x60, 0xE0, 0x01,
//unicode 0x000436
  0x36, 0x63, 0x3B, 0xFC, 0xC1, 0x1B, 0x36, 0x73,
  0x73,
//unicode 0x000437
  0x1E, 0xC6, 0xE0, 0xF9, 0x07,
//unicode 0x000438
  0xB3, 0xDD, 0xEF, 0x77, 0x9B, 0x01,
//unicode 0x000439
  0x33, 0x0F, 0x60, 0xB6, 0xFB, 0xFD, 0x6E, 0x33,
//unicode 0x00043A
  0xBB, 0xCD, 0xE3, 0xB1, 0xD9, 0x01,
//unicode 0x00043B
  0x7C, 0x6C, 0x6C, 0x64, 0x66, 0x67,
//unicode 0x00043C
  0x77, 0x77, 0x77, 0x77, 0x7F, 0x6B,
//unicode 0x00043D
  0xDB, 0xF6, 0x6D, 0xDB, 0x06,
//unicode 0x00043E
  0x1C, 0xDB, 0xFD, 0x6E, 0xE3,
//unicode 0x00043F
  0xDF, 0xB6, 0x6D, 0xDB, 0x06,
//unicode 0x000440
  0xDF, 0xB6, 0xEF, 0xDB, 0x37, 0x0C, 0x03,
//unicode 0x000441
  0xBC, 0x71, 0x1C, 0x26, 0x0F,
//unicode 0x000442
  0x7F, 0x06, 0x83, 0xC1, 0x60,
//unicode 0x000443
  0x63, 0x36, 0x36, 0x34, 0x1C, 0x1C, 0x1C, 0x0C,
  0x0E,
//unicode 0x000444
  0x18, 0x30, 0xF8, 0xD9, 0xB6, 0x6D, 0xDB, 0x36,
  0x3F, 0x18, 0x30, 0x60,
//unicode 0x000445
  0x77, 0x1B, 0x87, 0x63, 0xBB, 0x03,
//unicode 0x000446
  0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x7F, 0x60, 0x60,
//unicode 0x000447
  0xB7, 0xDB, 0xCD, 0x07, 0x83, 0x01,
//unicode 0x000448
  0xBB, 0xED, 0xB6, 0xDB, 0x6E, 0xBB, 0xFD, 0x07,
//unicode 0x000449
  0xB3, 0x99, 0xCD, 0x6C, 0x66, 0x33, 0x9B, 0xFF,
  0x03, 0x18, 0xC0,
//unicode 0x00044A
  0x0F, 0x0C, 0x7C, 0xEC, 0xEC, 0x7C,
//unicode 0x00044B
  0xC3, 0x86, 0x7D, 0xDB, 0xB6, 0xED, 0x1B,
//unicode 0x00044C
  0xC3, 0xF0, 0x6C, 0xDB, 0x03,
//unicode 0x00044D
  0x0F, 0xE6, 0x63, 0xD9, 0x03,
//unicode 0x00044E
  0x73, 0xB6, 0x7D, 0xDF, 0xBE, 0x6D, 0x0E,
//unicode 0x00044F
  0x3E, 0x37, 0x36, 0x3E, 0x36, 0x33,
//unicode 0x000451
  0x34, 0x1A, 0x80, 0x67, 0xFA, 0x1F, 0x0C, 0x3C,
//unicode 0x0020A4
  0x3C, 0x83, 0xE1, 0x63, 0xF0, 0x18, 0x7C,
//unicode 0x00FFFD
  0x10, 0xE0, 0x40, 0x84, 0x37, 0xDF, 0x3D, 0xE7,
  0x0E, 0x1F, 0x28, 0x40,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_EXTRABOLD_11PX_UNICODE[125] = {
  { 0x0000A1,   4,  1,  5,    3,     0 }, //unicode 0x0000A1
  { 0x0000BF,   7,  1,  5,    6,     3 }, //unicode 0x0000BF
  { 0x0000C0,   9,  1,  0,   11,     9 }, //unicode 0x0000C0
  { 0x0000C1,   9,  1,  0,   11,    20 }, //unicode 0x0000C1
  { 0x0000C2,   9,  1,  0,   11,    31 }, //unicode 0x0000C2
  { 0x0000C3,   9,  1,  0,   11,    42 }, //unicode 0x0000C3
  { 0x0000C4,   9,  1,  0,   11,    53 }, //unicode 0x0000C4
  { 0x0000C6,  11,  0,  3,   11,    64 }, //unicode 0x0000C6
  { 0x0000C7,   8,  2,  3,    8,    75 }, //unicode 0x0000C7
  { 0x0000C8,   7,  2,  0,    7,    83 }, //unicode 0x0000C8
  { 0x0000C9,   7,  2,  0,    7,    90 }, //unicode 0x0000C9
  { 0x0000CA,   7,  2,  0,    7,    97 }, //unicode 0x0000CA
  { 0x0000CB,   7,  2,  0,    7,   104 }, //unicode 0x0000CB
  { 0x0000CD,   6,  2,  0,    6,   111 }, //unicode 0x0000CD
  { 0x0000CE,   6,  0,  0,    8,   117 }, //unicode 0x0000CE
  { 0x0000CF,   6,  0,  0,    8,   125 }, //unicode 0x0000CF
  { 0x0000D1,  10,  2,  0,   11,   133 }, //unicode 0x0000D1
  { 0x0000D3,  10,  2,  0,   11,   144 }, //unicode 0x0000D3
  { 0x0000D4,  10,  2,  0,   11,   155 }, //unicode 0x0000D4
  { 0x0000D5,  10,  2,  0,   11,   166 }, //unicode 0x0000D5
  { 0x0000D6,  10,  2,  0,   11,   177 }, //unicode 0x0000D6
  { 0x0000D9,   9,  2,  0,   10,   188 }, //unicode 0x0000D9
  { 0x0000DA,   9,  2,  0,   10,   198 }, //unicode 0x0000DA
  { 0x0000DB,   9,  2,  0,   10,   208 }, //unicode 0x0000DB
  { 0x0000DC,   9,  2,  0,   10,   218 }, //unicode 0x0000DC
  { 0x0000DF,   9,  2,  3,    7,   228 }, //unicode 0x0000DF
  { 0x0000E0,   8,  1,  2,    8,   235 }, //unicode 0x0000E0
  { 0x0000E1,   8,  1,  2,    8,   243 }, //unicode 0x0000E1
  { 0x0000E2,   8,  1,  2,    8,   251 }, //unicode 0x0000E2
  { 0x0000E3,   8,  1,  2,    8,   259 }, //unicode 0x0000E3
  { 0x0000E4,   8,  1,  2,    8,   267 }, //unicode 0x0000E4
  { 0x0000E6,  11,  1,  5,    8,   275 }, //unicode 0x0000E6
  { 0x0000E7,   7,  1,  5,    7,   283 }, //unicode 0x0000E7
  { 0x0000E8,   8,  1,  2,    8,   290 }, //unicode 0x0000E8
  { 0x0000E9,   8,  1,  2,    8,   298 }, //unicode 0x0000E9
  { 0x0000EA,   8,  1,  2,    8,   306 }, //unicode 0x0000EA
  { 0x0000EB,   8,  1,  2,    8,   314 }, //unicode 0x0000EB
  { 0x0000ED,   6,  2,  2,    5,   322 }, //unicode 0x0000ED
  { 0x0000EE,   6,  0,  2,    7,   327 }, //unicode 0x0000EE
  { 0x0000EF,   6,  2,  2,    5,   334 }, //unicode 0x0000EF
  { 0x0000F1,   8,  2,  2,    7,   339 }, //unicode 0x0000F1
  { 0x0000F3,   8,  1,  2,    8,   346 }, //unicode 0x0000F3
  { 0x0000F4,   8,  1,  2,    8,   354 }, //unicode 0x0000F4
  { 0x0000F5,   8,  1,  2,    8,   362 }, //unicode 0x0000F5
  { 0x0000F6,   8,  1,  2,    8,   370 }, //unicode 0x0000F6
  { 0x0000F9,   8,  2,  2,    7,   378 }, //unicode 0x0000F9
  { 0x0000FA,   8,  2,  2,    7,   385 }, //unicode 0x0000FA
  { 0x0000FB,   8,  2,  2,    7,   392 }, //unicode 0x0000FB
  { 0x0000FC,   8,  2,  2,    7,   399 }, //unicode 0x0000FC
  { 0x00011E,   9,  2,  0,   10,   406 }, //unicode 0x00011E
  { 0x00011F,   8,  1,  2,   11,   416 }, //unicode 0x00011F
  { 0x000130,   5,  2,  0,    4,   427 }, //unicode 0x000130
  { 0x000131,   5,  2,  5,    3,   431 }, //unicode 0x000131
  { 0x000152,  12,  2,  3,   10,   434 }, //unicode 0x000152
  { 0x000153,  12,  1,  5,    9,   444 }, //unicode 0x000153
  { 0x00015E,   7,  1,  3,    8,   453 }, //unicode 0x00015E
  { 0x00015F,   7,  2,  5,    6,   461 }, //unicode 0x00015F
  { 0x000401,   7,  2,  0,    7,   467 }, //unicode 0x000401
  { 0x000410,   9,  1,  3,    8,   474 }, //unicode 0x000410
  { 0x000411,   8,  2,  3,    6,   482 }, //unicode 0x000411
  { 0x000412,   8,  2,  3,    6,   488 }, //unicode 0x000412
  { 0x000413,   8,  2,  3,    6,   494 }, //unicode 0x000413
  { 0x000414,  10,  1,  3,   13,   500 }, //unicode 0x000414
  { 0x000415,   7,  2,  3,    5,   513 }, //unicode 0x000415
  { 0x000416,  13,  0,  3,   13,   518 }, //unicode 0x000416
  { 0x000417,   8,  1,  3,    7,   531 }, //unicode 0x000417
  { 0x000418,  10,  2,  3,    8,   538 }, //unicode 0x000418
  { 0x000419,  10,  2,  0,   11,   546 }, //unicode 0x000419
  { 0x00041A,   9,  2,  3,    7,   557 }, //unicode 0x00041A
  { 0x00041B,   9,  1,  3,    8,   564 }, //unicode 0x00041B
  { 0x00041C,  12,  2,  3,   10,   572 }, //unicode 0x00041C
  { 0x00041D,   9,  2,  3,    7,   582 }, //unicode 0x00041D
  { 0x00041E,  10,  2,  3,    8,   589 }, //unicode 0x00041E
  { 0x00041F,   9,  2,  3,    7,   597 }, //unicode 0x00041F
  { 0x000420,   8,  2,  3,    6,   604 }, //unicode 0x000420
  { 0x000421,   8,  2,  3,    6,   610 }, //unicode 0x000421
  { 0x000422,   8,  1,  3,    7,   616 }, //unicode 0x000422
  { 0x000423,   9,  1,  3,    8,   623 }, //unicode 0x000423
  { 0x000424,  11,  1,  3,   10,   631 }, //unicode 0x000424
  { 0x000425,   9,  1,  3,    8,   641 }, //unicode 0x000425
  { 0x000426,  10,  2,  3,   11,   649 }, //unicode 0x000426
  { 0x000427,   9,  2,  3,    7,   660 }, //unicode 0x000427
  { 0x000428,  13,  2,  3,   11,   667 }, //unicode 0x000428
  { 0x000429,  14,  2,  3,   17,   678 }, //unicode 0x000429
  { 0x00042A,   9,  1,  3,    8,   695 }, //unicode 0x00042A
  { 0x00042B,  11,  2,  3,    9,   703 }, //unicode 0x00042B
  { 0x00042C,   8,  2,  3,    6,   712 }, //unicode 0x00042C
  { 0x00042D,   8,  1,  3,    7,   718 }, //unicode 0x00042D
  { 0x00042E,  13,  2,  3,   11,   725 }, //unicode 0x00042E
  { 0x00042F,   8,  0,  3,    8,   736 }, //unicode 0x00042F
  { 0x000430,   8,  1,  5,    6,   744 }, //unicode 0x000430
  { 0x000431,   8,  1,  3,    7,   750 }, //unicode 0x000431
  { 0x000432,   8,  2,  5,    5,   757 }, //unicode 0x000432
  { 0x000433,   7,  2,  5,    4,   762 }, //unicode 0x000433
  { 0x000434,   9,  1,  5,    8,   766 }, //unicode 0x000434
  { 0x000435,   8,  1,  5,    6,   774 }, //unicode 0x000435
  { 0x000436,  12,  0,  5,    9,   780 }, //unicode 0x000436
  { 0x000437,   7,  1,  5,    5,   789 }, //unicode 0x000437
  { 0x000438,   9,  2,  5,    6,   794 }, //unicode 0x000438
  { 0x000439,   9,  2,  2,    8,   800 }, //unicode 0x000439
  { 0x00043A,   9,  2,  5,    6,   808 }, //unicode 0x00043A
  { 0x00043B,   9,  1,  5,    6,   814 }, //unicode 0x00043B
  { 0x00043C,  10,  2,  5,    6,   820 }, //unicode 0x00043C
  { 0x00043D,   8,  2,  5,    5,   826 }, //unicode 0x00043D
  { 0x00043E,   8,  1,  5,    5,   831 }, //unicode 0x00043E
  { 0x00043F,   8,  2,  5,    5,   836 }, //unicode 0x00043F
  { 0x000440,   8,  2,  5,    7,   841 }, //unicode 0x000440
  { 0x000441,   7,  1,  5,    5,   848 }, //unicode 0x000441
  { 0x000442,   8,  1,  5,    5,   853 }, //unicode 0x000442
  { 0x000443,   8,  0,  5,    9,   858 }, //unicode 0x000443
  { 0x000444,  11,  2,  3,   12,   867 }, //unicode 0x000444
  { 0x000445,   8,  1,  5,    6,   879 }, //unicode 0x000445
  { 0x000446,  10,  2,  5,    8,   885 }, //unicode 0x000446
  { 0x000447,   8,  1,  5,    6,   893 }, //unicode 0x000447
  { 0x000448,  12,  2,  5,    8,   899 }, //unicode 0x000448
  { 0x000449,  13,  2,  5,   11,   907 }, //unicode 0x000449
  { 0x00044A,   9,  1,  5,    6,   918 }, //unicode 0x00044A
  { 0x00044B,  11,  2,  5,    7,   924 }, //unicode 0x00044B
  { 0x00044C,   8,  2,  5,    5,   931 }, //unicode 0x00044C
  { 0x00044D,   7,  1,  5,    5,   936 }, //unicode 0x00044D
  { 0x00044E,  11,  2,  5,    7,   941 }, //unicode 0x00044E
  { 0x00044F,   8,  0,  5,    6,   948 }, //unicode 0x00044F
  { 0x000451,   8,  1,  2,    8,   954 }, //unicode 0x000451
  { 0x0020A4,   8,  1,  3,    7,   962 }, //unicode 0x0020A4
  { 0x00FFFD,  12,  2,  3,   12,   969 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_EXTRABOLD_11PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_EXTRABOLD_11px, // font id
  1, // bpp => 1 for B&W
  14, // font height in pixels
  11, // baseline height in pixels
  -1, // Most left X coordinate of any char in the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_EXTRABOLD_11PX_UNICODE,
  bitmapOPEN_SANS_EXTRABOLD_11PX_UNICODE
};
