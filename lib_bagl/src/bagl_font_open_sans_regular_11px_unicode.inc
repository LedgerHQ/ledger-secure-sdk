const unsigned char bitmapOPEN_SANS_REGULAR_11PX_UNICODE[] = {
//unicode 0x0000A1
  0x51, 0x55,
//unicode 0x0000BF
  0x04, 0x10, 0x22, 0x42, 0x70,
//unicode 0x0000C0
  0x04, 0x04, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C1
  0x08, 0x04, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C2
  0x08, 0x0A, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C3
  0x2C, 0x09, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C4
  0x14, 0x00, 0x82, 0x42, 0xA1, 0x88, 0x7C, 0xA2,
  0x20,
//unicode 0x0000C6
  0xF0, 0x41, 0x01, 0x0A, 0xC8, 0x43, 0x02, 0x1F,
  0x88, 0x20, 0x3C,
//unicode 0x0000C7
  0xFE, 0x10, 0x04, 0x41, 0x30, 0x78, 0x08, 0xC2,
//unicode 0x0000C8
  0x42, 0x80, 0x17, 0xC2, 0x0B, 0x21, 0x3C,
//unicode 0x0000C9
  0x44, 0x80, 0x17, 0xC2, 0x0B, 0x21, 0x3C,
//unicode 0x0000CA
  0x44, 0x81, 0x17, 0xC2, 0x0B, 0x21, 0x3C,
//unicode 0x0000CB
  0x0A, 0xBC, 0x10, 0x5E, 0x08, 0xE1, 0x01,
//unicode 0x0000CD
  0x0A, 0x92, 0x24, 0x49,
//unicode 0x0000CE
  0xA6, 0x00, 0x21, 0x84, 0x10, 0x42, 0x08,
//unicode 0x0000CF
  0x05, 0x08, 0x21, 0x84, 0x10, 0x42,
//unicode 0x0000D1
  0x24, 0x0D, 0x20, 0x34, 0x2A, 0x95, 0x52, 0xA9,
  0x58, 0x08,
//unicode 0x0000D3
  0x08, 0x08, 0x00, 0x3E, 0x63, 0x41, 0x41, 0x41,
  0x41, 0x63, 0x3E,
//unicode 0x0000D4
  0x08, 0x14, 0x00, 0x3E, 0x63, 0x41, 0x41, 0x41,
  0x41, 0x63, 0x3E,
//unicode 0x0000D5
  0x2C, 0x12, 0x00, 0x3E, 0x63, 0x41, 0x41, 0x41,
  0x41, 0x63, 0x3E,
//unicode 0x0000D6
  0x14, 0x00, 0x3E, 0x63, 0x41, 0x41, 0x41, 0x41,
  0x63, 0x3E,
//unicode 0x0000D9
  0x04, 0x02, 0x20, 0x14, 0x0A, 0x85, 0x42, 0xA1,
  0x90, 0x07,
//unicode 0x0000DA
  0x08, 0x02, 0x20, 0x14, 0x0A, 0x85, 0x42, 0xA1,
  0x90, 0x07,
//unicode 0x0000DB
  0x0C, 0x09, 0x20, 0x14, 0x0A, 0x85, 0x42, 0xA1,
  0x90, 0x07,
//unicode 0x0000DC
  0x0A, 0x40, 0x28, 0x14, 0x0A, 0x85, 0x42, 0x21,
  0x0F,
//unicode 0x0000DF
  0x4E, 0x94, 0x14, 0x49, 0x14, 0x75,
//unicode 0x0000E0
  0x82, 0x80, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E1
  0x44, 0x80, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E2
  0x26, 0x81, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E3
  0xAA, 0x81, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E4
  0x05, 0x3C, 0xF4, 0x52, 0x7A,
//unicode 0x0000E6
  0xEE, 0x20, 0xF9, 0x93, 0x10, 0xC1, 0x1D,
//unicode 0x0000E7
  0x1E, 0x11, 0xE1, 0x44, 0x06,
//unicode 0x0000E8
  0x82, 0x00, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000E9
  0x44, 0x00, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000EA
  0x44, 0x01, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000EB
  0x0A, 0xB8, 0xF4, 0x42, 0x70,
//unicode 0x0000ED
  0x0A, 0x92, 0x24, 0x01,
//unicode 0x0000EE
  0xA2, 0x00, 0x21, 0x84, 0x10, 0x02,
//unicode 0x0000EF
  0x05, 0x22, 0x22, 0x22,
//unicode 0x0000F1
  0x56, 0x02, 0x3C, 0x51, 0x14, 0x45, 0x11,
//unicode 0x0000F3
  0x04, 0x01, 0x38, 0x51, 0x14, 0x45, 0x0E,
//unicode 0x0000F4
  0x84, 0x02, 0x38, 0x51, 0x14, 0x45, 0x0E,
//unicode 0x0000F5
  0x56, 0x02, 0x38, 0x51, 0x14, 0x45, 0x0E,
//unicode 0x0000F6
  0x0A, 0xE0, 0x44, 0x51, 0x14, 0x39,
//unicode 0x0000F9
  0x02, 0x01, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x0000FA
  0x04, 0x01, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x0000FB
  0x84, 0x02, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x0000FC
  0x0A, 0x10, 0x45, 0x51, 0x14, 0x7D,
//unicode 0x00011E
  0x24, 0x0C, 0x80, 0x37, 0x08, 0x04, 0x62, 0xA1,
  0x91, 0x0F,
//unicode 0x00011F
  0x12, 0x03, 0xF8, 0x92, 0xE4, 0x08, 0x5E, 0x18,
  0x7B,
//unicode 0x000130
  0x51, 0x55, 0x05,
//unicode 0x000131
  0x55, 0x05,
//unicode 0x000152
  0xFE, 0x26, 0x44, 0x88, 0x17, 0x21, 0xC2, 0x04,
  0x7F,
//unicode 0x000153
  0xEE, 0x32, 0xC5, 0x8B, 0x90, 0xC1, 0x1D,
//unicode 0x00015E
  0x2F, 0x84, 0xC1, 0x10, 0x7A, 0x82, 0x18,
//unicode 0x00015F
  0x17, 0x43, 0x78, 0x42, 0x07,
//unicode 0x000401
  0x0A, 0xBC, 0x10, 0x5E, 0x08, 0xE1, 0x01,
//unicode 0x000410
  0x08, 0x0A, 0x85, 0x22, 0xF2, 0x89, 0x82,
//unicode 0x000411
  0x5F, 0x10, 0x7C, 0x51, 0x14, 0x7D,
//unicode 0x000412
  0x5F, 0x14, 0x3D, 0x51, 0x14, 0x7D,
//unicode 0x000413
  0x3F, 0x84, 0x10, 0x42, 0x08,
//unicode 0x000414
  0x78, 0x48, 0x48, 0x44, 0x44, 0x42, 0x42, 0xFF,
  0x81, 0x81,
//unicode 0x000415
  0x2F, 0x84, 0x17, 0x42, 0x78,
//unicode 0x000416
  0x91, 0x48, 0x42, 0x05, 0x0E, 0x38, 0x50, 0x21,
  0x49, 0x44,
//unicode 0x000417
  0x1E, 0x04, 0x39, 0x10, 0x04, 0x3D,
//unicode 0x000418
  0xA1, 0x58, 0x2A, 0x55, 0x2A, 0x8D, 0x42,
//unicode 0x000419
  0x12, 0x0E, 0x20, 0x14, 0x4B, 0xA5, 0x4A, 0xA5,
  0x51, 0x08,
//unicode 0x00041A
  0x51, 0xD2, 0x1C, 0x45, 0x92, 0xC5,
//unicode 0x00041B
  0x7C, 0x44, 0x44, 0x44, 0x44, 0x44, 0x42, 0x43,
//unicode 0x00041C
  0xC3, 0x86, 0x0D, 0x2B, 0x55, 0x2A, 0x53, 0xA6,
  0x4C,
//unicode 0x00041D
  0xA1, 0x50, 0xE8, 0x17, 0x0A, 0x85, 0x42,
//unicode 0x00041E
  0x3E, 0x63, 0x41, 0x41, 0x41, 0x41, 0x63, 0x3E,
//unicode 0x00041F
  0xBF, 0x50, 0x28, 0x14, 0x0A, 0x85, 0x42,
//unicode 0x000420
  0x4F, 0x14, 0x45, 0x4F, 0x10, 0x04,
//unicode 0x000421
  0xFE, 0x10, 0x04, 0x41, 0x30, 0x78,
//unicode 0x000422
  0x3F, 0x82, 0x20, 0x08, 0x82, 0x20,
//unicode 0x000423
  0x41, 0x91, 0x89, 0x82, 0xC1, 0x20, 0x0C,
//unicode 0x000424
  0x08, 0x3E, 0x49, 0x49, 0x49, 0x49, 0x3E, 0x08,
//unicode 0x000425
  0x21, 0x09, 0x83, 0xC1, 0x90, 0x48, 0x42,
//unicode 0x000426
  0xA1, 0x50, 0x28, 0x14, 0x0A, 0x85, 0xFE, 0x40,
  0x20,
//unicode 0x000427
  0xA1, 0x50, 0x28, 0xE4, 0x03, 0x81, 0x40,
//unicode 0x000428
  0x11, 0x45, 0x14, 0x51, 0x44, 0x11, 0x45, 0x14,
  0xD1, 0x7F,
//unicode 0x000429
  0x11, 0x89, 0x48, 0x44, 0x22, 0x12, 0x91, 0x88,
  0x44, 0xE4, 0x7F, 0x00, 0x02, 0x10,
//unicode 0x00042A
  0x07, 0x04, 0x04, 0x3C, 0x44, 0x44, 0x44, 0x3C,
//unicode 0x00042B
  0x41, 0x41, 0x41, 0x4F, 0x51, 0x51, 0x51, 0x4F,
//unicode 0x00042C
  0x41, 0x10, 0x7C, 0x51, 0x14, 0x7D,
//unicode 0x00042D
  0x1F, 0x18, 0xC8, 0x07, 0x02, 0xC1, 0x3E,
//unicode 0x00042E
  0xE1, 0x89, 0x58, 0x82, 0x1E, 0x94, 0xA0, 0x04,
  0x45, 0x2C, 0x3C,
//unicode 0x00042F
  0x5E, 0x14, 0x45, 0x9E, 0x14, 0x45,
//unicode 0x000430
  0x0F, 0xBD, 0x94, 0x1E,
//unicode 0x000431
  0xDC, 0x10, 0x7C, 0x51, 0x14, 0x39,
//unicode 0x000432
  0x2F, 0xBE, 0x18, 0x1F,
//unicode 0x000433
  0x1F, 0x11, 0x11,
//unicode 0x000434
  0x1C, 0x0A, 0x45, 0x22, 0xF9, 0x85, 0x42,
//unicode 0x000435
  0x2E, 0xBD, 0x10, 0x1C,
//unicode 0x000436
  0x52, 0xA4, 0xF0, 0xA0, 0x21, 0x25, 0x12,
//unicode 0x000437
  0x0F, 0x19, 0x84, 0x1E,
//unicode 0x000438
  0x51, 0x56, 0x55, 0x53, 0x04,
//unicode 0x000439
  0x89, 0x03, 0x44, 0x59, 0x55, 0x4D, 0x11,
//unicode 0x00043A
  0xA9, 0x8C, 0x53, 0x12,
//unicode 0x00043B
  0x1C, 0x25, 0x49, 0xD2, 0x04,
//unicode 0x00043C
  0xA1, 0xD9, 0xAC, 0xD5, 0x6A, 0x01,
//unicode 0x00043D
  0x51, 0xF4, 0x45, 0x51, 0x04,
//unicode 0x00043E
  0x4E, 0x14, 0x45, 0x91, 0x03,
//unicode 0x00043F
  0x5F, 0x14, 0x45, 0x51, 0x04,
//unicode 0x000440
  0x4F, 0x14, 0x45, 0xD1, 0x13, 0x04, 0x01,
//unicode 0x000441
  0x1E, 0x11, 0xE1,
//unicode 0x000442
  0x9F, 0x10, 0x42, 0x08,
//unicode 0x000443
  0xA1, 0x24, 0x49, 0x0C, 0x43, 0x10, 0x03,
//unicode 0x000444
  0x04, 0x82, 0xA7, 0x54, 0x2A, 0x95, 0x3C, 0x04,
  0x02, 0x01,
//unicode 0x000445
  0x29, 0x19, 0x93, 0x12,
//unicode 0x000446
  0x51, 0x14, 0x45, 0xD1, 0x0F, 0x82,
//unicode 0x000447
  0x51, 0x14, 0x7D, 0x10, 0x04,
//unicode 0x000448
  0x89, 0x12, 0x25, 0x4A, 0x94, 0xE8, 0x1F,
//unicode 0x000449
  0x89, 0x12, 0x25, 0x4A, 0x94, 0xE8, 0x3F, 0x40,
  0x80,
//unicode 0x00044A
  0x07, 0x04, 0x7C, 0x44, 0x44, 0x7C,
//unicode 0x00044B
  0xA1, 0xD0, 0x2B, 0x95, 0x7A, 0x01,
//unicode 0x00044C
  0x41, 0xF0, 0x45, 0xD1, 0x07,
//unicode 0x00044D
  0x07, 0x39, 0x84, 0x0E,
//unicode 0x00044E
  0x39, 0x4D, 0x47, 0x45, 0x49, 0x39,
//unicode 0x00044F
  0x5E, 0x14, 0x79, 0x92, 0x04,
//unicode 0x000451
  0x06, 0xB8, 0xF4, 0x42, 0x70,
//unicode 0x0020A4
  0x9C, 0x20, 0x3C, 0xC2, 0x23, 0xFC,
//unicode 0x00FFFD
  0x10, 0xE0, 0x40, 0x84, 0x37, 0xCF, 0xBD, 0xE7,
  0x0F, 0x1B, 0x28, 0x40,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_REGULAR_11PX_UNICODE[125] = {
  { 0x0000A1,   4,  2,  5,    2,     0 }, //unicode 0x0000A1
  { 0x0000BF,   6,  1,  5,    5,     2 }, //unicode 0x0000BF
  { 0x0000C0,   8,  1,  0,   10,     7 }, //unicode 0x0000C0
  { 0x0000C1,   8,  1,  0,   10,    17 }, //unicode 0x0000C1
  { 0x0000C2,   8,  1,  0,   10,    27 }, //unicode 0x0000C2
  { 0x0000C3,   8,  1,  0,   10,    37 }, //unicode 0x0000C3
  { 0x0000C4,   8,  1,  1,    9,    47 }, //unicode 0x0000C4
  { 0x0000C6,  11,  0,  3,   11,    56 }, //unicode 0x0000C6
  { 0x0000C7,   8,  2,  3,    8,    67 }, //unicode 0x0000C7
  { 0x0000C8,   7,  2,  0,    7,    75 }, //unicode 0x0000C8
  { 0x0000C9,   7,  2,  0,    7,    82 }, //unicode 0x0000C9
  { 0x0000CA,   7,  2,  0,    7,    89 }, //unicode 0x0000CA
  { 0x0000CB,   7,  2,  1,    7,    96 }, //unicode 0x0000CB
  { 0x0000CD,   5,  2,  0,    4,   103 }, //unicode 0x0000CD
  { 0x0000CE,   5,  0,  0,    7,   107 }, //unicode 0x0000CE
  { 0x0000CF,   5,  0,  1,    6,   114 }, //unicode 0x0000CF
  { 0x0000D1,   9,  2,  0,   10,   120 }, //unicode 0x0000D1
  { 0x0000D3,  10,  2,  0,   11,   130 }, //unicode 0x0000D3
  { 0x0000D4,  10,  2,  0,   11,   141 }, //unicode 0x0000D4
  { 0x0000D5,  10,  2,  0,   11,   152 }, //unicode 0x0000D5
  { 0x0000D6,  10,  2,  1,   10,   163 }, //unicode 0x0000D6
  { 0x0000D9,   9,  2,  0,   10,   173 }, //unicode 0x0000D9
  { 0x0000DA,   9,  2,  0,   10,   183 }, //unicode 0x0000DA
  { 0x0000DB,   9,  2,  0,   10,   193 }, //unicode 0x0000DB
  { 0x0000DC,   9,  2,  1,    9,   203 }, //unicode 0x0000DC
  { 0x0000DF,   8,  2,  3,    6,   212 }, //unicode 0x0000DF
  { 0x0000E0,   7,  2,  2,    6,   218 }, //unicode 0x0000E0
  { 0x0000E1,   7,  2,  2,    6,   224 }, //unicode 0x0000E1
  { 0x0000E2,   7,  2,  2,    6,   230 }, //unicode 0x0000E2
  { 0x0000E3,   7,  2,  2,    6,   236 }, //unicode 0x0000E3
  { 0x0000E4,   7,  2,  3,    5,   242 }, //unicode 0x0000E4
  { 0x0000E6,  10,  1,  4,    7,   247 }, //unicode 0x0000E6
  { 0x0000E7,   6,  2,  5,    5,   254 }, //unicode 0x0000E7
  { 0x0000E8,   7,  2,  2,    6,   259 }, //unicode 0x0000E8
  { 0x0000E9,   7,  2,  2,    6,   265 }, //unicode 0x0000E9
  { 0x0000EA,   7,  2,  2,    6,   271 }, //unicode 0x0000EA
  { 0x0000EB,   7,  2,  3,    5,   277 }, //unicode 0x0000EB
  { 0x0000ED,   5,  2,  2,    4,   282 }, //unicode 0x0000ED
  { 0x0000EE,   5,  0,  2,    6,   286 }, //unicode 0x0000EE
  { 0x0000EF,   4,  0,  3,    4,   292 }, //unicode 0x0000EF
  { 0x0000F1,   8,  2,  2,    7,   296 }, //unicode 0x0000F1
  { 0x0000F3,   8,  2,  2,    7,   303 }, //unicode 0x0000F3
  { 0x0000F4,   8,  2,  2,    7,   310 }, //unicode 0x0000F4
  { 0x0000F5,   8,  2,  2,    7,   317 }, //unicode 0x0000F5
  { 0x0000F6,   8,  2,  3,    6,   324 }, //unicode 0x0000F6
  { 0x0000F9,   8,  2,  2,    7,   330 }, //unicode 0x0000F9
  { 0x0000FA,   8,  2,  2,    7,   337 }, //unicode 0x0000FA
  { 0x0000FB,   8,  2,  2,    7,   344 }, //unicode 0x0000FB
  { 0x0000FC,   8,  2,  3,    6,   351 }, //unicode 0x0000FC
  { 0x00011E,   9,  2,  0,   10,   357 }, //unicode 0x00011E
  { 0x00011F,   7,  1,  2,    9,   367 }, //unicode 0x00011F
  { 0x000130,   4,  2,  1,    3,   376 }, //unicode 0x000130
  { 0x000131,   4,  2,  5,    2,   379 }, //unicode 0x000131
  { 0x000152,  11,  2,  3,    9,   381 }, //unicode 0x000152
  { 0x000153,  11,  2,  5,    7,   390 }, //unicode 0x000153
  { 0x00015E,   7,  2,  3,    7,   397 }, //unicode 0x00015E
  { 0x00015F,   6,  2,  5,    5,   404 }, //unicode 0x00015F
  { 0x000401,   7,  2,  1,    7,   409 }, //unicode 0x000401
  { 0x000410,   8,  1,  3,    7,   416 }, //unicode 0x000410
  { 0x000411,   8,  2,  3,    6,   423 }, //unicode 0x000411
  { 0x000412,   8,  2,  3,    6,   429 }, //unicode 0x000412
  { 0x000413,   7,  2,  3,    5,   435 }, //unicode 0x000413
  { 0x000414,   9,  1,  3,   10,   440 }, //unicode 0x000414
  { 0x000415,   7,  2,  3,    5,   450 }, //unicode 0x000415
  { 0x000416,  11,  1,  3,   10,   455 }, //unicode 0x000416
  { 0x000417,   7,  1,  3,    6,   465 }, //unicode 0x000417
  { 0x000418,   9,  2,  3,    7,   471 }, //unicode 0x000418
  { 0x000419,   9,  2,  0,   10,   478 }, //unicode 0x000419
  { 0x00041A,   8,  2,  3,    6,   488 }, //unicode 0x00041A
  { 0x00041B,   9,  1,  3,    8,   494 }, //unicode 0x00041B
  { 0x00041C,  11,  2,  3,    9,   502 }, //unicode 0x00041C
  { 0x00041D,   9,  2,  3,    7,   511 }, //unicode 0x00041D
  { 0x00041E,  10,  2,  3,    8,   518 }, //unicode 0x00041E
  { 0x00041F,   9,  2,  3,    7,   526 }, //unicode 0x00041F
  { 0x000420,   8,  2,  3,    6,   533 }, //unicode 0x000420
  { 0x000421,   8,  2,  3,    6,   539 }, //unicode 0x000421
  { 0x000422,   7,  1,  3,    6,   545 }, //unicode 0x000422
  { 0x000423,   8,  1,  3,    7,   551 }, //unicode 0x000423
  { 0x000424,  10,  2,  3,    8,   558 }, //unicode 0x000424
  { 0x000425,   8,  1,  3,    7,   566 }, //unicode 0x000425
  { 0x000426,   9,  2,  3,    9,   573 }, //unicode 0x000426
  { 0x000427,   9,  2,  3,    7,   582 }, //unicode 0x000427
  { 0x000428,  12,  2,  3,   10,   589 }, //unicode 0x000428
  { 0x000429,  13,  2,  3,   14,   599 }, //unicode 0x000429
  { 0x00042A,   9,  1,  3,    8,   613 }, //unicode 0x00042A
  { 0x00042B,  10,  2,  3,    8,   621 }, //unicode 0x00042B
  { 0x00042C,   8,  2,  3,    6,   629 }, //unicode 0x00042C
  { 0x00042D,   8,  1,  3,    7,   635 }, //unicode 0x00042D
  { 0x00042E,  13,  2,  3,   11,   642 }, //unicode 0x00042E
  { 0x00042F,   8,  2,  3,    6,   653 }, //unicode 0x00042F
  { 0x000430,   7,  2,  5,    4,   659 }, //unicode 0x000430
  { 0x000431,   8,  2,  3,    6,   663 }, //unicode 0x000431
  { 0x000432,   7,  2,  5,    4,   669 }, //unicode 0x000432
  { 0x000433,   6,  2,  5,    3,   673 }, //unicode 0x000433
  { 0x000434,   8,  1,  5,    7,   676 }, //unicode 0x000434
  { 0x000435,   7,  2,  5,    4,   683 }, //unicode 0x000435
  { 0x000436,  10,  1,  5,    7,   687 }, //unicode 0x000436
  { 0x000437,   6,  1,  5,    4,   694 }, //unicode 0x000437
  { 0x000438,   8,  2,  5,    5,   698 }, //unicode 0x000438
  { 0x000439,   8,  2,  2,    7,   703 }, //unicode 0x000439
  { 0x00043A,   7,  2,  5,    4,   710 }, //unicode 0x00043A
  { 0x00043B,   7,  1,  5,    5,   714 }, //unicode 0x00043B
  { 0x00043C,   9,  2,  5,    6,   719 }, //unicode 0x00043C
  { 0x00043D,   8,  2,  5,    5,   725 }, //unicode 0x00043D
  { 0x00043E,   8,  2,  5,    5,   730 }, //unicode 0x00043E
  { 0x00043F,   8,  2,  5,    5,   735 }, //unicode 0x00043F
  { 0x000440,   8,  2,  5,    7,   740 }, //unicode 0x000440
  { 0x000441,   6,  2,  5,    3,   747 }, //unicode 0x000441
  { 0x000442,   6,  1,  5,    4,   750 }, //unicode 0x000442
  { 0x000443,   7,  1,  5,    7,   754 }, //unicode 0x000443
  { 0x000444,   9,  2,  3,   10,   761 }, //unicode 0x000444
  { 0x000445,   7,  2,  5,    4,   771 }, //unicode 0x000445
  { 0x000446,   8,  2,  5,    6,   775 }, //unicode 0x000446
  { 0x000447,   8,  2,  5,    5,   781 }, //unicode 0x000447
  { 0x000448,  11,  2,  5,    7,   786 }, //unicode 0x000448
  { 0x000449,  11,  2,  5,    9,   793 }, //unicode 0x000449
  { 0x00044A,   9,  1,  5,    6,   802 }, //unicode 0x00044A
  { 0x00044B,   9,  2,  5,    6,   808 }, //unicode 0x00044B
  { 0x00044C,   8,  2,  5,    5,   814 }, //unicode 0x00044C
  { 0x00044D,   6,  1,  5,    4,   819 }, //unicode 0x00044D
  { 0x00044E,  10,  2,  5,    6,   823 }, //unicode 0x00044E
  { 0x00044F,   7,  1,  5,    5,   829 }, //unicode 0x00044F
  { 0x000451,   7,  2,  3,    5,   834 }, //unicode 0x000451
  { 0x0020A4,   7,  1,  3,    6,   839 }, //unicode 0x0020A4
  { 0x00FFFD,  12,  2,  3,   12,   845 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_REGULAR_11PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_REGULAR_11px, // font id
  1, // bpp => 1 for B&W
  14, // font height in pixels
  11, // baseline height in pixels
  -1, // Most left X coordinate of any char in the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_REGULAR_11PX_UNICODE,
  bitmapOPEN_SANS_REGULAR_11PX_UNICODE
};
