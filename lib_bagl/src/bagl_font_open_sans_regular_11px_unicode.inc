/* @BANNER@ */

const unsigned char bitmapOPEN_SANS_REGULAR_11PX_UNICODE[] = {
//unicode 0x0000A1
  0x51, 0x55,
//unicode 0x0000BF
  0x04, 0x10, 0x22, 0x42, 0x70,
//unicode 0x0000C9
  0x44, 0x80, 0x17, 0xC2, 0x0B, 0x21, 0x3C,
//unicode 0x0000E0
  0x82, 0x80, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E1
  0x44, 0x80, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E2
  0x26, 0x81, 0x87, 0x5E, 0x4A, 0x0F,
//unicode 0x0000E7
  0x1E, 0x11, 0xE1, 0x44, 0x06,
//unicode 0x0000E8
  0x82, 0x00, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000E9
  0x44, 0x00, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000EA
  0x44, 0x01, 0x97, 0x5E, 0x08, 0x0E,
//unicode 0x0000EB
  0x0A, 0xB8, 0xF4, 0x42, 0x70,
//unicode 0x0000ED
  0x0A, 0x92, 0x24, 0x01,
//unicode 0x0000EE
  0xA2, 0x00, 0x21, 0x84, 0x10, 0x02,
//unicode 0x0000EF
  0x05, 0x22, 0x22, 0x22,
//unicode 0x0000F1
  0x56, 0x02, 0x3C, 0x51, 0x14, 0x45, 0x11,
//unicode 0x0000F3
  0x04, 0x01, 0x38, 0x51, 0x14, 0x45, 0x0E,
//unicode 0x0000F4
  0x84, 0x02, 0x38, 0x51, 0x14, 0x45, 0x0E,
//unicode 0x0000F9
  0x02, 0x01, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x0000FA
  0x04, 0x01, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x0000FB
  0x84, 0x02, 0x44, 0x51, 0x14, 0x45, 0x1F,
//unicode 0x00FFFD
  0x10, 0xE0, 0x40, 0x84, 0x37, 0xCF, 0xBD, 0xE7,
  0x0F, 0x1B, 0x28, 0x40,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_REGULAR_11PX_UNICODE[21] = {
  { 0x0000A1,   4,  2,  5,    2,     0 }, //unicode 0x0000A1
  { 0x0000BF,   6,  1,  5,    5,     2 }, //unicode 0x0000BF
  { 0x0000C9,   7,  2,  0,    7,     7 }, //unicode 0x0000C9
  { 0x0000E0,   7,  2,  2,    6,    14 }, //unicode 0x0000E0
  { 0x0000E1,   7,  2,  2,    6,    20 }, //unicode 0x0000E1
  { 0x0000E2,   7,  2,  2,    6,    26 }, //unicode 0x0000E2
  { 0x0000E7,   6,  2,  5,    5,    32 }, //unicode 0x0000E7
  { 0x0000E8,   7,  2,  2,    6,    37 }, //unicode 0x0000E8
  { 0x0000E9,   7,  2,  2,    6,    43 }, //unicode 0x0000E9
  { 0x0000EA,   7,  2,  2,    6,    49 }, //unicode 0x0000EA
  { 0x0000EB,   7,  2,  3,    5,    55 }, //unicode 0x0000EB
  { 0x0000ED,   5,  2,  2,    4,    60 }, //unicode 0x0000ED
  { 0x0000EE,   5,  0,  2,    6,    64 }, //unicode 0x0000EE
  { 0x0000EF,   4,  0,  3,    4,    70 }, //unicode 0x0000EF
  { 0x0000F1,   8,  2,  2,    7,    74 }, //unicode 0x0000F1
  { 0x0000F3,   8,  2,  2,    7,    81 }, //unicode 0x0000F3
  { 0x0000F4,   8,  2,  2,    7,    88 }, //unicode 0x0000F4
  { 0x0000F9,   8,  2,  2,    7,    95 }, //unicode 0x0000F9
  { 0x0000FA,   8,  2,  2,    7,   102 }, //unicode 0x0000FA
  { 0x0000FB,   8,  2,  2,    7,   109 }, //unicode 0x0000FB
  { 0x00FFFD,  12,  2,  3,   12,   116 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_REGULAR_11PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_REGULAR_11px, // font id
  1, // bpp => 1 for B&W
  14, // font height in pixels
  11, // baseline height in pixels
  -1, // Most left X coordinate of any char in the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_REGULAR_11PX_UNICODE,
  bitmapOPEN_SANS_REGULAR_11PX_UNICODE
};
