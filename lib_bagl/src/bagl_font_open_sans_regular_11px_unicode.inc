const unsigned char bitmapOPEN_SANS_REGULAR_11PX_UNICODE[] = {
//unicode 0x0000A1
  0xFD,
//unicode 0x0000BF
  0x04, 0x44, 0x12, 0xE1,
//unicode 0x0000C0
  0x04, 0x04, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C1
  0x08, 0x04, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C2
  0x08, 0x0A, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C3
  0x2C, 0x09, 0x00, 0x41, 0xA1, 0x50, 0x44, 0x3E,
  0x51, 0x10,
//unicode 0x0000C4
  0x14, 0x00, 0x82, 0x42, 0xA1, 0x88, 0x7C, 0xA2,
  0x20,
//unicode 0x0000C6
  0xF0, 0x51, 0xA0, 0x20, 0x4F, 0xC2, 0x87, 0x88,
  0xF0,
//unicode 0x0000C7
  0xFE, 0x10, 0x04, 0x41, 0x30, 0x78, 0x08, 0xC2,
//unicode 0x0000C8
  0x22, 0xF0, 0x11, 0x1F, 0x11, 0x0F,
//unicode 0x0000C9
  0x24, 0xF0, 0x11, 0x1F, 0x11, 0x0F,
//unicode 0x0000CA
  0xA4, 0xF0, 0x11, 0x1F, 0x11, 0x0F,
//unicode 0x0000CB
  0x0A, 0x1F, 0xF1, 0x11, 0xF1,
//unicode 0x0000CD
  0x46, 0x55, 0x15,
//unicode 0x0000CE
  0x2E, 0x24, 0x49, 0x92,
//unicode 0x0000CF
  0x52, 0x55, 0x05,
//unicode 0x0000D1
  0xA4, 0x06, 0x84, 0x63, 0x59, 0xA6, 0x69, 0x1C,
  0x02,
//unicode 0x0000D3
  0x08, 0x04, 0xC0, 0x37, 0x0E, 0x06, 0x83, 0xC1,
  0xB1, 0x0F,
//unicode 0x0000D4
  0x08, 0x0A, 0xC0, 0x37, 0x0E, 0x06, 0x83, 0xC1,
  0xB1, 0x0F,
//unicode 0x0000D5
  0x2C, 0x09, 0xC0, 0x37, 0x0E, 0x06, 0x83, 0xC1,
  0xB1, 0x0F,
//unicode 0x0000D6
  0x14, 0x80, 0x6F, 0x1C, 0x0C, 0x06, 0x83, 0x63,
  0x1F,
//unicode 0x0000D9
  0x04, 0x01, 0x84, 0x61, 0x18, 0x86, 0x61, 0xE8,
  0x01,
//unicode 0x0000DA
  0x08, 0x01, 0x84, 0x61, 0x18, 0x86, 0x61, 0xE8,
  0x01,
//unicode 0x0000DB
  0x8C, 0x04, 0x84, 0x61, 0x18, 0x86, 0x61, 0xE8,
  0x01,
//unicode 0x0000DC
  0x0A, 0x10, 0x86, 0x61, 0x18, 0x86, 0xA1, 0x07,
//unicode 0x0000DF
  0x2E, 0xA6, 0x92, 0x62, 0xEC,
//unicode 0x0000E0
  0x42, 0xF0, 0xF8, 0x99, 0x0F,
//unicode 0x0000E1
  0x24, 0xF0, 0xF8, 0x99, 0x0F,
//unicode 0x0000E2
  0x96, 0xF0, 0xF8, 0x99, 0x0F,
//unicode 0x0000E3
  0xDA, 0xF0, 0xF8, 0x99, 0x0F,
//unicode 0x0000E4
  0x05, 0x8F, 0x9F, 0xF9,
//unicode 0x0000E6
  0xEE, 0x90, 0xFE, 0x12, 0x11, 0xEE,
//unicode 0x0000E7
  0x1E, 0x11, 0xE1, 0x44, 0x06,
//unicode 0x0000E8
  0x42, 0xE0, 0xF9, 0x11, 0x0E,
//unicode 0x0000E9
  0x24, 0xE0, 0xF9, 0x11, 0x0E,
//unicode 0x0000EA
  0xA4, 0xE0, 0xF9, 0x11, 0x0E,
//unicode 0x0000EB
  0x0A, 0x9E, 0x1F, 0xE1,
//unicode 0x0000ED
  0x46, 0x55, 0x01,
//unicode 0x0000EE
  0x2A, 0x24, 0x49, 0x02,
//unicode 0x0000EF
  0x85, 0x24, 0x49,
//unicode 0x0000F1
  0x36, 0x81, 0x17, 0x63, 0x8C, 0x11,
//unicode 0x0000F3
  0x84, 0x00, 0x17, 0x63, 0x8C, 0x0E,
//unicode 0x0000F4
  0x44, 0x01, 0x17, 0x63, 0x8C, 0x0E,
//unicode 0x0000F5
  0x36, 0x01, 0x17, 0x63, 0x8C, 0x0E,
//unicode 0x0000F6
  0x0A, 0xB8, 0x18, 0x63, 0x74,
//unicode 0x0000F9
  0x82, 0x80, 0x18, 0x63, 0x8C, 0x1F,
//unicode 0x0000FA
  0x84, 0x80, 0x18, 0x63, 0x8C, 0x1F,
//unicode 0x0000FB
  0x44, 0x81, 0x18, 0x63, 0x8C, 0x1F,
//unicode 0x0000FC
  0x0A, 0xC4, 0x18, 0x63, 0xFC,
//unicode 0x00011E
  0x24, 0x06, 0xF0, 0x43, 0x10, 0xC4, 0xE1, 0xE8,
  0x03,
//unicode 0x00011F
  0x12, 0x03, 0xF8, 0x92, 0xE4, 0x08, 0x5E, 0x18,
  0x7B,
//unicode 0x000130
  0xFD, 0x03,
//unicode 0x000131
  0x3F,
//unicode 0x000152
  0xFE, 0x13, 0x11, 0xF1, 0x11, 0x11, 0x13, 0xFE,
//unicode 0x000153
  0xEE, 0x99, 0xF1, 0x11, 0x19, 0xEE,
//unicode 0x00015E
  0x1F, 0x31, 0x8C, 0xF8, 0x42, 0x06,
//unicode 0x00015F
  0x17, 0x43, 0x78, 0x42, 0x07,
//unicode 0x000401
  0x0A, 0x1F, 0xF1, 0x11, 0xF1,
//unicode 0x000410
  0x08, 0x0A, 0x85, 0x22, 0xF2, 0x89, 0x82,
//unicode 0x000411
  0x3F, 0x84, 0x1F, 0x63, 0xFC,
//unicode 0x000412
  0x3F, 0xC6, 0x17, 0x63, 0xFC,
//unicode 0x000413
  0x3F, 0x84, 0x10, 0x42, 0x08,
//unicode 0x000414
  0x78, 0x48, 0x48, 0x44, 0x44, 0x42, 0x42, 0xFF,
  0x81, 0x81,
//unicode 0x000415
  0x1F, 0xF1, 0x11, 0xF1,
//unicode 0x000416
  0x91, 0x24, 0x51, 0xC1, 0x81, 0x83, 0x8A, 0xA4,
  0x88,
//unicode 0x000417
  0x1E, 0x42, 0x07, 0x21, 0x7C,
//unicode 0x000418
  0x61, 0x9C, 0xA6, 0x65, 0x39, 0x86,
//unicode 0x000419
  0x12, 0x07, 0x84, 0x71, 0x9A, 0x96, 0xE5, 0x18,
  0x02,
//unicode 0x00041A
  0x51, 0xD2, 0x1C, 0x45, 0x92, 0xC5,
//unicode 0x00041B
  0x7C, 0x22, 0x91, 0x48, 0x24, 0x0A, 0x87,
//unicode 0x00041C
  0xC3, 0xC3, 0xC3, 0xA5, 0xA5, 0x99, 0x99, 0x99,
//unicode 0x00041D
  0x61, 0x18, 0xFE, 0x61, 0x18, 0x86,
//unicode 0x00041E
  0xBE, 0x71, 0x30, 0x18, 0x0C, 0x8E, 0x7D,
//unicode 0x00041F
  0x7F, 0x18, 0x86, 0x61, 0x18, 0x86,
//unicode 0x000420
  0x2F, 0xC6, 0xF8, 0x42, 0x08,
//unicode 0x000421
  0xFE, 0x10, 0x04, 0x41, 0x30, 0x78,
//unicode 0x000422
  0x3F, 0x82, 0x20, 0x08, 0x82, 0x20,
//unicode 0x000423
  0x41, 0x91, 0x89, 0x82, 0xC1, 0x20, 0x0C,
//unicode 0x000424
  0x08, 0x5F, 0x32, 0x99, 0x4C, 0xFA, 0x10,
//unicode 0x000425
  0xA1, 0xC4, 0x30, 0x8C, 0x24, 0x85,
//unicode 0x000426
  0xA1, 0x50, 0x28, 0x14, 0x0A, 0x85, 0xFE, 0x40,
  0x20,
//unicode 0x000427
  0x61, 0x18, 0x86, 0x3E, 0x08, 0x82,
//unicode 0x000428
  0x11, 0x23, 0x46, 0x8C, 0x18, 0x31, 0x62, 0xC4,
  0xFF,
//unicode 0x000429
  0x11, 0x45, 0x14, 0x51, 0x44, 0x11, 0x45, 0x14,
  0xD1, 0xFF, 0x00, 0x02, 0x08,
//unicode 0x00042A
  0x07, 0x02, 0x81, 0x47, 0x24, 0x12, 0x79,
//unicode 0x00042B
  0xC1, 0x60, 0xF0, 0x19, 0x8D, 0x46, 0x9F,
//unicode 0x00042C
  0x21, 0x84, 0x1F, 0x63, 0xFC,
//unicode 0x00042D
  0x1F, 0x0C, 0xFA, 0x20, 0x08, 0x7F,
//unicode 0x00042E
  0xE1, 0x45, 0x9C, 0xE0, 0x83, 0x09, 0x26, 0x18,
  0x71, 0x78,
//unicode 0x00042F
  0x3E, 0xC6, 0xE8, 0x65, 0x8C,
//unicode 0x000430
  0x8F, 0x9F, 0xF9,
//unicode 0x000431
  0x7C, 0x84, 0x1F, 0x63, 0x74,
//unicode 0x000432
  0x2F, 0xBE, 0x18, 0x1F,
//unicode 0x000433
  0x1F, 0x11, 0x11,
//unicode 0x000434
  0x1C, 0x45, 0x49, 0xD2, 0x1F, 0x86,
//unicode 0x000435
  0x9E, 0x1F, 0xE1,
//unicode 0x000436
  0x52, 0x52, 0x3C, 0x34, 0x52, 0x91,
//unicode 0x000437
  0x8F, 0x86, 0xF8,
//unicode 0x000438
  0x31, 0xD7, 0x3A, 0x23,
//unicode 0x000439
  0xC9, 0x81, 0x98, 0x6B, 0x9D, 0x11,
//unicode 0x00043A
  0x59, 0x73, 0x95,
//unicode 0x00043B
  0x9C, 0x4A, 0x29, 0x27,
//unicode 0x00043C
  0xE1, 0x3C, 0xB7, 0x6D, 0x0B,
//unicode 0x00043D
  0x31, 0xFE, 0x18, 0x23,
//unicode 0x00043E
  0x2E, 0xC6, 0x18, 0x1D,
//unicode 0x00043F
  0x3F, 0xC6, 0x18, 0x23,
//unicode 0x000440
  0x2F, 0xC6, 0x18, 0x5F, 0x08, 0x01,
//unicode 0x000441
  0x1E, 0x11, 0xE1,
//unicode 0x000442
  0x9F, 0x10, 0x42, 0x08,
//unicode 0x000443
  0xA1, 0x24, 0x49, 0x0C, 0x43, 0x10, 0x03,
//unicode 0x000444
  0x04, 0xE1, 0x95, 0x65, 0x59, 0x7A, 0x04, 0x41,
//unicode 0x000445
  0x99, 0x66, 0x99,
//unicode 0x000446
  0x51, 0x14, 0x45, 0xD1, 0x0F, 0x82,
//unicode 0x000447
  0x31, 0xC6, 0x0F, 0x21,
//unicode 0x000448
  0x89, 0x89, 0x89, 0x89, 0x89, 0xFF,
//unicode 0x000449
  0x89, 0x12, 0x25, 0x4A, 0x94, 0xE8, 0x3F, 0x40,
  0x80,
//unicode 0x00044A
  0x07, 0x02, 0x9F, 0x48, 0xE4, 0x03,
//unicode 0x00044B
  0x61, 0xF8, 0xA6, 0xE9, 0x0B,
//unicode 0x00044C
  0x21, 0xFC, 0x18, 0x3F,
//unicode 0x00044D
  0x87, 0x8E, 0x78,
//unicode 0x00044E
  0xB9, 0xE6, 0xB1, 0x98, 0xCC, 0x01,
//unicode 0x00044F
  0x3E, 0x46, 0x2F, 0x25,
//unicode 0x000451
  0x06, 0x9E, 0x1F, 0xE1,
//unicode 0x0020A4
  0x9C, 0x20, 0x3C, 0xC2, 0x23, 0xFC,
//unicode 0x00FFFD
  0x10, 0x70, 0x10, 0xF1, 0xF6, 0xFC, 0xBD, 0x3F,
  0x36, 0x28, 0x20,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_REGULAR_11PX_UNICODE[125] = {
  { 0x0000A1,   3,  1,  5, 1, 0,     0 }, //unicode 0x0000A1
  { 0x0000BF,   5,  0,  5, 1, 0,     1 }, //unicode 0x0000BF
  { 0x0000C0,   7,  0,  0, 0, 0,     5 }, //unicode 0x0000C0
  { 0x0000C1,   7,  0,  0, 0, 0,    15 }, //unicode 0x0000C1
  { 0x0000C2,   7,  0,  0, 0, 0,    25 }, //unicode 0x0000C2
  { 0x0000C3,   7,  0,  0, 0, 0,    35 }, //unicode 0x0000C3
  { 0x0000C4,   7,  0,  1, 0, 0,    45 }, //unicode 0x0000C4
  { 0x0000C6,  11,  0,  3, 2, 0,    54 }, //unicode 0x0000C6
  { 0x0000C7,   7,  1,  3, 0, 0,    63 }, //unicode 0x0000C7
  { 0x0000C8,   6,  1,  0, 1, 0,    71 }, //unicode 0x0000C8
  { 0x0000C9,   6,  1,  0, 1, 0,    77 }, //unicode 0x0000C9
  { 0x0000CA,   6,  1,  0, 1, 0,    83 }, //unicode 0x0000CA
  { 0x0000CB,   6,  1,  1, 1, 0,    89 }, //unicode 0x0000CB
  { 0x0000CD,   4,  1,  0, 1, 0,    94 }, //unicode 0x0000CD
  { 0x0000CE,   5,  0,  0, 2, 0,    97 }, //unicode 0x0000CE
  { 0x0000CF,   4,  0,  1, 2, 0,   101 }, //unicode 0x0000CF
  { 0x0000D1,   8,  1,  0, 1, 0,   104 }, //unicode 0x0000D1
  { 0x0000D3,   9,  1,  0, 1, 0,   113 }, //unicode 0x0000D3
  { 0x0000D4,   9,  1,  0, 1, 0,   123 }, //unicode 0x0000D4
  { 0x0000D5,   9,  1,  0, 1, 0,   133 }, //unicode 0x0000D5
  { 0x0000D6,   9,  1,  1, 1, 0,   143 }, //unicode 0x0000D6
  { 0x0000D9,   8,  1,  0, 1, 0,   152 }, //unicode 0x0000D9
  { 0x0000DA,   8,  1,  0, 1, 0,   161 }, //unicode 0x0000DA
  { 0x0000DB,   8,  1,  0, 1, 0,   170 }, //unicode 0x0000DB
  { 0x0000DC,   8,  1,  1, 1, 0,   179 }, //unicode 0x0000DC
  { 0x0000DF,   7,  1,  3, 1, 0,   187 }, //unicode 0x0000DF
  { 0x0000E0,   6,  1,  2, 1, 0,   192 }, //unicode 0x0000E0
  { 0x0000E1,   6,  1,  2, 1, 0,   197 }, //unicode 0x0000E1
  { 0x0000E2,   6,  1,  2, 1, 0,   202 }, //unicode 0x0000E2
  { 0x0000E3,   6,  1,  2, 1, 0,   207 }, //unicode 0x0000E3
  { 0x0000E4,   6,  1,  3, 1, 0,   212 }, //unicode 0x0000E4
  { 0x0000E6,   9,  0,  4, 1, 0,   216 }, //unicode 0x0000E6
  { 0x0000E7,   5,  1,  5, 0, 0,   222 }, //unicode 0x0000E7
  { 0x0000E8,   6,  1,  2, 1, 0,   227 }, //unicode 0x0000E8
  { 0x0000E9,   6,  1,  2, 1, 0,   232 }, //unicode 0x0000E9
  { 0x0000EA,   6,  1,  2, 1, 0,   237 }, //unicode 0x0000EA
  { 0x0000EB,   6,  1,  3, 1, 0,   242 }, //unicode 0x0000EB
  { 0x0000ED,   4,  1,  2, 1, 0,   246 }, //unicode 0x0000ED
  { 0x0000EE,   5,  0,  2, 2, 0,   249 }, //unicode 0x0000EE
  { 0x0000EF,   4,  0,  3, 1, 0,   253 }, //unicode 0x0000EF
  { 0x0000F1,   7,  1,  2, 1, 0,   256 }, //unicode 0x0000F1
  { 0x0000F3,   7,  1,  2, 1, 0,   262 }, //unicode 0x0000F3
  { 0x0000F4,   7,  1,  2, 1, 0,   268 }, //unicode 0x0000F4
  { 0x0000F5,   7,  1,  2, 1, 0,   274 }, //unicode 0x0000F5
  { 0x0000F6,   7,  1,  3, 1, 0,   280 }, //unicode 0x0000F6
  { 0x0000F9,   7,  1,  2, 1, 0,   285 }, //unicode 0x0000F9
  { 0x0000FA,   7,  1,  2, 1, 0,   291 }, //unicode 0x0000FA
  { 0x0000FB,   7,  1,  2, 1, 0,   297 }, //unicode 0x0000FB
  { 0x0000FC,   7,  1,  3, 1, 0,   303 }, //unicode 0x0000FC
  { 0x00011E,   8,  1,  0, 1, 0,   308 }, //unicode 0x00011E
  { 0x00011F,   6,  0,  2, 0, 0,   317 }, //unicode 0x00011F
  { 0x000130,   3,  1,  1, 1, 0,   326 }, //unicode 0x000130
  { 0x000131,   3,  1,  5, 1, 0,   328 }, //unicode 0x000131
  { 0x000152,  10,  1,  3, 1, 0,   329 }, //unicode 0x000152
  { 0x000153,  10,  1,  5, 1, 0,   337 }, //unicode 0x000153
  { 0x00015E,   6,  1,  3, 1, 0,   343 }, //unicode 0x00015E
  { 0x00015F,   5,  1,  5, 0, 0,   349 }, //unicode 0x00015F
  { 0x000401,   6,  1,  1, 1, 0,   354 }, //unicode 0x000401
  { 0x000410,   7,  0,  3, 0, 0,   359 }, //unicode 0x000410
  { 0x000411,   7,  1,  3, 1, 0,   366 }, //unicode 0x000411
  { 0x000412,   7,  1,  3, 1, 0,   371 }, //unicode 0x000412
  { 0x000413,   6,  1,  3, 0, 0,   376 }, //unicode 0x000413
  { 0x000414,   8,  0,  3, 0, 0,   381 }, //unicode 0x000414
  { 0x000415,   6,  1,  3, 1, 0,   391 }, //unicode 0x000415
  { 0x000416,  10,  0,  3, 1, 0,   395 }, //unicode 0x000416
  { 0x000417,   6,  0,  3, 1, 0,   404 }, //unicode 0x000417
  { 0x000418,   8,  1,  3, 1, 0,   409 }, //unicode 0x000418
  { 0x000419,   8,  1,  0, 1, 0,   415 }, //unicode 0x000419
  { 0x00041A,   7,  1,  3, 0, 0,   424 }, //unicode 0x00041A
  { 0x00041B,   8,  0,  3, 1, 0,   430 }, //unicode 0x00041B
  { 0x00041C,  10,  1,  3, 1, 0,   437 }, //unicode 0x00041C
  { 0x00041D,   8,  1,  3, 1, 0,   445 }, //unicode 0x00041D
  { 0x00041E,   9,  1,  3, 1, 0,   451 }, //unicode 0x00041E
  { 0x00041F,   8,  1,  3, 1, 0,   458 }, //unicode 0x00041F
  { 0x000420,   7,  1,  3, 1, 0,   464 }, //unicode 0x000420
  { 0x000421,   7,  1,  3, 0, 0,   469 }, //unicode 0x000421
  { 0x000422,   6,  0,  3, 0, 0,   475 }, //unicode 0x000422
  { 0x000423,   7,  0,  3, 0, 0,   481 }, //unicode 0x000423
  { 0x000424,   9,  1,  3, 1, 0,   488 }, //unicode 0x000424
  { 0x000425,   7,  0,  3, 1, 0,   495 }, //unicode 0x000425
  { 0x000426,   8,  1,  3, 0, 0,   501 }, //unicode 0x000426
  { 0x000427,   8,  1,  3, 1, 0,   510 }, //unicode 0x000427
  { 0x000428,  11,  1,  3, 1, 0,   516 }, //unicode 0x000428
  { 0x000429,  12,  1,  3, 1, 0,   525 }, //unicode 0x000429
  { 0x00042A,   8,  0,  3, 1, 0,   538 }, //unicode 0x00042A
  { 0x00042B,   9,  1,  3, 1, 0,   545 }, //unicode 0x00042B
  { 0x00042C,   7,  1,  3, 1, 0,   552 }, //unicode 0x00042C
  { 0x00042D,   7,  0,  3, 1, 0,   557 }, //unicode 0x00042D
  { 0x00042E,  12,  1,  3, 1, 0,   563 }, //unicode 0x00042E
  { 0x00042F,   7,  1,  3, 1, 0,   573 }, //unicode 0x00042F
  { 0x000430,   6,  1,  5, 1, 0,   578 }, //unicode 0x000430
  { 0x000431,   7,  1,  3, 1, 0,   581 }, //unicode 0x000431
  { 0x000432,   6,  1,  5, 0, 0,   586 }, //unicode 0x000432
  { 0x000433,   5,  1,  5, 0, 0,   590 }, //unicode 0x000433
  { 0x000434,   7,  0,  5, 1, 0,   593 }, //unicode 0x000434
  { 0x000435,   6,  1,  5, 1, 0,   599 }, //unicode 0x000435
  { 0x000436,   9,  0,  5, 1, 0,   602 }, //unicode 0x000436
  { 0x000437,   5,  0,  5, 1, 0,   608 }, //unicode 0x000437
  { 0x000438,   7,  1,  5, 1, 0,   611 }, //unicode 0x000438
  { 0x000439,   7,  1,  2, 1, 0,   615 }, //unicode 0x000439
  { 0x00043A,   6,  1,  5, 1, 0,   621 }, //unicode 0x00043A
  { 0x00043B,   6,  0,  5, 1, 0,   624 }, //unicode 0x00043B
  { 0x00043C,   8,  1,  5, 1, 0,   628 }, //unicode 0x00043C
  { 0x00043D,   7,  1,  5, 1, 0,   633 }, //unicode 0x00043D
  { 0x00043E,   7,  1,  5, 1, 0,   637 }, //unicode 0x00043E
  { 0x00043F,   7,  1,  5, 1, 0,   641 }, //unicode 0x00043F
  { 0x000440,   7,  1,  5, 1, 0,   645 }, //unicode 0x000440
  { 0x000441,   5,  1,  5, 0, 0,   651 }, //unicode 0x000441
  { 0x000442,   5,  0,  5, 0, 0,   654 }, //unicode 0x000442
  { 0x000443,   6,  0,  5, 0, 0,   658 }, //unicode 0x000443
  { 0x000444,   8,  1,  3, 1, 0,   665 }, //unicode 0x000444
  { 0x000445,   6,  1,  5, 1, 0,   673 }, //unicode 0x000445
  { 0x000446,   7,  1,  5, 0, 0,   676 }, //unicode 0x000446
  { 0x000447,   7,  1,  5, 1, 0,   682 }, //unicode 0x000447
  { 0x000448,  10,  1,  5, 1, 0,   686 }, //unicode 0x000448
  { 0x000449,  10,  1,  5, 0, 0,   692 }, //unicode 0x000449
  { 0x00044A,   8,  0,  5, 1, 0,   701 }, //unicode 0x00044A
  { 0x00044B,   8,  1,  5, 1, 0,   707 }, //unicode 0x00044B
  { 0x00044C,   7,  1,  5, 1, 0,   712 }, //unicode 0x00044C
  { 0x00044D,   5,  0,  5, 1, 0,   716 }, //unicode 0x00044D
  { 0x00044E,   9,  1,  5, 1, 0,   719 }, //unicode 0x00044E
  { 0x00044F,   6,  0,  5, 1, 0,   725 }, //unicode 0x00044F
  { 0x000451,   6,  1,  3, 1, 0,   729 }, //unicode 0x000451
  { 0x0020A4,   6,  0,  3, 0, 0,   733 }, //unicode 0x0020A4
  { 0x00FFFD,  11,  1,  3, 1, 0,   739 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_REGULAR_11PX_UNICODE = {
  750, // bitmap len
  BAGL_FONT_OPEN_SANS_REGULAR_11px, // font id
  11, // baseline (does already contain the nb of skipped lines)
  charactersOPEN_SANS_REGULAR_11PX_UNICODE,
  bitmapOPEN_SANS_REGULAR_11PX_UNICODE
};
