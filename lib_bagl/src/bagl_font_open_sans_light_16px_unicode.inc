const unsigned char bitmapOPEN_SANS_LIGHT_16PX_UNICODE[] = {
//unicode 0x0000A1
  0x09, 0x90, 0x24, 0x49, 0x02,
//unicode 0x0000BF
  0x08, 0x02, 0x20, 0x08, 0x21, 0x04, 0x41, 0x10,
  0x78,
//unicode 0x0000C0
  0x08, 0x40, 0x00, 0x01, 0x00, 0x20, 0xC0, 0x00,
  0x03, 0x12, 0x48, 0x20, 0x42, 0x08, 0x3F, 0x02,
  0x09, 0x24, 0x50, 0x80,
//unicode 0x0000C1
  0x60, 0x80, 0x00, 0x01, 0x00, 0x20, 0xC0, 0x00,
  0x03, 0x12, 0x48, 0x20, 0x42, 0x08, 0x3F, 0x02,
  0x09, 0x24, 0x50, 0x80,
//unicode 0x0000C2
  0x10, 0xA0, 0x80, 0x04, 0x00, 0x20, 0xC0, 0x00,
  0x03, 0x12, 0x48, 0x20, 0x42, 0x08, 0x3F, 0x02,
  0x09, 0x24, 0x50, 0x80,
//unicode 0x0000C3
  0x98, 0x90, 0x01, 0x00, 0x08, 0x30, 0xC0, 0x80,
  0x04, 0x12, 0x88, 0x10, 0xC2, 0x8F, 0x40, 0x02,
  0x09, 0x14, 0x20,
//unicode 0x0000C4
  0x48, 0x00, 0x00, 0x02, 0x0C, 0x30, 0x20, 0x81,
  0x04, 0x22, 0x84, 0xF0, 0x23, 0x90, 0x40, 0x02,
  0x05, 0x08,
//unicode 0x0000C6
  0xE0, 0x0F, 0x14, 0x00, 0x05, 0x40, 0x01, 0x48,
  0x00, 0xF2, 0x43, 0x04, 0xF0, 0x01, 0x42, 0x80,
  0x10, 0x20, 0x04, 0x04, 0x3F,
//unicode 0x0000C7
  0xF8, 0x08, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80,
  0x00, 0x01, 0x04, 0x18, 0xC0, 0x07, 0x01, 0x06,
  0x08, 0x0C,
//unicode 0x0000C8
  0x02, 0x01, 0x01, 0xF0, 0x0B, 0x04, 0x02, 0x81,
  0x5F, 0x20, 0x10, 0x08, 0x04, 0x7E,
//unicode 0x0000C9
  0x10, 0x04, 0x01, 0xF0, 0x0B, 0x04, 0x02, 0x81,
  0x5F, 0x20, 0x10, 0x08, 0x04, 0x7E,
//unicode 0x0000CA
  0x04, 0x85, 0x04, 0xF0, 0x0B, 0x04, 0x02, 0x81,
  0x5F, 0x20, 0x10, 0x08, 0x04, 0x7E,
//unicode 0x0000CB
  0x12, 0xC0, 0x2F, 0x10, 0x08, 0x04, 0x7E, 0x81,
  0x40, 0x20, 0x10, 0xF8, 0x01,
//unicode 0x0000CD
  0x4A, 0x90, 0x24, 0x49, 0x92, 0x24,
//unicode 0x0000CE
  0x86, 0x91, 0x00, 0x04, 0x41, 0x10, 0x04, 0x41,
  0x10, 0x04, 0x41, 0x10,
//unicode 0x0000CF
  0x09, 0x10, 0x42, 0x08, 0x21, 0x84, 0x10, 0x42,
  0x08,
//unicode 0x0000D1
  0x2C, 0xC8, 0x00, 0x40, 0x20, 0x81, 0x0C, 0x52,
  0x48, 0x21, 0x89, 0x44, 0x12, 0x49, 0x28, 0xC1,
  0x04, 0x13, 0x08,
//unicode 0x0000D3
  0x40, 0x00, 0x01, 0x04, 0x00, 0x80, 0x07, 0xC3,
  0x08, 0x24, 0x40, 0x01, 0x0A, 0x50, 0x80, 0x02,
  0x14, 0x20, 0x81, 0x18, 0x06, 0x0F,
//unicode 0x0000D4
  0x30, 0x80, 0x01, 0x12, 0x00, 0x80, 0x07, 0xC3,
  0x08, 0x24, 0x40, 0x01, 0x0A, 0x50, 0x80, 0x02,
  0x14, 0x20, 0x81, 0x18, 0x06, 0x0F,
//unicode 0x0000D5
  0x98, 0x20, 0x03, 0x00, 0xF0, 0x60, 0x18, 0x81,
  0x04, 0x28, 0x40, 0x01, 0x0A, 0x50, 0x80, 0x02,
  0x24, 0x10, 0xC3, 0xE0, 0x01,
//unicode 0x0000D6
  0x48, 0x00, 0x00, 0x1E, 0x0C, 0x23, 0x90, 0x00,
  0x05, 0x28, 0x40, 0x01, 0x0A, 0x50, 0x80, 0x04,
  0x62, 0x18, 0x3C,
//unicode 0x0000D9
  0x04, 0x10, 0x80, 0x00, 0x00, 0x81, 0x04, 0x12,
  0x48, 0x20, 0x81, 0x04, 0x12, 0x48, 0x20, 0x81,
  0x04, 0x32, 0x0C, 0x0F,
//unicode 0x0000DA
  0x30, 0x40, 0x80, 0x00, 0x00, 0x81, 0x04, 0x12,
  0x48, 0x20, 0x81, 0x04, 0x12, 0x48, 0x20, 0x81,
  0x04, 0x32, 0x0C, 0x0F,
//unicode 0x0000DB
  0x08, 0x50, 0x40, 0x02, 0x00, 0x81, 0x04, 0x12,
  0x48, 0x20, 0x81, 0x04, 0x12, 0x48, 0x20, 0x81,
  0x04, 0x32, 0x0C, 0x0F,
//unicode 0x0000DC
  0x24, 0x00, 0x10, 0x48, 0x20, 0x81, 0x04, 0x12,
  0x48, 0x20, 0x81, 0x04, 0x12, 0x48, 0x20, 0xC3,
  0xF0,
//unicode 0x0000DF
  0x1E, 0x22, 0x21, 0x21, 0x11, 0x09, 0x09, 0x11,
  0x61, 0x41, 0x41, 0x45, 0x39,
//unicode 0x0000E0
  0x02, 0x02, 0x02, 0xE0, 0x01, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E1
  0x10, 0x04, 0x01, 0xE0, 0x81, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E2
  0x08, 0x8A, 0x08, 0xE0, 0x01, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E3
  0xA6, 0x0C, 0xC0, 0x03, 0x03, 0x81, 0x7C, 0xA1,
  0x50, 0xCC, 0x05,
//unicode 0x0000E4
  0x12, 0x80, 0x07, 0x06, 0x02, 0xF9, 0x42, 0xA1,
  0x98, 0x0B,
//unicode 0x0000E6
  0x9E, 0x07, 0x8C, 0x80, 0x21, 0x10, 0xE4, 0xFF,
  0x42, 0x40, 0x08, 0x08, 0x03, 0x9E, 0x07,
//unicode 0x0000E7
  0x3C, 0x41, 0x20, 0x10, 0x08, 0x04, 0x04, 0x3C,
  0x04, 0x02, 0xC1,
//unicode 0x0000E8
  0x04, 0x08, 0x10, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000E9
  0x10, 0x08, 0x04, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000EA
  0x08, 0x14, 0x22, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000EB
  0x14, 0x00, 0x1C, 0x22, 0x41, 0x41, 0x7F, 0x01,
  0x01, 0x42, 0x3C,
//unicode 0x0000ED
  0x52, 0x90, 0x24, 0x49, 0x12,
//unicode 0x0000EE
  0x84, 0x12, 0x11, 0x04, 0x41, 0x10, 0x04, 0x41,
  0x10,
//unicode 0x0000EF
  0x05, 0x08, 0x21, 0x84, 0x10, 0x42, 0x08,
//unicode 0x0000F1
  0x4C, 0x32, 0x00, 0x1D, 0x23, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x41,
//unicode 0x0000F3
  0x30, 0x10, 0x08, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x22, 0x1C,
//unicode 0x0000F4
  0x08, 0x14, 0x22, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x22, 0x1C,
//unicode 0x0000F5
  0x2C, 0x32, 0x00, 0x1C, 0x22, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x22, 0x1C,
//unicode 0x0000F6
  0x24, 0x00, 0x1C, 0x22, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x22, 0x1C,
//unicode 0x0000F9
  0x04, 0x08, 0x10, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x0000FA
  0x10, 0x10, 0x08, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x0000FB
  0x08, 0x14, 0x22, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x0000FC
  0x24, 0x00, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x62, 0x5E,
//unicode 0x00011E
  0x48, 0x80, 0x03, 0x00, 0xF0, 0xC3, 0x00, 0x01,
  0x04, 0x20, 0x00, 0x01, 0x08, 0x5F, 0x80, 0x02,
  0x24, 0x20, 0x02, 0xE1, 0x07,
//unicode 0x00011F
  0x24, 0x38, 0x00, 0xE0, 0x27, 0x42, 0x88, 0x10,
  0x11, 0x3C, 0x08, 0x08, 0xE0, 0x23, 0x28, 0xD0,
  0x10, 0x1F,
//unicode 0x000130
  0x45, 0x55, 0x55, 0x15,
//unicode 0x000131
  0x49, 0x92, 0x24, 0x01,
//unicode 0x000152
  0xF8, 0xCF, 0x08, 0x08, 0x81, 0x20, 0x10, 0x04,
  0x82, 0x5F, 0x10, 0x08, 0x02, 0x41, 0x40, 0x08,
  0x18, 0x01, 0xFC, 0x07,
//unicode 0x000153
  0x3C, 0x8F, 0x28, 0x12, 0x0C, 0x05, 0x41, 0xC1,
  0x5F, 0x10, 0x10, 0x04, 0x88, 0x02, 0x1C, 0x0F,
//unicode 0x00015E
  0x3C, 0x43, 0x01, 0x01, 0x03, 0x0C, 0x30, 0x40,
  0x40, 0x40, 0x60, 0x3F, 0x08, 0x08, 0x08, 0x0C,
//unicode 0x00015F
  0x5E, 0x10, 0x0C, 0x0C, 0x04, 0x41, 0x0F, 0x41,
  0x20, 0x06,
//unicode 0x000401
  0x12, 0xC0, 0x2F, 0x10, 0x08, 0x04, 0x7E, 0x81,
  0x40, 0x20, 0x10, 0xF8, 0x01,
//unicode 0x000410
  0x20, 0xC0, 0x00, 0x03, 0x12, 0x48, 0x20, 0x42,
  0x08, 0x3F, 0x02, 0x09, 0x24, 0x50, 0x80,
//unicode 0x000411
  0x3F, 0x01, 0x01, 0x01, 0x01, 0x3F, 0x61, 0x41,
  0x41, 0x41, 0x61, 0x1F,
//unicode 0x000412
  0x1F, 0x61, 0x41, 0x41, 0x21, 0x1F, 0x61, 0x41,
  0x41, 0x41, 0x61, 0x1F,
//unicode 0x000413
  0x7F, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10,
  0x04,
//unicode 0x000414
  0xF0, 0x40, 0x84, 0x10, 0x42, 0x08, 0x21, 0x84,
  0x10, 0x41, 0x04, 0x11, 0x24, 0xD0, 0xFF, 0x01,
  0x06, 0x18, 0x20,
//unicode 0x000415
  0xBF, 0x40, 0x20, 0x10, 0xF8, 0x05, 0x02, 0x81,
  0x40, 0xE0, 0x07,
//unicode 0x000416
  0x42, 0x44, 0x88, 0x10, 0x09, 0xA4, 0x00, 0x0D,
  0xE0, 0x01, 0x34, 0x40, 0x0A, 0x48, 0x81, 0x48,
  0x08, 0x91, 0x20, 0x04,
//unicode 0x000417
  0x3E, 0x61, 0x40, 0x40, 0x20, 0x1E, 0x20, 0x40,
  0x40, 0x40, 0x60, 0x1F,
//unicode 0x000418
  0x81, 0x04, 0x13, 0x4C, 0x28, 0x91, 0x44, 0x92,
  0x48, 0x21, 0x85, 0x0C, 0x12, 0x48, 0x20,
//unicode 0x000419
  0x22, 0x70, 0x00, 0x40, 0x20, 0xC1, 0x04, 0x13,
  0x4A, 0x24, 0x91, 0x24, 0x52, 0x48, 0x21, 0x83,
  0x04, 0x12, 0x08,
//unicode 0x00041A
  0x21, 0x11, 0x09, 0x09, 0x05, 0x03, 0x03, 0x05,
  0x09, 0x11, 0x21, 0x61,
//unicode 0x00041B
  0xF0, 0x41, 0x08, 0x42, 0x10, 0x82, 0x10, 0x84,
  0x20, 0x04, 0x21, 0x04, 0x21, 0x08, 0x41, 0x06,
  0x02,
//unicode 0x00041C
  0x01, 0x12, 0x30, 0x03, 0x33, 0x30, 0x85, 0x52,
  0x28, 0x85, 0x92, 0x24, 0x49, 0x12, 0x23, 0x31,
  0x12, 0x21,
//unicode 0x00041D
  0x81, 0x04, 0x12, 0x48, 0x20, 0x81, 0xFC, 0x13,
  0x48, 0x20, 0x81, 0x04, 0x12, 0x48, 0x20,
//unicode 0x00041E
  0x78, 0x30, 0x8C, 0x40, 0x02, 0x14, 0xA0, 0x00,
  0x05, 0x28, 0x40, 0x01, 0x12, 0x88, 0x61, 0xF0,
//unicode 0x00041F
  0x7F, 0x82, 0x04, 0x09, 0x12, 0x24, 0x48, 0x90,
  0x20, 0x41, 0x82, 0x04, 0x09, 0x02,
//unicode 0x000420
  0x9F, 0x58, 0x28, 0x14, 0x8A, 0x3D, 0x02, 0x81,
  0x40, 0x20,
//unicode 0x000421
  0xF8, 0x08, 0x08, 0x08, 0x10, 0x20, 0x40, 0x80,
  0x00, 0x01, 0x04, 0x18, 0xC0, 0x07,
//unicode 0x000422
  0xFF, 0x20, 0x40, 0x80, 0x00, 0x01, 0x02, 0x04,
  0x08, 0x10, 0x20, 0x40, 0x80,
//unicode 0x000423
  0x01, 0x09, 0x22, 0x08, 0x21, 0x44, 0x20, 0x81,
  0x02, 0x0C, 0x10, 0x40, 0x80, 0x81, 0x03,
//unicode 0x000424
  0x20, 0x00, 0x01, 0x3F, 0x44, 0x12, 0xA2, 0x10,
  0x85, 0x28, 0x44, 0x22, 0xE1, 0x07, 0x08, 0x40,
//unicode 0x000425
  0x82, 0x04, 0x11, 0x41, 0x82, 0x02, 0x02, 0x0A,
  0x14, 0x44, 0x88, 0x08, 0x0A, 0x08,
//unicode 0x000426
  0x81, 0x04, 0x12, 0x48, 0x20, 0x81, 0x04, 0x12,
  0x48, 0x20, 0x81, 0x04, 0x12, 0xC8, 0xFF, 0x00,
  0x02, 0x08, 0x20,
//unicode 0x000427
  0x81, 0x04, 0x12, 0x48, 0x20, 0x81, 0x04, 0x22,
  0x08, 0x3F, 0x80, 0x00, 0x02, 0x08, 0x20,
//unicode 0x000428
  0x41, 0x48, 0x10, 0x12, 0x84, 0x04, 0x21, 0x41,
  0x48, 0x10, 0x12, 0x84, 0x04, 0x21, 0x41, 0x48,
  0x10, 0x12, 0x84, 0xFC, 0x3F,
//unicode 0x000429
  0x21, 0x48, 0x08, 0x12, 0x82, 0x84, 0x20, 0x21,
  0x48, 0x08, 0x12, 0x82, 0x84, 0x20, 0x21, 0x48,
  0x08, 0x12, 0x82, 0xFC, 0xFF, 0x00, 0x20, 0x00,
  0x08, 0x00, 0x02,
//unicode 0x00042A
  0x0F, 0x40, 0x00, 0x02, 0x10, 0x80, 0x00, 0xFC,
  0x20, 0x0C, 0x41, 0x08, 0x42, 0x10, 0xC2, 0xF0,
  0x01,
//unicode 0x00042B
  0x01, 0x09, 0x48, 0x40, 0x02, 0x12, 0x90, 0x8F,
  0x84, 0x24, 0x24, 0x41, 0x09, 0x49, 0x48, 0x3E,
  0x02,
//unicode 0x00042C
  0x01, 0x01, 0x01, 0x01, 0x01, 0x3F, 0x61, 0x41,
  0x41, 0x41, 0x61, 0x1F,
//unicode 0x00042D
  0x1F, 0x40, 0x00, 0x01, 0x04, 0xC8, 0x1F, 0x20,
  0x40, 0x80, 0x80, 0x80, 0xF8,
//unicode 0x00042E
  0xC1, 0x43, 0x08, 0x13, 0x81, 0x44, 0x40, 0x11,
  0xD0, 0x03, 0x94, 0x00, 0x45, 0x40, 0x11, 0x50,
  0x04, 0x12, 0xC2, 0x04, 0x0F,
//unicode 0x00042F
  0x7C, 0x8C, 0x08, 0x11, 0x22, 0xC4, 0x08, 0x1F,
  0x24, 0x44, 0x88, 0x08, 0x09, 0x02,
//unicode 0x000430
  0x1E, 0x18, 0x08, 0xE4, 0x0B, 0x85, 0x62, 0x2E,
//unicode 0x000431
  0x70, 0x0C, 0x02, 0x01, 0x01, 0x3D, 0x63, 0x41,
  0x41, 0x41, 0x41, 0x22, 0x1C,
//unicode 0x000432
  0x3F, 0x41, 0x41, 0x41, 0x3F, 0x41, 0x41, 0x41,
  0x3F,
//unicode 0x000433
  0x7F, 0x10, 0x04, 0x41, 0x10, 0x04, 0x01,
//unicode 0x000434
  0x78, 0x10, 0x21, 0x42, 0x44, 0x88, 0x10, 0x21,
  0x41, 0xFF, 0x03, 0x06, 0x0C, 0x08,
//unicode 0x000435
  0x1C, 0x22, 0x41, 0x41, 0x7F, 0x01, 0x01, 0x02,
  0x3C,
//unicode 0x000436
  0x22, 0x22, 0x09, 0x29, 0x50, 0x01, 0x07, 0x54,
  0x90, 0x44, 0x44, 0x21, 0x04,
//unicode 0x000437
  0x0F, 0x04, 0x41, 0x0E, 0x04, 0x41, 0x0F,
//unicode 0x000438
  0xC1, 0x42, 0x85, 0x8A, 0x94, 0x28, 0x51, 0xA1,
  0x42, 0x83,
//unicode 0x000439
  0x22, 0x38, 0x00, 0x08, 0x16, 0x2A, 0x54, 0xA4,
  0x44, 0x89, 0x0A, 0x15, 0x1A, 0x04,
//unicode 0x00043A
  0x91, 0x44, 0xA2, 0x30, 0x28, 0x24, 0x22, 0x31,
//unicode 0x00043B
  0xF8, 0x10, 0x21, 0x22, 0x44, 0x88, 0x10, 0x21,
  0x43, 0x83,
//unicode 0x00043C
  0x83, 0x0D, 0x56, 0x54, 0x51, 0x45, 0xA5, 0x94,
  0x52, 0x4A, 0x11, 0x01,
//unicode 0x00043D
  0x81, 0x02, 0x05, 0x0A, 0xF4, 0x2F, 0x50, 0xA0,
  0x40, 0x81,
//unicode 0x00043E
  0x1C, 0x22, 0x41, 0x41, 0x41, 0x41, 0x41, 0x22,
  0x1C,
//unicode 0x00043F
  0xFF, 0x02, 0x05, 0x0A, 0x14, 0x28, 0x50, 0xA0,
  0x40, 0x81,
//unicode 0x000440
  0x3D, 0x86, 0x0C, 0x0A, 0x14, 0x28, 0xD0, 0xA0,
  0x21, 0x3D, 0x02, 0x04, 0x08, 0x10,
//unicode 0x000441
  0x3C, 0x41, 0x20, 0x10, 0x08, 0x04, 0x04, 0x3C,
//unicode 0x000442
  0x7F, 0x04, 0x02, 0x81, 0x40, 0x20, 0x10, 0x08,
//unicode 0x000443
  0x41, 0x41, 0x22, 0x22, 0x22, 0x14, 0x14, 0x14,
  0x08, 0x08, 0x04, 0x04, 0x03,
//unicode 0x000444
  0x10, 0x40, 0x00, 0x01, 0x04, 0x7C, 0x48, 0x12,
  0x51, 0x44, 0x11, 0x45, 0x14, 0x91, 0x24, 0x7C,
  0x40, 0x00, 0x01, 0x04, 0x10,
//unicode 0x000445
  0xA1, 0x88, 0x84, 0xC1, 0x60, 0x48, 0x42, 0x21,
//unicode 0x000446
  0x81, 0x02, 0x05, 0x0A, 0x14, 0x28, 0x50, 0xA0,
  0x40, 0xFF, 0x01, 0x02, 0x04, 0x08,
//unicode 0x000447
  0x41, 0x41, 0x41, 0x41, 0x63, 0x5E, 0x40, 0x40,
  0x40,
//unicode 0x000448
  0x21, 0x28, 0x04, 0x85, 0xA0, 0x10, 0x14, 0x82,
  0x42, 0x50, 0x08, 0x0A, 0x41, 0xFF, 0x0F,
//unicode 0x000449
  0x21, 0x28, 0x04, 0x85, 0xA0, 0x10, 0x14, 0x82,
  0x42, 0x50, 0x08, 0x0A, 0x41, 0xFF, 0x1F, 0x00,
  0x02, 0x40, 0x00, 0x08,
//unicode 0x00044A
  0x0F, 0x20, 0x80, 0x00, 0x02, 0xF8, 0x20, 0x84,
  0x10, 0x42, 0xF8,
//unicode 0x00044B
  0x01, 0x0A, 0x50, 0x80, 0x02, 0xF4, 0xA3, 0x20,
  0x05, 0x29, 0x48, 0x3F, 0x02,
//unicode 0x00044C
  0x01, 0x01, 0x01, 0x01, 0x3F, 0x41, 0x41, 0x41,
  0x3F,
//unicode 0x00044D
  0x0F, 0x08, 0x08, 0xF4, 0x03, 0x81, 0x20, 0x0F,
//unicode 0x00044E
  0xC1, 0x11, 0x22, 0x11, 0x14, 0x41, 0x1F, 0x14,
  0x41, 0x11, 0x14, 0x22, 0xC1, 0x01,
//unicode 0x00044F
  0xBE, 0x50, 0x28, 0xE4, 0x13, 0x89, 0x42, 0x21,
//unicode 0x000451
  0x14, 0x00, 0x1C, 0x22, 0x41, 0x41, 0x7F, 0x01,
  0x01, 0x02, 0x3C,
//unicode 0x0020A4
  0x38, 0x04, 0x02, 0x02, 0x02, 0x1F, 0x02, 0x1F,
  0x02, 0x02, 0x02, 0x7F,
//unicode 0x00FFFD
  0x40, 0x00, 0x60, 0x00, 0x78, 0x00, 0x42, 0x80,
  0x41, 0xE0, 0x67, 0xF8, 0x73, 0xFE, 0x7C, 0x3E,
  0x1F, 0x9E, 0x07, 0xFE, 0x01, 0x66, 0x00, 0x12,
  0x00, 0x06, 0x00, 0x01,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_LIGHT_16PX_UNICODE[125] = {
  { 0x0000A1,   5,  2,  7,    5,     0 }, //unicode 0x0000A1
  { 0x0000BF,   8,  2,  7,    9,     5 }, //unicode 0x0000BF
  { 0x0000C0,  11,  1,  0,   20,    14 }, //unicode 0x0000C0
  { 0x0000C1,  11,  1,  0,   20,    34 }, //unicode 0x0000C1
  { 0x0000C2,  11,  1,  0,   20,    54 }, //unicode 0x0000C2
  { 0x0000C3,  11,  1,  1,   19,    74 }, //unicode 0x0000C3
  { 0x0000C4,  11,  1,  2,   18,    93 }, //unicode 0x0000C4
  { 0x0000C6,  14,  0,  4,   21,   111 }, //unicode 0x0000C6
  { 0x0000C7,  11,  2,  4,   18,   132 }, //unicode 0x0000C7
  { 0x0000C8,  10,  3,  0,   14,   150 }, //unicode 0x0000C8
  { 0x0000C9,  10,  3,  1,   14,   164 }, //unicode 0x0000C9
  { 0x0000CA,  10,  3,  0,   14,   178 }, //unicode 0x0000CA
  { 0x0000CB,  10,  3,  2,   13,   192 }, //unicode 0x0000CB
  { 0x0000CD,   6,  3,  0,    6,   205 }, //unicode 0x0000CD
  { 0x0000CE,   6,  0,  0,   12,   211 }, //unicode 0x0000CE
  { 0x0000CF,   5,  0,  2,    9,   223 }, //unicode 0x0000CF
  { 0x0000D1,  13,  3,  1,   19,   232 }, //unicode 0x0000D1
  { 0x0000D3,  13,  2,  0,   22,   251 }, //unicode 0x0000D3
  { 0x0000D4,  13,  2,  0,   22,   273 }, //unicode 0x0000D4
  { 0x0000D5,  13,  2,  1,   21,   295 }, //unicode 0x0000D5
  { 0x0000D6,  13,  2,  2,   19,   316 }, //unicode 0x0000D6
  { 0x0000D9,  13,  3,  0,   20,   335 }, //unicode 0x0000D9
  { 0x0000DA,  13,  3,  0,   20,   355 }, //unicode 0x0000DA
  { 0x0000DB,  13,  3,  0,   20,   375 }, //unicode 0x0000DB
  { 0x0000DC,  13,  3,  2,   17,   395 }, //unicode 0x0000DC
  { 0x0000DF,  10,  2,  3,   13,   412 }, //unicode 0x0000DF
  { 0x0000E0,   9,  2,  3,   12,   425 }, //unicode 0x0000E0
  { 0x0000E1,   9,  2,  3,   12,   437 }, //unicode 0x0000E1
  { 0x0000E2,   9,  2,  3,   12,   449 }, //unicode 0x0000E2
  { 0x0000E3,   9,  2,  4,   11,   461 }, //unicode 0x0000E3
  { 0x0000E4,   9,  2,  5,   10,   472 }, //unicode 0x0000E4
  { 0x0000E6,  15,  2,  6,   15,   482 }, //unicode 0x0000E6
  { 0x0000E7,   9,  2,  7,   11,   497 }, //unicode 0x0000E7
  { 0x0000E8,  10,  2,  3,   13,   508 }, //unicode 0x0000E8
  { 0x0000E9,  10,  2,  3,   13,   521 }, //unicode 0x0000E9
  { 0x0000EA,  10,  2,  3,   13,   534 }, //unicode 0x0000EA
  { 0x0000EB,  10,  2,  5,   11,   547 }, //unicode 0x0000EB
  { 0x0000ED,   5,  2,  3,    5,   558 }, //unicode 0x0000ED
  { 0x0000EE,   7,  1,  4,    9,   563 }, //unicode 0x0000EE
  { 0x0000EF,   6,  1,  5,    7,   572 }, //unicode 0x0000EF
  { 0x0000F1,  10,  2,  4,   12,   579 }, //unicode 0x0000F1
  { 0x0000F3,  10,  2,  3,   13,   591 }, //unicode 0x0000F3
  { 0x0000F4,  10,  2,  3,   13,   604 }, //unicode 0x0000F4
  { 0x0000F5,  10,  2,  4,   12,   617 }, //unicode 0x0000F5
  { 0x0000F6,  10,  2,  5,   11,   629 }, //unicode 0x0000F6
  { 0x0000F9,  10,  2,  3,   13,   640 }, //unicode 0x0000F9
  { 0x0000FA,  10,  2,  3,   13,   653 }, //unicode 0x0000FA
  { 0x0000FB,  10,  2,  3,   13,   666 }, //unicode 0x0000FB
  { 0x0000FC,  10,  2,  5,   11,   679 }, //unicode 0x0000FC
  { 0x00011E,  13,  2,  1,   21,   690 }, //unicode 0x00011E
  { 0x00011F,  10,  1,  4,   18,   711 }, //unicode 0x00011F
  { 0x000130,   5,  3,  1,    4,   729 }, //unicode 0x000130
  { 0x000131,   5,  2,  7,    4,   733 }, //unicode 0x000131
  { 0x000152,  15,  2,  4,   20,   737 }, //unicode 0x000152
  { 0x000153,  16,  2,  7,   16,   757 }, //unicode 0x000153
  { 0x00015E,  10,  2,  4,   16,   773 }, //unicode 0x00015E
  { 0x00015F,   8,  2,  7,   10,   789 }, //unicode 0x00015F
  { 0x000401,  10,  3,  2,   13,   799 }, //unicode 0x000401
  { 0x000410,  11,  1,  4,   15,   812 }, //unicode 0x000410
  { 0x000411,  11,  3,  4,   12,   827 }, //unicode 0x000411
  { 0x000412,  11,  3,  4,   12,   839 }, //unicode 0x000412
  { 0x000413,   9,  3,  4,    9,   851 }, //unicode 0x000413
  { 0x000414,  11,  1,  4,   19,   860 }, //unicode 0x000414
  { 0x000415,  10,  3,  4,   11,   879 }, //unicode 0x000415
  { 0x000416,  14,  1,  4,   20,   890 }, //unicode 0x000416
  { 0x000417,  10,  2,  4,   12,   910 }, //unicode 0x000417
  { 0x000418,  13,  3,  4,   15,   922 }, //unicode 0x000418
  { 0x000419,  13,  3,  1,   19,   937 }, //unicode 0x000419
  { 0x00041A,  11,  3,  4,   12,   956 }, //unicode 0x00041A
  { 0x00041B,  12,  1,  4,   17,   968 }, //unicode 0x00041B
  { 0x00041C,  15,  3,  4,   18,   985 }, //unicode 0x00041C
  { 0x00041D,  13,  3,  4,   15,  1003 }, //unicode 0x00041D
  { 0x00041E,  13,  2,  4,   16,  1018 }, //unicode 0x00041E
  { 0x00041F,  12,  3,  4,   14,  1034 }, //unicode 0x00041F
  { 0x000420,  10,  3,  4,   10,  1048 }, //unicode 0x000420
  { 0x000421,  11,  2,  4,   14,  1058 }, //unicode 0x000421
  { 0x000422,  10,  1,  4,   13,  1072 }, //unicode 0x000422
  { 0x000423,  11,  1,  4,   15,  1085 }, //unicode 0x000423
  { 0x000424,  13,  2,  4,   16,  1100 }, //unicode 0x000424
  { 0x000425,  10,  1,  4,   14,  1116 }, //unicode 0x000425
  { 0x000426,  13,  3,  4,   19,  1130 }, //unicode 0x000426
  { 0x000427,  12,  2,  4,   15,  1149 }, //unicode 0x000427
  { 0x000428,  17,  3,  4,   21,  1164 }, //unicode 0x000428
  { 0x000429,  17,  3,  4,   27,  1185 }, //unicode 0x000429
  { 0x00042A,  12,  1,  4,   17,  1212 }, //unicode 0x00042A
  { 0x00042B,  14,  3,  4,   17,  1229 }, //unicode 0x00042B
  { 0x00042C,  11,  3,  4,   12,  1246 }, //unicode 0x00042C
  { 0x00042D,  11,  2,  4,   13,  1258 }, //unicode 0x00042D
  { 0x00042E,  17,  3,  4,   21,  1271 }, //unicode 0x00042E
  { 0x00042F,  10,  1,  4,   14,  1292 }, //unicode 0x00042F
  { 0x000430,   9,  2,  7,    8,  1306 }, //unicode 0x000430
  { 0x000431,  10,  2,  3,   13,  1314 }, //unicode 0x000431
  { 0x000432,  10,  2,  7,    9,  1327 }, //unicode 0x000432
  { 0x000433,   8,  2,  7,    7,  1336 }, //unicode 0x000433
  { 0x000434,  10,  1,  7,   14,  1343 }, //unicode 0x000434
  { 0x000435,  10,  2,  7,    9,  1357 }, //unicode 0x000435
  { 0x000436,  12,  1,  7,   13,  1366 }, //unicode 0x000436
  { 0x000437,   8,  2,  7,    7,  1379 }, //unicode 0x000437
  { 0x000438,  11,  2,  7,   10,  1386 }, //unicode 0x000438
  { 0x000439,  11,  2,  4,   14,  1396 }, //unicode 0x000439
  { 0x00043A,   9,  2,  7,    8,  1410 }, //unicode 0x00043A
  { 0x00043B,  10,  1,  7,   10,  1418 }, //unicode 0x00043B
  { 0x00043C,  12,  2,  7,   12,  1428 }, //unicode 0x00043C
  { 0x00043D,  11,  2,  7,   10,  1440 }, //unicode 0x00043D
  { 0x00043E,  10,  2,  7,    9,  1450 }, //unicode 0x00043E
  { 0x00043F,  11,  2,  7,   10,  1459 }, //unicode 0x00043F
  { 0x000440,  11,  2,  7,   14,  1469 }, //unicode 0x000440
  { 0x000441,   9,  2,  7,    8,  1483 }, //unicode 0x000441
  { 0x000442,   8,  1,  7,    8,  1491 }, //unicode 0x000442
  { 0x000443,   9,  1,  7,   13,  1499 }, //unicode 0x000443
  { 0x000444,  12,  2,  3,   21,  1512 }, //unicode 0x000444
  { 0x000445,   9,  2,  7,    8,  1533 }, //unicode 0x000445
  { 0x000446,  11,  2,  7,   14,  1541 }, //unicode 0x000446
  { 0x000447,  10,  2,  7,    9,  1555 }, //unicode 0x000447
  { 0x000448,  15,  2,  7,   15,  1564 }, //unicode 0x000448
  { 0x000449,  15,  2,  7,   20,  1579 }, //unicode 0x000449
  { 0x00044A,  11,  1,  7,   11,  1599 }, //unicode 0x00044A
  { 0x00044B,  13,  2,  7,   13,  1610 }, //unicode 0x00044B
  { 0x00044C,  10,  2,  7,    9,  1623 }, //unicode 0x00044C
  { 0x00044D,   9,  2,  7,    8,  1632 }, //unicode 0x00044D
  { 0x00044E,  14,  2,  7,   14,  1640 }, //unicode 0x00044E
  { 0x00044F,   9,  2,  7,    8,  1654 }, //unicode 0x00044F
  { 0x000451,  10,  2,  5,   11,  1662 }, //unicode 0x000451
  { 0x0020A4,  10,  2,  4,   12,  1673 }, //unicode 0x0020A4
  { 0x00FFFD,  17,  2,  4,   28,  1685 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_LIGHT_16PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_LIGHT_16px, // font id
  1, // bpp => 1 for B&W
  20, // font height in pixels
  16, // baseline height in pixels
  -1, // Most left X coordinate of any char in the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_LIGHT_16PX_UNICODE,
  bitmapOPEN_SANS_LIGHT_16PX_UNICODE
};
