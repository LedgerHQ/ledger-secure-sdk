/* @BANNER@ */

const unsigned char bitmapOPEN_SANS_LIGHT_16PX_UNICODE[] = {
//unicode 0x0000A1
  0x09, 0x90, 0x24, 0x49, 0x02,
//unicode 0x0000BF
  0x08, 0x02, 0x20, 0x08, 0x21, 0x04, 0x41, 0x10,
  0x78,
//unicode 0x0000C9
  0x10, 0x04, 0x01, 0xF0, 0x0B, 0x04, 0x02, 0x81,
  0x5F, 0x20, 0x10, 0x08, 0x04, 0x7E,
//unicode 0x0000E0
  0x02, 0x02, 0x02, 0xE0, 0x01, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E1
  0x10, 0x04, 0x01, 0xE0, 0x81, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E2
  0x08, 0x8A, 0x08, 0xE0, 0x01, 0x81, 0x40, 0xBE,
  0x50, 0x28, 0xE6, 0x02,
//unicode 0x0000E7
  0x3C, 0x41, 0x20, 0x10, 0x08, 0x04, 0x04, 0x3C,
  0x04, 0x02, 0xC1,
//unicode 0x0000E8
  0x04, 0x08, 0x10, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000E9
  0x10, 0x08, 0x04, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000EA
  0x08, 0x14, 0x22, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x7F, 0x01, 0x01, 0x42, 0x3C,
//unicode 0x0000EB
  0x14, 0x00, 0x1C, 0x22, 0x41, 0x41, 0x7F, 0x01,
  0x01, 0x42, 0x3C,
//unicode 0x0000ED
  0x52, 0x90, 0x24, 0x49, 0x12,
//unicode 0x0000EE
  0x84, 0x12, 0x11, 0x04, 0x41, 0x10, 0x04, 0x41,
  0x10,
//unicode 0x0000EF
  0x05, 0x08, 0x21, 0x84, 0x10, 0x42, 0x08,
//unicode 0x0000F1
  0x4C, 0x32, 0x00, 0x1D, 0x23, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x41,
//unicode 0x0000F3
  0x30, 0x10, 0x08, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x22, 0x1C,
//unicode 0x0000F4
  0x08, 0x14, 0x22, 0x00, 0x1C, 0x22, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x22, 0x1C,
//unicode 0x0000F9
  0x04, 0x08, 0x10, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x0000FA
  0x10, 0x10, 0x08, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x0000FB
  0x08, 0x14, 0x22, 0x00, 0x41, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x41, 0x62, 0x5E,
//unicode 0x00FFFD
  0x40, 0x00, 0x60, 0x00, 0x78, 0x00, 0x42, 0x80,
  0x41, 0xE0, 0x67, 0xF8, 0x73, 0xFE, 0x7C, 0x3E,
  0x1F, 0x9E, 0x07, 0xFE, 0x01, 0x66, 0x00, 0x12,
  0x00, 0x06, 0x00, 0x01,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_LIGHT_16PX_UNICODE[21] = {
  { 0x0000A1,   5,  2,  7,    5,     0 }, //unicode 0x0000A1
  { 0x0000BF,   8,  2,  7,    9,     5 }, //unicode 0x0000BF
  { 0x0000C9,  10,  3,  1,   14,    14 }, //unicode 0x0000C9
  { 0x0000E0,   9,  2,  3,   12,    28 }, //unicode 0x0000E0
  { 0x0000E1,   9,  2,  3,   12,    40 }, //unicode 0x0000E1
  { 0x0000E2,   9,  2,  3,   12,    52 }, //unicode 0x0000E2
  { 0x0000E7,   9,  2,  7,   11,    64 }, //unicode 0x0000E7
  { 0x0000E8,  10,  2,  3,   13,    75 }, //unicode 0x0000E8
  { 0x0000E9,  10,  2,  3,   13,    88 }, //unicode 0x0000E9
  { 0x0000EA,  10,  2,  3,   13,   101 }, //unicode 0x0000EA
  { 0x0000EB,  10,  2,  5,   11,   114 }, //unicode 0x0000EB
  { 0x0000ED,   5,  2,  3,    5,   125 }, //unicode 0x0000ED
  { 0x0000EE,   7,  1,  4,    9,   130 }, //unicode 0x0000EE
  { 0x0000EF,   6,  1,  5,    7,   139 }, //unicode 0x0000EF
  { 0x0000F1,  10,  2,  4,   12,   146 }, //unicode 0x0000F1
  { 0x0000F3,  10,  2,  3,   13,   158 }, //unicode 0x0000F3
  { 0x0000F4,  10,  2,  3,   13,   171 }, //unicode 0x0000F4
  { 0x0000F9,  10,  2,  3,   13,   184 }, //unicode 0x0000F9
  { 0x0000FA,  10,  2,  3,   13,   197 }, //unicode 0x0000FA
  { 0x0000FB,  10,  2,  3,   13,   210 }, //unicode 0x0000FB
  { 0x00FFFD,  17,  2,  4,   28,   223 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_LIGHT_16PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_LIGHT_16px, // font id
  1, // bpp => 1 for B&W
  20, // font height in pixels
  16, // baseline height in pixels
  -1, // Most left X coordinate of any char in the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_LIGHT_16PX_UNICODE,
  bitmapOPEN_SANS_LIGHT_16PX_UNICODE
};
