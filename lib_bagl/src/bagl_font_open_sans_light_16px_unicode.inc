/* @BANNER@ */

const unsigned char bitmapOPEN_SANS_LIGHT_16PX_UNICODE[] = {
//unicode 0x0000A1
  0x00, 0x00, 0x22, 0x00, 0x22, 0x22, 0x22, 0x22,
  0x00,
//unicode 0x0000BF
  0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x20, 0x10,
  0x04, 0x41, 0x20, 0x10, 0x08, 0x78, 0x00, 0x00,
//unicode 0x0000C9
  0x10, 0x00, 0xF0, 0x23, 0x40, 0x80, 0x00, 0x01,
  0x7E, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1F,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000E0
  0x04, 0x08, 0x10, 0x00, 0x3C, 0x40, 0x40, 0x40,
  0x7C, 0x42, 0x42, 0x62, 0x5C, 0x00, 0x00, 0x00,
  0x00, 0x00,
//unicode 0x0000E1
  0x20, 0x10, 0x08, 0x00, 0x3C, 0x60, 0x40, 0x40,
  0x7C, 0x42, 0x42, 0x62, 0x5C, 0x00, 0x00, 0x00,
  0x00, 0x00,
//unicode 0x0000E2
  0x10, 0x28, 0x44, 0x00, 0x3C, 0x40, 0x40, 0x40,
  0x7C, 0x42, 0x42, 0x62, 0x5C, 0x00, 0x00, 0x00,
  0x00, 0x00,
//unicode 0x0000E7
  0x00, 0x00, 0x00, 0x00, 0x78, 0x04, 0x02, 0x02,
  0x02, 0x02, 0x02, 0x04, 0x78, 0x10, 0x10, 0x10,
  0x18, 0x00,
//unicode 0x0000E8
  0x08, 0x20, 0x80, 0x00, 0x80, 0x83, 0x88, 0x20,
  0x41, 0xFE, 0x04, 0x08, 0x20, 0x84, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000E9
  0x20, 0x20, 0x20, 0x00, 0x80, 0x83, 0x88, 0x20,
  0x41, 0xFE, 0x04, 0x08, 0x20, 0x84, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000EA
  0x10, 0x50, 0x10, 0x01, 0x80, 0x83, 0x88, 0x20,
  0x41, 0xFE, 0x04, 0x08, 0x20, 0x84, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000EB
  0x00, 0x00, 0xA0, 0x00, 0x80, 0x83, 0x88, 0x20,
  0x41, 0xFE, 0x04, 0x08, 0x20, 0x84, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000ED
  0x44, 0x02, 0x22, 0x22, 0x22, 0x22, 0x02, 0x00,
  0x00,
//unicode 0x0000EE
  0x00, 0xA1, 0x44, 0x04, 0x41, 0x10, 0x04, 0x41,
  0x10, 0x04, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000EF
  0x00, 0x14, 0x20, 0x84, 0x10, 0x42, 0x08, 0x21,
  0x00, 0x00, 0x00, 0x00,
//unicode 0x0000F1
  0x00, 0x30, 0x91, 0x01, 0xA0, 0xC3, 0x88, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x12, 0x24, 0x08, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000F3
  0x60, 0x40, 0x40, 0x00, 0x80, 0x83, 0x88, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x22, 0x82, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000F4
  0x10, 0x50, 0x10, 0x01, 0x80, 0x83, 0x88, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x22, 0x82, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000F9
  0x08, 0x20, 0x80, 0x00, 0x20, 0x48, 0x90, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x22, 0xC6, 0x0B, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000FA
  0x20, 0x40, 0x40, 0x00, 0x20, 0x48, 0x90, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x22, 0xC6, 0x0B, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x0000FB
  0x10, 0x50, 0x10, 0x01, 0x20, 0x48, 0x90, 0x20,
  0x41, 0x82, 0x04, 0x09, 0x22, 0xC6, 0x0B, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00,
//unicode 0x00FFFD
  0x00, 0x00, 0x80, 0x00, 0x80, 0x01, 0xC0, 0x03,
  0x20, 0x04, 0x30, 0x08, 0xF8, 0x19, 0xFC, 0x39,
  0xFE, 0x7C, 0x7C, 0x3E, 0x78, 0x1E, 0xF0, 0x0F,
  0x60, 0x06, 0x40, 0x02, 0x80, 0x01, 0x80, 0x00,
  0x00, 0x00, 0x00, 0x00,
};

const bagl_font_unicode_character_t charactersOPEN_SANS_LIGHT_16PX_UNICODE[21] = {
  { 0x0000A1,   4,   9,    0 }, //unicode 0x0000A1
  { 0x0000BF,   7,  16,    9 }, //unicode 0x0000BF
  { 0x0000C9,   9,  21,   25 }, //unicode 0x0000C9
  { 0x0000E0,   8,  18,   46 }, //unicode 0x0000E0
  { 0x0000E1,   8,  18,   64 }, //unicode 0x0000E1
  { 0x0000E2,   8,  18,   82 }, //unicode 0x0000E2
  { 0x0000E7,   8,  18,  100 }, //unicode 0x0000E7
  { 0x0000E8,   9,  21,  118 }, //unicode 0x0000E8
  { 0x0000E9,   9,  21,  139 }, //unicode 0x0000E9
  { 0x0000EA,   9,  21,  160 }, //unicode 0x0000EA
  { 0x0000EB,   9,  21,  181 }, //unicode 0x0000EB
  { 0x0000ED,   4,   9,  202 }, //unicode 0x0000ED
  { 0x0000EE,   6,  14,  211 }, //unicode 0x0000EE
  { 0x0000EF,   5,  12,  225 }, //unicode 0x0000EF
  { 0x0000F1,   9,  21,  237 }, //unicode 0x0000F1
  { 0x0000F3,   9,  21,  258 }, //unicode 0x0000F3
  { 0x0000F4,   9,  21,  279 }, //unicode 0x0000F4
  { 0x0000F9,   9,  21,  300 }, //unicode 0x0000F9
  { 0x0000FA,   9,  21,  321 }, //unicode 0x0000FA
  { 0x0000FB,   9,  21,  342 }, //unicode 0x0000FB
  { 0x00FFFD,  16,  36,  363 }, //unicode 0x00FFFD
};

const bagl_font_unicode_t fontOPEN_SANS_LIGHT_16PX_UNICODE = {
  BAGL_FONT_OPEN_SANS_LIGHT_16px, // font id
  1, // bpp => 1 for B&W
  18, // font height in pixels
  14, // baseline height in pixels
  0, // kerning - specific to the font
  0xA1, // first character
  0xFFFD, // last character
  charactersOPEN_SANS_LIGHT_16PX_UNICODE,
  bitmapOPEN_SANS_LIGHT_16PX_UNICODE
};
