#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_REGULAR_11PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0x06, 0x11,
//ascii 0x0022
  0x02, 0x22, 0x20,
//ascii 0x0023
  0x21, 0x53, 0x21, 0x45, 0x31, 0x21, 0x35, 0x41,
  0x23, 0x51, 0x20,
//ascii 0x0024
  0x11, 0x33, 0x17, 0x11, 0x21, 0x21, 0x13, 0x31,
//ascii 0x0025
  0x36, 0x21, 0x31, 0x12, 0x13, 0x42, 0x43, 0x12,
  0x11, 0x31, 0x26, 0x30,
//ascii 0x0026
  0x42, 0x11, 0x61, 0x13, 0x21, 0x12, 0x22, 0x22,
  0x21, 0x31, 0x12, 0x14,
//ascii 0x0027
  0x02, 0x60,
//ascii 0x0028
  0x03, 0x43, 0x54, 0x50,
//ascii 0x0029
  0x34, 0x53, 0x43, 0x20,
//ascii 0x002A
  0x21, 0x71, 0x11, 0x52, 0x44, 0x61, 0x11, 0x51,
  0x50,
//ascii 0x002B
  0x41, 0x71, 0x63, 0x61, 0x71, 0x71, 0x30,
//ascii 0x002C
  0x32, 0x81, 0x20,
//ascii 0x002D
  0x11, 0x31, 0x20,
//ascii 0x002E
  0x31, 0x40,
//ascii 0x002F
  0x01, 0x83, 0x83, 0x81,
//ascii 0x0030
  0x16, 0x11, 0x62, 0x61, 0x16, 0x10,
//ascii 0x0031
  0x09, 0x81, 0x60,
//ascii 0x0032
  0x13, 0x32, 0x31, 0x22, 0x41, 0x12, 0x52,
//ascii 0x0033
  0x12, 0x13, 0x11, 0x21, 0x32, 0x21, 0x32, 0x61,
//ascii 0x0034
  0x51, 0x28, 0x11, 0x31, 0x41, 0x21, 0x53, 0x71,
  0x20,
//ascii 0x0035
  0x01, 0x24, 0x11, 0x21, 0x32, 0x21, 0x35, 0x31,
//ascii 0x0036
  0x01, 0x24, 0x11, 0x21, 0x32, 0x21, 0x31, 0x16,
  0x10,
//ascii 0x0037
  0x03, 0x51, 0x22, 0x31, 0x44, 0x70,
//ascii 0x0038
  0x12, 0x13, 0x11, 0x21, 0x32, 0x21, 0x31, 0x12,
  0x13, 0x10,
//ascii 0x0039
  0x16, 0x11, 0x31, 0x22, 0x31, 0x21, 0x14, 0x21,
//ascii 0x003A
  0x21, 0x41,
//ascii 0x003B
  0x21, 0x42, 0xC1, 0x20,
//ascii 0x003C
  0x11, 0x41, 0x31, 0x21, 0x52, 0x62, 0x30,
//ascii 0x003D
  0x31, 0x11, 0x51, 0x11, 0x51, 0x11, 0x51, 0x11,
  0x20,
//ascii 0x003E
  0x32, 0x62, 0x51, 0x21, 0x31, 0x41, 0x10,
//ascii 0x003F
  0x12, 0x51, 0x21, 0x41, 0x32, 0x12, 0x70,
//ascii 0x0040
  0x16, 0x51, 0x51, 0x51, 0x15, 0x11, 0x31, 0x11,
  0x31, 0x11, 0x31, 0x11, 0x31, 0x11, 0x31, 0x24,
  0x11, 0x41, 0x61, 0x56, 0x40,
//ascii 0x0041
  0x71, 0x43, 0x23, 0x11, 0x21, 0x41, 0x33, 0x11,
  0x63, 0x81,
//ascii 0x0042
  0x03, 0x15, 0x21, 0x32, 0x21, 0x32, 0x21, 0x39,
//ascii 0x0043
  0x01, 0x62, 0x62, 0x63, 0x42, 0x16, 0x10,
//ascii 0x0044
  0x16, 0x11, 0x62, 0x62, 0x62, 0x69,
//ascii 0x0045
  0x01, 0x21, 0x32, 0x21, 0x32, 0x21, 0x39,
//ascii 0x0046
  0x01, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
  0x38,
//ascii 0x0047
  0x01, 0x35, 0x31, 0x22, 0x62, 0x62, 0x61, 0x16,
  0x10,
//ascii 0x0048
  0x08, 0x31, 0x71, 0x71, 0x71, 0x48,
//ascii 0x0049
  0x08,
//ascii 0x004A
  0x09, 0xC1, 0xB1, 0x60,
//ascii 0x004B
  0x72, 0x51, 0x21, 0x31, 0x41, 0x11, 0x61, 0x48,
//ascii 0x004C
  0x71, 0x71, 0x71, 0x79,
//ascii 0x004D
  0x0B, 0x82, 0x83, 0x53, 0x32, 0x33, 0x58,
//ascii 0x004E
  0x08, 0x61, 0x52, 0x42, 0x51, 0x68,
//ascii 0x004F
  0x16, 0x11, 0x62, 0x62, 0x62, 0x62, 0x61, 0x16,
  0x10,
//ascii 0x0050
  0x13, 0x41, 0x31, 0x31, 0x31, 0x31, 0x31, 0x38,
//ascii 0x0051
  0x16, 0x51, 0x61, 0x11, 0x21, 0x62, 0x31, 0x61,
  0x41, 0x61, 0x41, 0x61, 0x56, 0x10,
//ascii 0x0052
  0x13, 0x23, 0x32, 0x21, 0x31, 0x31, 0x31, 0x38,
//ascii 0x0053
  0x01, 0x33, 0x11, 0x31, 0x22, 0x21, 0x31, 0x13,
  0x31,
//ascii 0x0054
  0x01, 0x71, 0x79, 0x71, 0x70,
//ascii 0x0055
  0x07, 0x81, 0x71, 0x71, 0x78, 0x10,
//ascii 0x0056
  0x01, 0x83, 0x83, 0x81, 0x43, 0x23, 0x41, 0x70,
//ascii 0x0057
  0x01, 0x85, 0x82, 0x33, 0x23, 0x53, 0x83, 0x82,
  0x15, 0x21, 0x70,
//ascii 0x0058
  0x01, 0x61, 0x11, 0x32, 0x33, 0x53, 0x41, 0x32,
  0x11, 0x61,
//ascii 0x0059
  0x01, 0x82, 0x85, 0x31, 0x52, 0x51, 0x70,
//ascii 0x005A
  0x02, 0x52, 0x12, 0x32, 0x31, 0x22, 0x43,
//ascii 0x005B
  0x01, 0x81, 0x21, 0x81, 0x2A, 0x60,
//ascii 0x005C
  0x71, 0x43, 0x23, 0x41, 0x70,
//ascii 0x005D
  0x0A, 0x21, 0x81, 0x21, 0x81, 0x60,
//ascii 0x005E
  0x41, 0x52, 0x42, 0x62, 0x82, 0x81, 0x30,
//ascii 0x005F
  0x11, 0x31, 0x31, 0x31, 0x31, 0x60,
//ascii 0x0060
  0x41, 0x61, 0x40,
//ascii 0x0061
  0x26, 0x21, 0x11, 0x21, 0x21, 0x11, 0x21, 0x21,
  0x14,
//ascii 0x0062
  0x34, 0x31, 0x41, 0x21, 0x41, 0x21, 0x49,
//ascii 0x0063
  0x21, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34, 0x10,
//ascii 0x0064
  0x08, 0x21, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34,
  0x10,
//ascii 0x0065
  0x23, 0x21, 0x21, 0x11, 0x21, 0x21, 0x11, 0x21,
  0x34, 0x10,
//ascii 0x0066
  0x01, 0x11, 0x51, 0x11, 0x67, 0x21, 0x50,
//ascii 0x0067
  0x21, 0x52, 0x43, 0x21, 0x21, 0x31, 0x21, 0x11,
  0x21, 0x31, 0x21, 0x11, 0x21, 0x36, 0x21, 0x92,
  0x20,
//ascii 0x0068
  0x35, 0x21, 0x71, 0x71, 0x58,
//ascii 0x0069
  0x01, 0x16,
//ascii 0x006A
  0x01, 0x19, 0xB1, 0xB1, 0x50,
//ascii 0x006B
  0x21, 0x32, 0x31, 0x11, 0x61, 0x38,
//ascii 0x006C
  0x08,
//ascii 0x006D
  0x26, 0x21, 0x71, 0x85, 0x21, 0x71, 0x71, 0x76,
//ascii 0x006E
  0x35, 0x21, 0x71, 0x71, 0x76,
//ascii 0x006F
  0x34, 0x31, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34,
  0x10,
//ascii 0x0070
  0x34, 0x71, 0x41, 0x61, 0x41, 0x61, 0x41, 0x69,
  0x50,
//ascii 0x0071
  0x29, 0x31, 0x41, 0x61, 0x41, 0x61, 0x41, 0x74,
  0x10,
//ascii 0x0072
  0x21, 0x71, 0x76,
//ascii 0x0073
  0x61, 0x31, 0x21, 0x11, 0x21, 0x11, 0x21, 0x23,
  0x21,
//ascii 0x0074
  0x21, 0x41, 0x21, 0x41, 0x17, 0x21, 0x50,
//ascii 0x0075
  0x26, 0x71, 0x71, 0x71, 0x26,
//ascii 0x0076
  0x21, 0x83, 0x82, 0x62, 0x33, 0x41, 0x50,
//ascii 0x0077
  0x21, 0x83, 0x82, 0x33, 0x41, 0x83, 0x82, 0x33,
  0x41, 0x50,
//ascii 0x0078
  0x22, 0x22, 0x42, 0x62, 0x42, 0x22,
//ascii 0x0079
  0x21, 0xC3, 0xC2, 0xA4, 0x53, 0x41, 0x31, 0x71,
  0x10,
//ascii 0x007A
  0x21, 0x41, 0x22, 0x31, 0x21, 0x12, 0x11, 0x21,
  0x32, 0x21, 0x41,
//ascii 0x007B
  0x01, 0x81, 0x24, 0x24, 0x62, 0x20,
//ascii 0x007C
  0x0B, 0x50,
//ascii 0x007D
  0x42, 0x64, 0x24, 0x21, 0x81, 0x60,
//ascii 0x007E
  0x41, 0x71, 0x61, 0x71, 0x40,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_REGULAR_11PX_1BPP[95] = {
  { 0,     0,  4,0, 0, 0, 0 }, //asciii 0x0020
  { 1,     0,  4,2, 1, 1, 1 }, //asciii 0x0021
  { 1,     2,  5,2, 1, 1, 2 }, //asciii 0x0022
  { 1,     5,  8,1, 1, 0, 1 }, //asciii 0x0023
  { 1,    16,  7,2, 1, 1, 1 }, //asciii 0x0024
  { 1,    24, 10,2, 1, 1, 1 }, //asciii 0x0025
  { 1,    36, 10,2, 1, 2, 1 }, //asciii 0x0026
  { 1,    48,  3,2, 1, 0, 2 }, //asciii 0x0027
  { 1,    50,  4,1, 1, 1, 0 }, //asciii 0x0028
  { 1,    54,  4,2, 1, 0, 0 }, //asciii 0x0029
  { 1,    58,  7,1, 1, 0, 1 }, //asciii 0x002A
  { 1,    67,  7,1, 1, 0, 1 }, //asciii 0x002B
  { 1,    74,  4,1, 2, 1, 0 }, //asciii 0x002C
  { 1,    77,  5,2, 2, 1, 1 }, //asciii 0x002D
  { 1,    80,  4,2, 2, 1, 1 }, //asciii 0x002E
  { 1,    82,  5,1, 1, 0, 1 }, //asciii 0x002F
  { 1,    86,  7,2, 1, 1, 1 }, //asciii 0x0030
  { 1,    92,  7,2, 1, 2, 1 }, //asciii 0x0031
  { 1,    95,  7,2, 1, 1, 1 }, //asciii 0x0032
  { 1,   102,  7,2, 1, 1, 1 }, //asciii 0x0033
  { 1,   110,  9,2, 1, 1, 1 }, //asciii 0x0034
  { 1,   119,  7,2, 1, 1, 1 }, //asciii 0x0035
  { 1,   127,  7,2, 1, 1, 1 }, //asciii 0x0036
  { 1,   136,  7,2, 1, 1, 1 }, //asciii 0x0037
  { 1,   142,  7,2, 1, 1, 1 }, //asciii 0x0038
  { 1,   152,  7,2, 1, 1, 1 }, //asciii 0x0039
  { 1,   160,  4,2, 1, 1, 1 }, //asciii 0x003A
  { 1,   162,  4,1, 1, 1, 0 }, //asciii 0x003B
  { 1,   166,  7,2, 1, 1, 1 }, //asciii 0x003C
  { 1,   173,  7,2, 1, 1, 1 }, //asciii 0x003D
  { 1,   182,  7,2, 1, 1, 1 }, //asciii 0x003E
  { 1,   189,  6,2, 1, 0, 1 }, //asciii 0x003F
  { 1,   196, 11,2, 1, 1, 0 }, //asciii 0x0040
  { 1,   217,  8,1, 1, 0, 1 }, //asciii 0x0041
  { 1,   227,  8,2, 1, 1, 1 }, //asciii 0x0042
  { 1,   235,  8,2, 1, 1, 1 }, //asciii 0x0043
  { 1,   242,  9,2, 1, 1, 1 }, //asciii 0x0044
  { 1,   248,  7,2, 1, 1, 1 }, //asciii 0x0045
  { 1,   255,  7,2, 1, 0, 1 }, //asciii 0x0046
  { 1,   264,  9,2, 1, 1, 1 }, //asciii 0x0047
  { 1,   273,  9,2, 1, 1, 1 }, //asciii 0x0048
  { 1,   279,  4,2, 1, 1, 1 }, //asciii 0x0049
  { 1,   280,  4,0, 1, 1, 0 }, //asciii 0x004A
  { 1,   284,  8,2, 1, 0, 1 }, //asciii 0x004B
  { 1,   292,  7,2, 1, 0, 1 }, //asciii 0x004C
  { 1,   296, 11,2, 1, 1, 1 }, //asciii 0x004D
  { 1,   303,  9,2, 1, 1, 1 }, //asciii 0x004E
  { 1,   309, 10,2, 1, 1, 1 }, //asciii 0x004F
  { 1,   318,  8,2, 1, 1, 1 }, //asciii 0x0050
  { 1,   326, 10,2, 1, 1, 0 }, //asciii 0x0051
  { 1,   340,  8,2, 1, 1, 1 }, //asciii 0x0052
  { 1,   348,  7,2, 1, 1, 1 }, //asciii 0x0053
  { 1,   357,  8,2, 1, 1, 1 }, //asciii 0x0054
  { 1,   362,  9,2, 1, 1, 1 }, //asciii 0x0055
  { 1,   368,  8,1, 1, 0, 1 }, //asciii 0x0056
  { 1,   376, 11,1, 1, 0, 1 }, //asciii 0x0057
  { 1,   387,  8,1, 1, 1, 1 }, //asciii 0x0058
  { 1,   397,  7,1, 1, 0, 1 }, //asciii 0x0059
  { 1,   404,  7,2, 1, 1, 1 }, //asciii 0x005A
  { 1,   411,  5,2, 1, 0, 0 }, //asciii 0x005B
  { 1,   417,  5,1, 1, 0, 1 }, //asciii 0x005C
  { 1,   422,  5,1, 1, 1, 0 }, //asciii 0x005D
  { 1,   428,  7,1, 1, 0, 1 }, //asciii 0x005E
  { 1,   435,  6,0, 3, 1, 0 }, //asciii 0x005F
  { 1,   441,  7,3, 0, 2, 2 }, //asciii 0x0060
  { 1,   444,  7,2, 1, 1, 1 }, //asciii 0x0061
  { 1,   453,  8,2, 1, 1, 1 }, //asciii 0x0062
  { 1,   460,  6,2, 1, 0, 1 }, //asciii 0x0063
  { 1,   468,  8,2, 1, 1, 1 }, //asciii 0x0064
  { 1,   477,  7,2, 1, 1, 1 }, //asciii 0x0065
  { 1,   487,  6,1, 1, 1, 1 }, //asciii 0x0066
  { 1,   494,  7,1, 1, 0, 0 }, //asciii 0x0067
  { 1,   511,  8,2, 1, 1, 1 }, //asciii 0x0068
  { 1,   516,  4,2, 1, 1, 1 }, //asciii 0x0069
  { 1,   518,  4,0, 1, 1, 0 }, //asciii 0x006A
  { 1,   523,  7,2, 1, 1, 1 }, //asciii 0x006B
  { 1,   529,  4,2, 1, 1, 1 }, //asciii 0x006C
  { 1,   530, 11,2, 1, 1, 1 }, //asciii 0x006D
  { 1,   538,  8,2, 1, 1, 1 }, //asciii 0x006E
  { 1,   543,  8,2, 1, 1, 1 }, //asciii 0x006F
  { 1,   552,  8,2, 1, 1, 0 }, //asciii 0x0070
  { 1,   561,  8,2, 1, 1, 0 }, //asciii 0x0071
  { 1,   570,  5,2, 1, 0, 1 }, //asciii 0x0072
  { 1,   573,  6,2, 1, 0, 1 }, //asciii 0x0073
  { 1,   582,  5,1, 1, 0, 1 }, //asciii 0x0074
  { 1,   589,  8,2, 1, 1, 1 }, //asciii 0x0075
  { 1,   594,  7,1, 1, 0, 1 }, //asciii 0x0076
  { 1,   601, 10,1, 1, 0, 1 }, //asciii 0x0077
  { 1,   611,  7,2, 1, 1, 1 }, //asciii 0x0078
  { 1,   617,  7,1, 1, 0, 0 }, //asciii 0x0079
  { 1,   626,  6,1, 1, 0, 1 }, //asciii 0x007A
  { 1,   637,  5,2, 1, 0, 0 }, //asciii 0x007B
  { 1,   643,  7,4, 1, 2, 0 }, //asciii 0x007C
  { 1,   645,  5,1, 1, 1, 0 }, //asciii 0x007D
  { 1,   651,  7,2, 1, 1, 1 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_REGULAR_11PX_1BPP= {
  656, // bitmap len
  BAGL_FONT_OPEN_SANS_REGULAR_11px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  16, // height of all characters in pixels
  14, // line height in pixels
  1, // kerning
  1, // crop enabled (1) or not (0)
  0, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_REGULAR_11PX_1BPP,
  bitmapOPEN_SANS_REGULAR_11PX_1BPP
};
