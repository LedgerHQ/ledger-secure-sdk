#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_REGULAR_11PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0xFD,
//ascii 0x0022
  0xF0,
//ascii 0x0023
  0x20, 0xE4, 0x3E, 0x24, 0x7C, 0x27, 0x04,
//ascii 0x0024
  0x8F, 0xFE, 0x4F, 0x10,
//ascii 0x0025
  0x1F, 0x91, 0x6E, 0x18, 0x76, 0x89, 0xF8,
//ascii 0x0026
  0x0D, 0x02, 0xE5, 0x99, 0x91, 0x6F,
//ascii 0x0027
  0xC0,
//ascii 0x0028
  0xE1, 0xC7, 0x80,
//ascii 0x0029
  0x1E, 0x38, 0x70,
//ascii 0x002A
  0x21, 0x4D, 0xE2, 0x90,
//ascii 0x002B
  0x4B, 0xA4, 0x80,
//ascii 0x002C
  0xC4,
//ascii 0x002D
  0xC0,
//ascii 0x002E
  0x80,
//ascii 0x002F
  0x80, 0x70, 0x0E, 0x01,
//ascii 0x0030
  0x7E, 0x81, 0x81, 0x7E,
//ascii 0x0031
  0xFF, 0x80, 0x40,
//ascii 0x0032
  0x71, 0x89, 0x85, 0x83,
//ascii 0x0033
  0x6E, 0x91, 0x91, 0x81,
//ascii 0x0034
  0x04, 0xFF, 0x44, 0x24, 0x1C, 0x04,
//ascii 0x0035
  0x9E, 0x91, 0x91, 0xF1,
//ascii 0x0036
  0x9E, 0x91, 0x91, 0x7E,
//ascii 0x0037
  0xE0, 0x98, 0x87, 0x80,
//ascii 0x0038
  0x6E, 0x91, 0x91, 0x6E,
//ascii 0x0039
  0x7E, 0x89, 0x89, 0x79,
//ascii 0x003A
  0x84,
//ascii 0x003B
  0x86, 0x01,
//ascii 0x003C
  0x85, 0x23, 0x0C,
//ascii 0x003D
  0xB6, 0xD0,
//ascii 0x003E
  0x30, 0xC4, 0xA1,
//ascii 0x003F
  0x60, 0x90, 0x8D, 0x80,
//ascii 0x0040
  0x7E, 0x41, 0x2F, 0xB4, 0x5A, 0x2C, 0xF5, 0x02,
  0x7E,
//ascii 0x0041
  0x01, 0x0E, 0x74, 0x84, 0x74, 0x0E, 0x01,
//ascii 0x0042
  0xEF, 0x91, 0x91, 0x91, 0xFF,
//ascii 0x0043
  0x81, 0x81, 0x81, 0xC3, 0x7E,
//ascii 0x0044
  0x7E, 0x81, 0x81, 0x81, 0x81, 0xFF,
//ascii 0x0045
  0x91, 0x91, 0x91, 0xFF,
//ascii 0x0046
  0x88, 0x88, 0x88, 0x88, 0xFF,
//ascii 0x0047
  0x8F, 0x89, 0x81, 0x81, 0x81, 0x7E,
//ascii 0x0048
  0xFF, 0x10, 0x10, 0x10, 0x10, 0xFF,
//ascii 0x0049
  0xFF,
//ascii 0x004A
  0xFF, 0x80, 0x10, 0x04,
//ascii 0x004B
  0x01, 0x82, 0x44, 0x28, 0x10, 0xFF,
//ascii 0x004C
  0x01, 0x01, 0x01, 0x01, 0xFF,
//ascii 0x004D
  0xFF, 0xE0, 0x18, 0x07, 0x07, 0x18, 0xE0, 0xFF,
//ascii 0x004E
  0xFF, 0x02, 0x0C, 0x30, 0x40, 0xFF,
//ascii 0x004F
  0x7E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x7E,
//ascii 0x0050
  0x70, 0x88, 0x88, 0x88, 0xFF,
//ascii 0x0051
  0x7E, 0x20, 0x58, 0x1A, 0x04, 0x81, 0x20, 0x47,
  0xE0,
//ascii 0x0052
  0x73, 0x8C, 0x88, 0x88, 0xFF,
//ascii 0x0053
  0x8E, 0x89, 0x91, 0x71,
//ascii 0x0054
  0x80, 0x80, 0xFF, 0x80, 0x80,
//ascii 0x0055
  0xFE, 0x01, 0x01, 0x01, 0x01, 0xFE,
//ascii 0x0056
  0x80, 0x70, 0x0E, 0x01, 0x0E, 0x70, 0x80,
//ascii 0x0057
  0x80, 0x7C, 0x03, 0x1C, 0xE0, 0xE0, 0x1C, 0x03,
  0x7C, 0x80,
//ascii 0x0058
  0x81, 0x46, 0x38, 0x38, 0x46, 0x81,
//ascii 0x0059
  0x80, 0x60, 0x1F, 0x10, 0x60, 0x80,
//ascii 0x005A
  0xC1, 0xB1, 0x89, 0x87,
//ascii 0x005B
  0x80, 0x60, 0x1F, 0xFC,
//ascii 0x005C
  0x01, 0x0E, 0x70, 0x80,
//ascii 0x005D
  0xFF, 0xE0, 0x18, 0x04,
//ascii 0x005E
  0x09, 0xB1, 0x83, 0x04,
//ascii 0x005F
  0xF8,
//ascii 0x0060
  0x60,
//ascii 0x0061
  0xFE, 0x9A, 0x6F,
//ascii 0x0062
  0x1E, 0x21, 0x21, 0x21, 0xFF,
//ascii 0x0063
  0x86, 0x18, 0x5E,
//ascii 0x0064
  0xFF, 0x21, 0x21, 0x21, 0x1E,
//ascii 0x0065
  0xE6, 0x9A, 0x5E,
//ascii 0x0066
  0xA0, 0xA0, 0x7F, 0x20,
//ascii 0x0067
  0x83, 0x72, 0x65, 0x32, 0x9F, 0xC8, 0x18,
//ascii 0x0068
  0x1F, 0x20, 0x20, 0x20, 0xFF,
//ascii 0x0069
  0xBF,
//ascii 0x006A
  0xBF, 0xE0, 0x04, 0x00, 0x80,
//ascii 0x006B
  0x23, 0x14, 0x08, 0xFF,
//ascii 0x006C
  0xFF,
//ascii 0x006D
  0xFE, 0x08, 0x1F, 0x82, 0x08, 0x3F,
//ascii 0x006E
  0x7E, 0x08, 0x20, 0xFC,
//ascii 0x006F
  0x7A, 0x18, 0x61, 0x78,
//ascii 0x0070
  0x78, 0x42, 0x21, 0x10, 0x8F, 0xF8,
//ascii 0x0071
  0xFF, 0xC2, 0x21, 0x10, 0x87, 0x80,
//ascii 0x0072
  0x82, 0x0F, 0xC0,
//ascii 0x0073
  0x0A, 0x5A, 0x79,
//ascii 0x0074
  0x42, 0x87, 0xFA, 0x00,
//ascii 0x0075
  0xFC, 0x10, 0x41, 0xFC,
//ascii 0x0076
  0x81, 0xC0, 0xC3, 0x72, 0x00,
//ascii 0x0077
  0x81, 0xC0, 0xDC, 0x81, 0xC0, 0xDC, 0x80,
//ascii 0x0078
  0xCC, 0xC3, 0x33,
//ascii 0x0079
  0x80, 0x38, 0x03, 0x01, 0xE7, 0x0C, 0x04,
//ascii 0x007A
  0x87, 0x1B, 0x63, 0x84,
//ascii 0x007B
  0x80, 0x7C, 0xF0, 0xC0,
//ascii 0x007C
  0xFF, 0xE0,
//ascii 0x007D
  0x0C, 0x3C, 0xF8, 0x04,
//ascii 0x007E
  0x5A,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_REGULAR_11PX_1BPP[95] = {
  {     0, 0,  4,0, 0, 0, 0 }, //asciii 0x0020
  {     0, 0,  4,2, 1, 1, 3 }, //asciii 0x0021
  {     1, 0,  5,2, 1, 1, 9 }, //asciii 0x0022
  {     2, 0,  8,1, 1, 0, 3 }, //asciii 0x0023
  {     9, 0,  7,2, 2, 1, 3 }, //asciii 0x0024
  {    13, 0, 10,2, 1, 1, 3 }, //asciii 0x0025
  {    20, 0, 10,2, 1, 2, 3 }, //asciii 0x0026
  {    26, 0,  3,2, 1, 0, 9 }, //asciii 0x0027
  {    27, 0,  4,1, 1, 1, 1 }, //asciii 0x0028
  {    30, 0,  4,2, 1, 0, 1 }, //asciii 0x0029
  {    33, 0,  7,1, 1, 0, 6 }, //asciii 0x002A
  {    37, 0,  7,1, 4, 0, 5 }, //asciii 0x002B
  {    40, 0,  4,1, 8, 1, 1 }, //asciii 0x002C
  {    41, 0,  5,2, 6, 1, 5 }, //asciii 0x002D
  {    42, 0,  4,2, 8, 1, 3 }, //asciii 0x002E
  {    43, 0,  5,1, 1, 0, 3 }, //asciii 0x002F
  {    47, 0,  7,2, 1, 1, 3 }, //asciii 0x0030
  {    51, 0,  7,2, 1, 2, 3 }, //asciii 0x0031
  {    54, 0,  7,2, 1, 1, 3 }, //asciii 0x0032
  {    58, 0,  7,2, 1, 1, 3 }, //asciii 0x0033
  {    62, 0,  9,2, 1, 1, 3 }, //asciii 0x0034
  {    68, 0,  7,2, 1, 1, 3 }, //asciii 0x0035
  {    72, 0,  7,2, 1, 1, 3 }, //asciii 0x0036
  {    76, 0,  7,2, 1, 1, 3 }, //asciii 0x0037
  {    80, 0,  7,2, 1, 1, 3 }, //asciii 0x0038
  {    84, 0,  7,2, 1, 1, 3 }, //asciii 0x0039
  {    88, 0,  4,2, 3, 1, 3 }, //asciii 0x003A
  {    89, 0,  4,1, 3, 1, 1 }, //asciii 0x003B
  {    91, 0,  7,2, 2, 1, 4 }, //asciii 0x003C
  {    94, 0,  7,2, 4, 1, 5 }, //asciii 0x003D
  {    96, 0,  7,2, 2, 1, 4 }, //asciii 0x003E
  {    99, 0,  6,2, 1, 0, 3 }, //asciii 0x003F
  {   103, 0, 11,2, 1, 1, 2 }, //asciii 0x0040
  {   112, 0,  8,1, 1, 0, 3 }, //asciii 0x0041
  {   119, 0,  8,2, 1, 1, 3 }, //asciii 0x0042
  {   124, 0,  8,2, 1, 1, 3 }, //asciii 0x0043
  {   129, 0,  9,2, 1, 1, 3 }, //asciii 0x0044
  {   135, 0,  7,2, 1, 1, 3 }, //asciii 0x0045
  {   139, 0,  7,2, 1, 0, 3 }, //asciii 0x0046
  {   144, 0,  9,2, 1, 1, 3 }, //asciii 0x0047
  {   150, 0,  9,2, 1, 1, 3 }, //asciii 0x0048
  {   156, 0,  4,2, 1, 1, 3 }, //asciii 0x0049
  {   157, 0,  4,0, 1, 1, 1 }, //asciii 0x004A
  {   161, 0,  8,2, 1, 0, 3 }, //asciii 0x004B
  {   167, 0,  7,2, 1, 0, 3 }, //asciii 0x004C
  {   172, 0, 11,2, 1, 1, 3 }, //asciii 0x004D
  {   180, 0,  9,2, 1, 1, 3 }, //asciii 0x004E
  {   186, 0, 10,2, 1, 1, 3 }, //asciii 0x004F
  {   193, 0,  8,2, 1, 1, 3 }, //asciii 0x0050
  {   198, 0, 10,2, 1, 1, 1 }, //asciii 0x0051
  {   207, 0,  8,2, 1, 1, 3 }, //asciii 0x0052
  {   212, 0,  7,2, 1, 1, 3 }, //asciii 0x0053
  {   216, 0,  8,2, 1, 1, 3 }, //asciii 0x0054
  {   221, 0,  9,2, 1, 1, 3 }, //asciii 0x0055
  {   227, 0,  8,1, 1, 0, 3 }, //asciii 0x0056
  {   234, 0, 11,1, 1, 0, 3 }, //asciii 0x0057
  {   244, 0,  8,1, 1, 1, 3 }, //asciii 0x0058
  {   250, 0,  7,1, 1, 0, 3 }, //asciii 0x0059
  {   256, 0,  7,2, 1, 1, 3 }, //asciii 0x005A
  {   260, 0,  5,2, 1, 0, 1 }, //asciii 0x005B
  {   264, 0,  5,1, 1, 0, 3 }, //asciii 0x005C
  {   268, 0,  5,1, 1, 1, 1 }, //asciii 0x005D
  {   272, 0,  7,1, 1, 0, 6 }, //asciii 0x005E
  {   276, 0,  6,0, 10, 1, 1 }, //asciii 0x005F
  {   277, 0,  7,3, 0, 2, 10 }, //asciii 0x0060
  {   278, 0,  7,2, 3, 1, 3 }, //asciii 0x0061
  {   281, 0,  8,2, 1, 1, 3 }, //asciii 0x0062
  {   286, 0,  6,2, 3, 0, 3 }, //asciii 0x0063
  {   289, 0,  8,2, 1, 1, 3 }, //asciii 0x0064
  {   294, 0,  7,2, 3, 1, 3 }, //asciii 0x0065
  {   297, 0,  6,1, 1, 1, 3 }, //asciii 0x0066
  {   301, 0,  7,1, 3, 0, 0 }, //asciii 0x0067
  {   308, 0,  8,2, 1, 1, 3 }, //asciii 0x0068
  {   313, 0,  4,2, 1, 1, 3 }, //asciii 0x0069
  {   314, 0,  4,0, 1, 1, 0 }, //asciii 0x006A
  {   319, 0,  7,2, 1, 1, 3 }, //asciii 0x006B
  {   323, 0,  4,2, 1, 1, 3 }, //asciii 0x006C
  {   324, 0, 11,2, 3, 1, 3 }, //asciii 0x006D
  {   330, 0,  8,2, 3, 1, 3 }, //asciii 0x006E
  {   334, 0,  8,2, 3, 1, 3 }, //asciii 0x006F
  {   338, 0,  8,2, 3, 1, 0 }, //asciii 0x0070
  {   344, 0,  8,2, 3, 1, 0 }, //asciii 0x0071
  {   350, 0,  5,2, 3, 0, 3 }, //asciii 0x0072
  {   353, 0,  6,2, 3, 0, 3 }, //asciii 0x0073
  {   356, 0,  5,1, 2, 0, 3 }, //asciii 0x0074
  {   360, 0,  8,2, 3, 1, 3 }, //asciii 0x0075
  {   364, 0,  7,1, 3, 0, 3 }, //asciii 0x0076
  {   369, 0, 10,1, 3, 0, 3 }, //asciii 0x0077
  {   376, 0,  7,2, 3, 1, 3 }, //asciii 0x0078
  {   379, 0,  7,1, 3, 0, 0 }, //asciii 0x0079
  {   386, 0,  6,1, 3, 0, 3 }, //asciii 0x007A
  {   390, 0,  5,2, 1, 0, 1 }, //asciii 0x007B
  {   394, 0,  7,4, 1, 2, 0 }, //asciii 0x007C
  {   396, 0,  5,1, 1, 1, 1 }, //asciii 0x007D
  {   400, 0,  7,2, 4, 1, 6 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_REGULAR_11PX_1BPP= {
  401, // bitmap len
  BAGL_FONT_OPEN_SANS_REGULAR_11px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  14, // height of all characters in pixels
  14, // line height in pixels
  1, // kerning
  1, // crop enabled (1) or not (0)
  2, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_REGULAR_11PX_1BPP,
  bitmapOPEN_SANS_REGULAR_11PX_1BPP
};
