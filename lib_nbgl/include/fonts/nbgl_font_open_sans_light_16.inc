#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_LIGHT_16PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0xFF, 0x30,
//ascii 0x0022
  0xF0, 0x0F,
//ascii 0x0023
  0x08, 0x00, 0x90, 0xF9, 0x00, 0xFC, 0x09, 0x3C,
  0x90, 0x3F, 0x00, 0x9F, 0x09, 0x00, 0x10,
//ascii 0x0024
  0x00, 0xC2, 0x09, 0x10, 0xC5, 0xFF, 0xF4, 0x21,
  0x12, 0x08, 0x60, 0x80,
//ascii 0x0025
  0x03, 0xE0, 0x41, 0x84, 0x16, 0x3E, 0x18, 0x00,
  0x60, 0x01, 0x87, 0xC6, 0x82, 0x18, 0x20, 0x7C,
  0x00,
//ascii 0x0026
  0x03, 0x90, 0x06, 0x00, 0xA7, 0x11, 0x8A, 0x18,
  0x41, 0x8C, 0x17, 0x23, 0x01, 0xE0,
//ascii 0x0027
  0xF0,
//ascii 0x0028
  0xC0, 0x06, 0x7F, 0xF0,
//ascii 0x0029
  0x3F, 0xF9, 0x80, 0x0C,
//ascii 0x002A
  0x10, 0x24, 0x77, 0x81, 0xC2, 0x44, 0x00,
//ascii 0x002B
  0x10, 0x20, 0x47, 0xF1, 0x02, 0x04, 0x00,
//ascii 0x002C
  0xE1,
//ascii 0x002D
  0xE0,
//ascii 0x002E
  0xF0,
//ascii 0x002F
  0x80, 0x07, 0x00, 0x0F, 0x00, 0x0E, 0x00, 0x10,
//ascii 0x0030
  0x3F, 0xC4, 0x02, 0x80, 0x18, 0x01, 0x80, 0x14,
  0x02, 0x3F, 0xC0,
//ascii 0x0031
  0xFF, 0xF4, 0x00, 0x20, 0x00,
//ascii 0x0032
  0x00, 0x17, 0xC1, 0x82, 0x18, 0x11, 0x80, 0x98,
  0x05, 0x40, 0x30,
//ascii 0x0033
  0x21, 0xC5, 0xA2, 0x8C, 0x18, 0x41, 0x84, 0x18,
  0x41, 0x40, 0x10,
//ascii 0x0034
  0x00, 0x80, 0x08, 0xFF, 0xF4, 0x08, 0x20, 0x81,
  0x88, 0x04, 0x80, 0x38, 0x00, 0x80,
//ascii 0x0035
  0x03, 0xC8, 0x22, 0x84, 0x18, 0x41, 0x84, 0x1F,
  0x41, 0x0C, 0x20,
//ascii 0x0036
  0x03, 0xE8, 0x41, 0x84, 0x18, 0x41, 0x44, 0x16,
  0x22, 0x1F, 0xC0,
//ascii 0x0037
  0xC0, 0x0B, 0x80, 0x86, 0x08, 0x1C, 0x80, 0x38,
  0x00, 0x80, 0x00,
//ascii 0x0038
  0x31, 0xE4, 0xA1, 0x84, 0x18, 0x41, 0x84, 0x14,
  0xA1, 0x31, 0xE0,
//ascii 0x0039
  0x3F, 0x84, 0x46, 0x82, 0x28, 0x21, 0x82, 0x18,
  0x21, 0x7C, 0x00,
//ascii 0x003A
  0xC1, 0xE0, 0xC0,
//ascii 0x003B
  0xC0, 0x30, 0x70,
//ascii 0x003C
  0x82, 0x89, 0x11, 0x42, 0x82, 0x04, 0x00,
//ascii 0x003D
  0x99, 0x99, 0x99, 0x90,
//ascii 0x003E
  0x10, 0x20, 0xA1, 0x44, 0x48, 0xA0, 0x80,
//ascii 0x003F
  0x78, 0x08, 0x40, 0x82, 0x08, 0x1B, 0x80, 0x00,
//ascii 0x0040
  0x1F, 0x80, 0x81, 0x04, 0x04, 0x27, 0xF0, 0x90,
  0x86, 0x41, 0x19, 0x04, 0x62, 0x11, 0x47, 0x85,
  0x00, 0x23, 0x01, 0x03, 0xF8,
//ascii 0x0041
  0x00, 0x10, 0x0E, 0x03, 0x01, 0xD0, 0xE1, 0x0E,
  0x10, 0x1D, 0x00, 0x30, 0x00, 0xE0, 0x01,
//ascii 0x0042
  0x31, 0xC4, 0xA2, 0x84, 0x18, 0x41, 0x84, 0x18,
  0x41, 0xFF, 0xF0,
//ascii 0x0043
  0x80, 0x18, 0x01, 0x80, 0x18, 0x01, 0x80, 0x14,
  0x02, 0x20, 0x41, 0xF8,
//ascii 0x0044
  0x1F, 0x82, 0x04, 0x40, 0x28, 0x01, 0x80, 0x18,
  0x01, 0x80, 0x1F, 0xFF,
//ascii 0x0045
  0x84, 0x18, 0x41, 0x84, 0x18, 0x41, 0x84, 0x1F,
  0xFF,
//ascii 0x0046
  0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82, 0x0F,
  0xFF,
//ascii 0x0047
  0x03, 0xE8, 0x21, 0x82, 0x18, 0x21, 0x82, 0x18,
  0x01, 0x80, 0x14, 0x02, 0x20, 0x41, 0xF8,
//ascii 0x0048
  0xFF, 0xF0, 0x40, 0x04, 0x00, 0x40, 0x04, 0x00,
  0x40, 0x04, 0x0F, 0xFF,
//ascii 0x0049
  0xFF, 0xF0,
//ascii 0x004A
  0xFF, 0xFC, 0x00, 0x04, 0x00, 0x08,
//ascii 0x004B
  0x80, 0x14, 0x02, 0x20, 0xC1, 0x10, 0x0A, 0x00,
  0x40, 0xFF, 0xF0,
//ascii 0x004C
  0x00, 0x10, 0x01, 0x00, 0x10, 0x01, 0x00, 0x1F,
  0xFF,
//ascii 0x004D
  0xFF, 0xF7, 0x00, 0x0E, 0x00, 0x18, 0x00, 0x60,
  0x06, 0x01, 0x80, 0xE0, 0x30, 0x0F, 0xFF,
//ascii 0x004E
  0xFF, 0xF0, 0x06, 0x00, 0x80, 0x30, 0x04, 0x01,
  0x80, 0x60, 0x0F, 0xFF,
//ascii 0x004F
  0x1F, 0x82, 0x04, 0x40, 0x28, 0x01, 0x80, 0x18,
  0x01, 0x80, 0x14, 0x02, 0x20, 0x41, 0xF8,
//ascii 0x0050
  0x7C, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82, 0x0F,
  0xFF,
//ascii 0x0051
  0x1F, 0x80, 0x40, 0x85, 0x00, 0x9C, 0x00, 0xC8,
  0x01, 0x10, 0x02, 0x20, 0x04, 0x20, 0x10, 0x20,
  0x40, 0x3F, 0x00,
//ascii 0x0052
  0x38, 0x34, 0x44, 0x83, 0x88, 0x20, 0x82, 0x08,
  0x20, 0xFF, 0xF0,
//ascii 0x0053
  0x41, 0xE8, 0x21, 0x82, 0x18, 0x41, 0x84, 0x18,
  0x41, 0x78, 0x10,
//ascii 0x0054
  0x80, 0x08, 0x00, 0x80, 0x0F, 0xFF, 0x80, 0x08,
  0x00, 0x80, 0x00,
//ascii 0x0055
  0xFF, 0xC0, 0x02, 0x00, 0x10, 0x01, 0x00, 0x10,
  0x01, 0x00, 0x2F, 0xFC,
//ascii 0x0056
  0xC0, 0x03, 0x80, 0x07, 0x00, 0x0C, 0x00, 0x30,
  0x0C, 0x07, 0x03, 0x80, 0xC0, 0x00,
//ascii 0x0057
  0x80, 0x07, 0x80, 0x07, 0x80, 0x07, 0x01, 0xE1,
  0xE0, 0xE0, 0x0E, 0x00, 0x1E, 0x00, 0x1E, 0x00,
  0x70, 0x78, 0x78, 0x08, 0x00,
//ascii 0x0058
  0x00, 0x1C, 0x02, 0x30, 0xC0, 0xB0, 0x04, 0x01,
  0xB0, 0x20, 0xCC, 0x02, 0x00, 0x10,
//ascii 0x0059
  0x80, 0x06, 0x00, 0x18, 0x00, 0x7F, 0x06, 0x01,
  0x80, 0x60, 0x08, 0x00,
//ascii 0x005A
  0xC0, 0x1B, 0x01, 0x88, 0x18, 0x61, 0x81, 0x18,
  0x0D, 0x80, 0x30,
//ascii 0x005B
  0x80, 0x03, 0x00, 0x06, 0x00, 0x0F, 0xFF, 0xF0,
//ascii 0x005C
  0x00, 0x10, 0x0E, 0x0F, 0x07, 0x00, 0x80, 0x00,
//ascii 0x005D
  0xFF, 0xFF, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x10,
//ascii 0x005E
  0x06, 0x31, 0x84, 0x06, 0x03, 0x01, 0x80,
//ascii 0x005F
  0xFE,
//ascii 0x0060
  0x2A, 0x00,
//ascii 0x0061
  0x7F, 0xC4, 0xA2, 0x31, 0x18, 0x88, 0x38,
//ascii 0x0062
  0x03, 0xE0, 0x20, 0x82, 0x02, 0x10, 0x10, 0x80,
  0x84, 0x04, 0x10, 0x5F, 0xFF,
//ascii 0x0063
  0x80, 0xC0, 0x60, 0x30, 0x14, 0x11, 0xF0,
//ascii 0x0064
  0xFF, 0xF8, 0x20, 0x82, 0x02, 0x10, 0x10, 0x80,
  0x84, 0x04, 0x10, 0x40, 0x7C,
//ascii 0x0065
  0x39, 0x24, 0x62, 0x31, 0x18, 0x8A, 0x48, 0xF8,
//ascii 0x0066
  0x80, 0x04, 0x40, 0x22, 0x00, 0xFF, 0xF0, 0x80,
  0x04, 0x00,
//ascii 0x0067
  0x80, 0x25, 0x86, 0xB3, 0x23, 0x09, 0x18, 0x48,
  0xC3, 0x45, 0xE5, 0x60, 0x06,
//ascii 0x0068
  0x03, 0xF8, 0x20, 0x02, 0x00, 0x10, 0x00, 0x80,
  0x02, 0x03, 0xFF, 0xE0,
//ascii 0x0069
  0x9F, 0xE0,
//ascii 0x006A
  0x9F, 0xFE, 0x00, 0x04, 0x00, 0x08,
//ascii 0x006B
  0x00, 0x08, 0x40, 0x81, 0x08, 0x04, 0x80, 0x18,
  0x00, 0x23, 0xFF, 0xE0,
//ascii 0x006C
  0xFF, 0xF8,
//ascii 0x006D
  0x3F, 0xA0, 0x20, 0x10, 0x08, 0x03, 0xFD, 0x01,
  0x00, 0x80, 0x40, 0x10, 0x1F, 0xF0,
//ascii 0x006E
  0x3F, 0xA0, 0x20, 0x10, 0x08, 0x02, 0x03, 0xFE,
//ascii 0x006F
  0x3E, 0x20, 0xA0, 0x30, 0x18, 0x0A, 0x08, 0xF8,
//ascii 0x0070
  0x3E, 0x02, 0x08, 0x20, 0x21, 0x01, 0x08, 0x08,
  0x40, 0x41, 0x04, 0x1F, 0xFF,
//ascii 0x0071
  0xFF, 0xFA, 0x08, 0x20, 0x21, 0x01, 0x08, 0x08,
  0x40, 0x41, 0x04, 0x07, 0xC0,
//ascii 0x0072
  0x80, 0x40, 0x20, 0x08, 0x0F, 0xF8,
//ascii 0x0073
  0x87, 0x44, 0x62, 0x32, 0x17, 0x08,
//ascii 0x0074
  0x00, 0x50, 0x14, 0x07, 0xFE, 0x40, 0x00,
//ascii 0x0075
  0xFF, 0x80, 0x80, 0x20, 0x10, 0x08, 0x0F, 0xF8,
//ascii 0x0076
  0xC0, 0x1C, 0x01, 0xC0, 0x10, 0x71, 0xC3, 0x00,
//ascii 0x0077
  0x80, 0x3C, 0x01, 0x80, 0x71, 0xC7, 0x03, 0x80,
  0x38, 0x03, 0x83, 0x1E, 0x10, 0x00,
//ascii 0x0078
  0xC1, 0x91, 0x07, 0x03, 0x82, 0x26, 0x0C,
//ascii 0x0079
  0xC0, 0x01, 0xC0, 0x01, 0xC0, 0x01, 0x80, 0x73,
  0x1C, 0x07, 0x00, 0x20,
//ascii 0x007A
  0xC0, 0xD8, 0x62, 0x30, 0xD8, 0x18,
//ascii 0x007B
  0x80, 0x03, 0x00, 0x05, 0xFB, 0xF0, 0x08, 0x00,
  0x10, 0x00,
//ascii 0x007C
  0xFF, 0xFF, 0x80,
//ascii 0x007D
  0x01, 0x00, 0x02, 0x00, 0xFB, 0xE6, 0x00, 0x38,
  0x00, 0x20,
//ascii 0x007E
  0x55, 0xA8,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_LIGHT_16PX_1BPP[95] = {
  {     0, 0,  6,0, 0, 0, 0 }, //asciii 0x0020
  {     0, 0,  5,3, 1, 1, 4 }, //asciii 0x0021
  {     2, 0,  8,3, 1, 1, 12 }, //asciii 0x0022
  {     4, 0, 12,2, 1, 0, 4 }, //asciii 0x0023
  {    19, 0, 11,3, 1, 1, 3 }, //asciii 0x0024
  {    31, 0, 15,3, 1, 1, 4 }, //asciii 0x0025
  {    48, 0, 13,3, 1, 1, 4 }, //asciii 0x0026
  {    62, 0,  5,3, 1, 1, 12 }, //asciii 0x0027
  {    63, 0,  6,3, 1, 1, 1 }, //asciii 0x0028
  {    67, 0,  6,3, 1, 1, 1 }, //asciii 0x0029
  {    71, 0, 11,3, 0, 1, 10 }, //asciii 0x002A
  {    78, 0, 11,3, 2, 1, 8 }, //asciii 0x002B
  {    85, 0,  5,2, 11, 1, 2 }, //asciii 0x002C
  {    86, 0,  7,3, 8, 1, 8 }, //asciii 0x002D
  {    87, 0,  6,3, 11, 1, 4 }, //asciii 0x002E
  {    88, 0,  8,2, 1, 1, 4 }, //asciii 0x002F
  {    96, 0, 11,3, 1, 1, 4 }, //asciii 0x0030
  {   107, 0, 11,4, 1, 4, 4 }, //asciii 0x0031
  {   112, 0, 11,3, 1, 1, 4 }, //asciii 0x0032
  {   123, 0, 11,3, 1, 1, 4 }, //asciii 0x0033
  {   134, 0, 11,2, 1, 0, 4 }, //asciii 0x0034
  {   148, 0, 11,3, 1, 1, 4 }, //asciii 0x0035
  {   159, 0, 11,3, 1, 1, 4 }, //asciii 0x0036
  {   170, 0, 11,3, 1, 1, 4 }, //asciii 0x0037
  {   181, 0, 11,3, 1, 1, 4 }, //asciii 0x0038
  {   192, 0, 11,3, 1, 1, 4 }, //asciii 0x0039
  {   203, 0,  6,3, 4, 1, 4 }, //asciii 0x003A
  {   206, 0,  6,3, 4, 1, 3 }, //asciii 0x003B
  {   209, 0, 11,3, 3, 1, 7 }, //asciii 0x003C
  {   216, 0, 11,3, 5, 1, 8 }, //asciii 0x003D
  {   220, 0, 11,3, 3, 1, 7 }, //asciii 0x003E
  {   227, 0,  9,3, 1, 1, 4 }, //asciii 0x003F
  {   235, 0, 13,0, 1, 1, 2 }, //asciii 0x0040
  {   256, 0, 12,2, 1, 0, 4 }, //asciii 0x0041
  {   271, 0, 12,4, 1, 1, 4 }, //asciii 0x0042
  {   282, 0, 12,3, 1, 1, 4 }, //asciii 0x0043
  {   294, 0, 13,4, 1, 1, 4 }, //asciii 0x0044
  {   306, 0, 11,4, 1, 1, 4 }, //asciii 0x0045
  {   315, 0, 10,4, 1, 0, 4 }, //asciii 0x0046
  {   324, 0, 14,3, 1, 1, 4 }, //asciii 0x0047
  {   339, 0, 14,4, 1, 2, 4 }, //asciii 0x0048
  {   351, 0,  6,4, 1, 1, 4 }, //asciii 0x0049
  {   353, 0,  6,0, 1, 3, 1 }, //asciii 0x004A
  {   359, 0, 11,4, 1, 0, 4 }, //asciii 0x004B
  {   370, 0, 10,4, 1, 0, 4 }, //asciii 0x004C
  {   379, 0, 14,2, 1, 2, 4 }, //asciii 0x004D
  {   394, 0, 14,4, 1, 2, 4 }, //asciii 0x004E
  {   406, 0, 14,3, 1, 1, 4 }, //asciii 0x004F
  {   421, 0, 11,4, 1, 1, 4 }, //asciii 0x0050
  {   430, 0, 14,3, 1, 1, 1 }, //asciii 0x0051
  {   449, 0, 12,4, 1, 1, 4 }, //asciii 0x0052
  {   460, 0, 11,3, 1, 1, 4 }, //asciii 0x0053
  {   471, 0,  9,2, 1, 0, 4 }, //asciii 0x0054
  {   482, 0, 14,4, 1, 2, 4 }, //asciii 0x0055
  {   494, 0, 12,2, 1, 1, 4 }, //asciii 0x0056
  {   508, 0, 15,1, 1, 0, 4 }, //asciii 0x0057
  {   529, 0, 11,2, 1, 0, 4 }, //asciii 0x0058
  {   543, 0, 11,2, 1, 1, 4 }, //asciii 0x0059
  {   555, 0, 11,3, 1, 1, 4 }, //asciii 0x005A
  {   566, 0,  7,3, 1, 0, 1 }, //asciii 0x005B
  {   574, 0,  8,2, 1, 1, 4 }, //asciii 0x005C
  {   582, 0,  7,2, 1, 1, 1 }, //asciii 0x005D
  {   590, 0, 11,3, 1, 1, 9 }, //asciii 0x005E
  {   597, 0,  9,1, 14, 1, 2 }, //asciii 0x005F
  {   598, 0, 11,5, 0, 3, 14 }, //asciii 0x0060
  {   600, 0, 10,3, 4, 1, 4 }, //asciii 0x0061
  {   607, 0, 12,3, 0, 1, 4 }, //asciii 0x0062
  {   620, 0, 10,3, 4, 1, 4 }, //asciii 0x0063
  {   627, 0, 12,3, 0, 1, 4 }, //asciii 0x0064
  {   640, 0, 11,3, 4, 1, 4 }, //asciii 0x0065
  {   648, 0,  8,2, 0, 0, 4 }, //asciii 0x0066
  {   658, 0, 10,2, 4, 0, 0 }, //asciii 0x0067
  {   671, 0, 11,3, 0, 1, 4 }, //asciii 0x0068
  {   683, 0,  6,3, 2, 2, 4 }, //asciii 0x0069
  {   685, 0,  7,2, 2, 2, 0 }, //asciii 0x006A
  {   691, 0, 10,3, 0, 0, 4 }, //asciii 0x006B
  {   703, 0,  6,3, 0, 2, 4 }, //asciii 0x006C
  {   705, 0, 14,1, 4, 1, 4 }, //asciii 0x006D
  {   719, 0, 11,3, 4, 1, 4 }, //asciii 0x006E
  {   727, 0, 11,3, 4, 1, 4 }, //asciii 0x006F
  {   735, 0, 12,3, 4, 1, 0 }, //asciii 0x0070
  {   748, 0, 12,3, 4, 1, 0 }, //asciii 0x0071
  {   761, 0,  8,3, 4, 0, 4 }, //asciii 0x0072
  {   767, 0,  9,3, 4, 1, 4 }, //asciii 0x0073
  {   773, 0,  7,2, 3, 0, 4 }, //asciii 0x0074
  {   780, 0, 11,3, 4, 1, 4 }, //asciii 0x0075
  {   788, 0, 10,2, 4, 1, 4 }, //asciii 0x0076
  {   796, 0, 14,2, 4, 0, 4 }, //asciii 0x0077
  {   810, 0, 10,3, 4, 1, 4 }, //asciii 0x0078
  {   817, 0, 10,2, 4, 1, 0 }, //asciii 0x0079
  {   829, 0,  9,3, 4, 1, 4 }, //asciii 0x007A
  {   835, 0,  8,2, 1, 1, 1 }, //asciii 0x007B
  {   845, 0,  8,3, 0, 4, 0 }, //asciii 0x007C
  {   848, 0,  8,3, 1, 0, 1 }, //asciii 0x007D
  {   858, 0, 11,3, 6, 1, 9 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_LIGHT_16PX_1BPP= {
  860, // bitmap len
  BAGL_FONT_OPEN_SANS_LIGHT_16px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  22, // height of all characters in pixels
  21, // line height in pixels
  2, // kerning
  1, // crop enabled (1) or not (0)
  5, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_LIGHT_16PX_1BPP,
  bitmapOPEN_SANS_LIGHT_16PX_1BPP
};
