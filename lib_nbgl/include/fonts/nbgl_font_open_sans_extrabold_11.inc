#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_EXTRABOLD_11PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0xFB, 0xFB,
//ascii 0x0022
  0x9C, 0x4E,
//ascii 0x0023
  0x28, 0xE8, 0x3F, 0x28, 0xF8, 0x2F, 0x08,
//ascii 0x0024
  0x03, 0x11, 0x2F, 0xFD, 0x32, 0x78, 0x8C, 0x60,
//ascii 0x0025
  0x0E, 0x1F, 0x11, 0xDF, 0x78, 0x1E, 0xFF, 0x88,
  0xF8, 0x70,
//ascii 0x0026
  0x01, 0x0F, 0x0E, 0xE7, 0xFF, 0x99, 0xFF, 0x6F,
  0x04,
//ascii 0x0027
  0xE0,
//ascii 0x0028
  0xE1, 0xDF, 0xE1, 0xE0,
//ascii 0x0029
  0x1E, 0x1F, 0xEE, 0x1C,
//ascii 0x002A
  0x61, 0xFF, 0xF3, 0xB0,
//ascii 0x002B
  0x21, 0x3F, 0xF2, 0x10,
//ascii 0x002C
  0x9C, 0x80,
//ascii 0x002D
  0xFF,
//ascii 0x002E
  0xF0,
//ascii 0x002F
  0x80, 0xF0, 0x3C, 0x0F, 0x01,
//ascii 0x0030
  0x7E, 0xFF, 0x81, 0x81, 0xFF, 0x7E,
//ascii 0x0031
  0xFF, 0xFF, 0x60, 0x20,
//ascii 0x0032
  0x71, 0xFD, 0x8F, 0xC7, 0x41,
//ascii 0x0033
  0x6E, 0xFF, 0x91, 0x91, 0x81,
//ascii 0x0034
  0x04, 0xFF, 0xFF, 0x64, 0x1C, 0x04,
//ascii 0x0035
  0x9F, 0x9F, 0xF1, 0xF1,
//ascii 0x0036
  0x0E, 0x9F, 0x91, 0xD1, 0x7F, 0x1E,
//ascii 0x0037
  0xF0, 0xFE, 0x8F, 0x81, 0x80,
//ascii 0x0038
  0x6E, 0xFF, 0x91, 0x91, 0xFF, 0x6E,
//ascii 0x0039
  0x7C, 0xFE, 0x8B, 0x89, 0xF9, 0x70,
//ascii 0x003A
  0xCF, 0x30,
//ascii 0x003B
  0xC9, 0x9C, 0x08,
//ascii 0x003C
  0x83, 0x8D, 0xB1, 0xC1, 0x00,
//ascii 0x003D
  0xB6, 0xDB, 0x40,
//ascii 0x003E
  0x10, 0x71, 0xB6, 0x38, 0x20,
//ascii 0x003F
  0x60, 0xF0, 0x9B, 0x9B, 0x80,
//ascii 0x0040
  0x3C, 0x3F, 0x70, 0xB7, 0xDA, 0x6D, 0x97, 0x7A,
  0xC2, 0x3F, 0x0F, 0x00,
//ascii 0x0041
  0x03, 0x1F, 0x7E, 0xF4, 0xF4, 0x7E, 0x1F, 0x03,
//ascii 0x0042
  0xEF, 0xFF, 0x91, 0xFF, 0xFF,
//ascii 0x0043
  0x81, 0x81, 0x81, 0xFF, 0x7E,
//ascii 0x0044
  0x7E, 0xFF, 0x81, 0x81, 0xFF, 0xFF,
//ascii 0x0045
  0x91, 0x91, 0xFF, 0xFF,
//ascii 0x0046
  0x80, 0x90, 0x90, 0xFF, 0xFF,
//ascii 0x0047
  0x9F, 0x9F, 0x91, 0x81, 0xFF, 0x7E,
//ascii 0x0048
  0xFF, 0xFF, 0x10, 0x10, 0xFF, 0xFF,
//ascii 0x0049
  0xFF, 0xFF,
//ascii 0x004A
  0xFF, 0xDF, 0xFC, 0x00, 0x80, 0x10,
//ascii 0x004B
  0x81, 0xC3, 0xEF, 0x3C, 0x18, 0xFF, 0xFF,
//ascii 0x004C
  0x01, 0x01, 0x01, 0xFF, 0xFF,
//ascii 0x004D
  0xFF, 0xFF, 0xF8, 0x3F, 0x03, 0x3F, 0xF8, 0xFF,
  0xFF,
//ascii 0x004E
  0xFF, 0xFF, 0x0F, 0x3C, 0xF0, 0xFF, 0xFF,
//ascii 0x004F
  0x7E, 0xFF, 0x81, 0x81, 0x81, 0xFF, 0x7E,
//ascii 0x0050
  0xF8, 0xF8, 0x88, 0xFF, 0xFF,
//ascii 0x0051
  0x7E, 0x7F, 0xF8, 0x1A, 0x04, 0x81, 0x3F, 0xC7,
  0xE0,
//ascii 0x0052
  0x01, 0x77, 0xFE, 0x88, 0xFF, 0xFF,
//ascii 0x0053
  0x86, 0x8F, 0x9F, 0xF9, 0x71,
//ascii 0x0054
  0x80, 0x80, 0xFF, 0xFF, 0x80, 0x80,
//ascii 0x0055
  0xFE, 0xFF, 0x01, 0x01, 0xFF, 0xFE,
//ascii 0x0056
  0xF0, 0xFE, 0x0F, 0x0F, 0xFE, 0xF0,
//ascii 0x0057
  0x80, 0xF8, 0x7E, 0x07, 0xFF, 0xE0, 0xFF, 0x07,
  0x7E, 0xF8, 0x80,
//ascii 0x0058
  0x81, 0xC3, 0x7E, 0x3C, 0x3C, 0x7E, 0xC3, 0x81,
//ascii 0x0059
  0x80, 0xE0, 0x7F, 0x1F, 0x70, 0xE0, 0x80,
//ascii 0x005A
  0x81, 0xE1, 0xF1, 0xBD, 0x8F, 0x87, 0x81,
//ascii 0x005B
  0x80, 0x60, 0x1F, 0xFF, 0xFF,
//ascii 0x005C
  0x01, 0x0F, 0x3C, 0xF0, 0x80,
//ascii 0x005D
  0xFF, 0xFF, 0xF8, 0x06, 0x01,
//ascii 0x005E
  0x09, 0xF9, 0xC3, 0x84,
//ascii 0x005F
  0xFC,
//ascii 0x0060
  0x78,
//ascii 0x0061
  0x7F, 0xFA, 0x69, 0xBC, 0x60,
//ascii 0x0062
  0x0C, 0x3F, 0x3F, 0x21, 0xFF, 0xFF,
//ascii 0x0063
  0x86, 0x18, 0x7F, 0x78, 0xC0,
//ascii 0x0064
  0xFF, 0xFF, 0x21, 0x3F, 0x1E, 0x0C,
//ascii 0x0065
  0x63, 0x9A, 0x69, 0xFD, 0xE3, 0x00,
//ascii 0x0066
  0xA0, 0xA0, 0xFF, 0x7F, 0x20,
//ascii 0x0067
  0x83, 0x73, 0xFD, 0x32, 0x9F, 0xCF, 0xFC, 0x0C,
//ascii 0x0068
  0x3F, 0x3F, 0x20, 0xFF, 0xFF,
//ascii 0x0069
  0xBF, 0xBF,
//ascii 0x006A
  0xBF, 0xD7, 0xFC, 0x00, 0x80, 0x10,
//ascii 0x006B
  0x01, 0x33, 0x3F, 0x1C, 0xFF, 0xFF,
//ascii 0x006C
  0xFF, 0xFF,
//ascii 0x006D
  0xFF, 0xF8, 0x1F, 0xFE, 0x07, 0xFF,
//ascii 0x006E
  0xFF, 0xF8, 0x1F, 0xFC,
//ascii 0x006F
  0x31, 0xEF, 0xE1, 0xFD, 0xE3, 0x00,
//ascii 0x0070
  0x30, 0x7E, 0x3F, 0x10, 0x8F, 0xFF, 0xFC,
//ascii 0x0071
  0xFF, 0xFF, 0xE1, 0x1F, 0x8F, 0xC1, 0x80,
//ascii 0x0072
  0xC3, 0x07, 0xFF,
//ascii 0x0073
  0x1A, 0xFB, 0x7D, 0xE4,
//ascii 0x0074
  0x42, 0x87, 0xFF, 0xE4, 0x00,
//ascii 0x0075
  0xFF, 0xE0, 0x7F, 0xFC,
//ascii 0x0076
  0x83, 0xC7, 0xC3, 0x7F, 0xC8, 0x00,
//ascii 0x0077
  0x83, 0xC7, 0xCF, 0xF3, 0xC3, 0xDF, 0xF2, 0x00,
//ascii 0x0078
  0x87, 0x3F, 0xCC, 0xFF, 0x38, 0x40,
//ascii 0x0079
  0x80, 0x78, 0x1F, 0x01, 0xE7, 0xFF, 0x06, 0x00,
//ascii 0x007A
  0x87, 0x1F, 0x6F, 0x8E, 0x10,
//ascii 0x007B
  0x80, 0x7C, 0xFF, 0xFC, 0x30, 0x0C, 0x00,
//ascii 0x007C
  0xFF, 0xFF, 0xFC,
//ascii 0x007D
  0x0C, 0x03, 0x0F, 0xFF, 0xCF, 0x80, 0x40,
//ascii 0x007E
  0xDF, 0xB0,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_EXTRABOLD_11PX_1BPP[95] = {
  {     0, 0,  4,0, 0, 0, 0 }, //asciii 0x0020
  {     0, 0,  4,2, 1, 0, 3 }, //asciii 0x0021
  {     2, 0,  7,2, 1, 0, 8 }, //asciii 0x0022
  {     4, 0,  8,1, 1, 0, 3 }, //asciii 0x0023
  {    11, 0,  7,1, 0, 0, 2 }, //asciii 0x0024
  {    19, 0, 12,1, 1, 1, 3 }, //asciii 0x0025
  {    29, 0, 10,1, 1, 0, 3 }, //asciii 0x0026
  {    38, 0,  4,2, 1, 1, 8 }, //asciii 0x0027
  {    39, 0,  5,1, 1, 1, 1 }, //asciii 0x0028
  {    43, 0,  5,2, 1, 0, 1 }, //asciii 0x0029
  {    47, 0,  7,1, 1, 0, 6 }, //asciii 0x002A
  {    51, 0,  7,1, 2, 0, 5 }, //asciii 0x002B
  {    55, 0,  4,1, 7, 0, 2 }, //asciii 0x002C
  {    57, 0,  5,1, 5, 0, 5 }, //asciii 0x002D
  {    58, 0,  4,2, 7, 0, 3 }, //asciii 0x002E
  {    59, 0,  6,1, 1, 0, 3 }, //asciii 0x002F
  {    64, 0,  9,2, 1, 1, 3 }, //asciii 0x0030
  {    70, 0,  7,2, 1, 1, 3 }, //asciii 0x0031
  {    74, 0,  8,2, 1, 1, 3 }, //asciii 0x0032
  {    79, 0,  8,2, 1, 1, 3 }, //asciii 0x0033
  {    84, 0,  9,2, 1, 1, 3 }, //asciii 0x0034
  {    90, 0,  7,2, 1, 1, 3 }, //asciii 0x0035
  {    94, 0,  9,2, 1, 1, 3 }, //asciii 0x0036
  {   100, 0,  8,2, 1, 1, 3 }, //asciii 0x0037
  {   105, 0,  9,2, 1, 1, 3 }, //asciii 0x0038
  {   111, 0,  9,2, 1, 1, 3 }, //asciii 0x0039
  {   117, 0,  4,2, 3, 0, 3 }, //asciii 0x003A
  {   119, 0,  4,1, 3, 0, 2 }, //asciii 0x003B
  {   122, 0,  6,1, 2, 0, 3 }, //asciii 0x003C
  {   127, 0,  7,1, 4, 0, 5 }, //asciii 0x003D
  {   130, 0,  6,1, 2, 0, 3 }, //asciii 0x003E
  {   135, 0,  7,1, 1, 1, 3 }, //asciii 0x003F
  {   140, 0, 11,1, 1, 0, 2 }, //asciii 0x0040
  {   152, 0,  9,1, 1, 0, 3 }, //asciii 0x0041
  {   160, 0,  8,2, 1, 1, 3 }, //asciii 0x0042
  {   165, 0,  8,2, 1, 1, 3 }, //asciii 0x0043
  {   170, 0,  9,2, 1, 1, 3 }, //asciii 0x0044
  {   176, 0,  7,2, 1, 1, 3 }, //asciii 0x0045
  {   180, 0,  7,2, 1, 0, 3 }, //asciii 0x0046
  {   185, 0,  9,2, 1, 1, 3 }, //asciii 0x0047
  {   191, 0,  9,2, 1, 1, 3 }, //asciii 0x0048
  {   197, 0,  5,2, 1, 1, 3 }, //asciii 0x0049
  {   199, 0,  5,0, 1, 1, 0 }, //asciii 0x004A
  {   205, 0,  9,2, 1, 0, 3 }, //asciii 0x004B
  {   212, 0,  7,2, 1, 0, 3 }, //asciii 0x004C
  {   217, 0, 12,2, 1, 1, 3 }, //asciii 0x004D
  {   226, 0, 10,2, 1, 1, 3 }, //asciii 0x004E
  {   233, 0, 10,2, 1, 1, 3 }, //asciii 0x004F
  {   240, 0,  8,2, 1, 1, 3 }, //asciii 0x0050
  {   245, 0, 10,2, 1, 1, 1 }, //asciii 0x0051
  {   254, 0,  9,2, 1, 1, 3 }, //asciii 0x0052
  {   260, 0,  7,2, 1, 0, 3 }, //asciii 0x0053
  {   265, 0,  7,1, 1, 0, 3 }, //asciii 0x0054
  {   271, 0,  9,2, 1, 1, 3 }, //asciii 0x0055
  {   277, 0,  7,1, 1, 0, 3 }, //asciii 0x0056
  {   283, 0, 12,1, 1, 0, 3 }, //asciii 0x0057
  {   294, 0,  9,1, 1, 0, 3 }, //asciii 0x0058
  {   302, 0,  8,1, 1, 0, 3 }, //asciii 0x0059
  {   309, 0,  8,1, 1, 0, 3 }, //asciii 0x005A
  {   316, 0,  6,2, 1, 0, 1 }, //asciii 0x005B
  {   321, 0,  6,1, 1, 0, 3 }, //asciii 0x005C
  {   326, 0,  6,1, 1, 1, 1 }, //asciii 0x005D
  {   331, 0,  7,0, 1, 1, 6 }, //asciii 0x005E
  {   335, 0,  7,0, 10, 1, 1 }, //asciii 0x005F
  {   336, 0,  8,3, 0, 2, 10 }, //asciii 0x0060
  {   337, 0,  8,1, 3, 1, 3 }, //asciii 0x0061
  {   342, 0,  8,2, 1, 0, 3 }, //asciii 0x0062
  {   348, 0,  7,1, 3, 0, 3 }, //asciii 0x0063
  {   353, 0,  8,1, 1, 1, 3 }, //asciii 0x0064
  {   359, 0,  8,1, 3, 0, 3 }, //asciii 0x0065
  {   365, 0,  7,1, 1, 1, 3 }, //asciii 0x0066
  {   370, 0,  8,1, 3, 0, 0 }, //asciii 0x0067
  {   378, 0,  8,2, 1, 1, 3 }, //asciii 0x0068
  {   383, 0,  5,2, 1, 1, 3 }, //asciii 0x0069
  {   385, 0,  5,0, 1, 1, 0 }, //asciii 0x006A
  {   391, 0,  8,2, 1, 0, 3 }, //asciii 0x006B
  {   397, 0,  5,2, 1, 1, 3 }, //asciii 0x006C
  {   399, 0, 11,2, 3, 1, 3 }, //asciii 0x006D
  {   405, 0,  8,2, 3, 1, 3 }, //asciii 0x006E
  {   409, 0,  8,1, 3, 0, 3 }, //asciii 0x006F
  {   415, 0,  8,2, 3, 0, 0 }, //asciii 0x0070
  {   422, 0,  8,1, 3, 1, 0 }, //asciii 0x0071
  {   429, 0,  6,2, 3, 0, 3 }, //asciii 0x0072
  {   432, 0,  7,2, 3, 0, 3 }, //asciii 0x0073
  {   436, 0,  6,1, 2, 0, 3 }, //asciii 0x0074
  {   441, 0,  8,2, 3, 1, 3 }, //asciii 0x0075
  {   445, 0,  8,1, 3, 0, 3 }, //asciii 0x0076
  {   451, 0, 11,1, 3, 0, 3 }, //asciii 0x0077
  {   459, 0,  8,1, 3, 0, 3 }, //asciii 0x0078
  {   465, 0,  8,1, 3, 0, 0 }, //asciii 0x0079
  {   473, 0,  7,1, 3, 0, 3 }, //asciii 0x007A
  {   478, 0,  6,1, 1, 0, 1 }, //asciii 0x007B
  {   485, 0,  7,3, 1, 2, 0 }, //asciii 0x007C
  {   488, 0,  6,1, 1, 0, 1 }, //asciii 0x007D
  {   495, 0,  7,1, 4, 0, 6 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_EXTRABOLD_11PX_1BPP= {
  497, // bitmap len
  BAGL_FONT_OPEN_SANS_EXTRABOLD_11px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  14, // height of all characters in pixels
  14, // line height in pixels
  1, // kerning
  1, // crop enabled (1) or not (0)
  2, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_EXTRABOLD_11PX_1BPP,
  bitmapOPEN_SANS_EXTRABOLD_11PX_1BPP
};
