name: Auto Cherry-pick PRs

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to process'
        required: true
        type: number
defaults:
  run:
    shell: bash

jobs:
  PR_Delete_Branch:
    runs-on: ubuntu-latest
    name: "Delete Auto Update branch"
    if: |
      github.event_name == 'pull_request' && startsWith(github.head_ref, 'auto_update_')
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Delete branch
      run: git push origin --delete ${{ github.head_ref }}

  PR_Check:
    runs-on: ubuntu-latest
    name: "Pull Request Check"
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && !startsWith(github.head_ref, 'auto_update_') && github.event.pull_request.base.ref == 'master') ||
      (github.event_name == 'workflow_dispatch')
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
      with:
        # by default the action uses fetch-depth = 1, which creates
        # shallow repositories from which we can't push
        fetch-depth: 0

    - name : Python dependencies
      run: pip install PyGithub GitPython

    - name: Configure Git
      run: |
        git config --global url.https://github.com/.insteadOf git@github.com:
        git config --global url.https://oauth2:${{ secrets.GITHUB_TOKEN }}@github.com/.insteadOf https://github.com/

    - name: Set PR ID
      id: pr_id_step
      run: |
        # Define the variable PR_ID based on the trigger
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "PR_ID=${{ github.event.number }}" >> $GITHUB_OUTPUT
        else
          echo "PR_ID=${{ github.event.inputs.pr_number }}" >> $GITHUB_OUTPUT
        fi
    - name : PR check
      run: .github/workflows/scripts/pr_check.py -t ${{ secrets.GITHUB_TOKEN }} -r ./ -p ${{ steps.pr_id_step.outputs.PR_ID }}
