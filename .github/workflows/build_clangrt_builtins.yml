name: Build clang runtime builtins

on:
  workflow_dispatch:
    inputs:
      target_sdk_branch:
        type: string
        required: false
        default: 'master'
      create_pr:
        type: boolean
        required: false
        default: false

  # TODO: remove this next line before merging!
  push:

jobs:

  define-matrix:
    runs-on: ubuntu-latest

    outputs:
      cores: ${{ steps.cores.outputs.cores }}
      se_names: ${{ steps.se_names.outputs.se_names }}

    steps:
      - name: Define MCU cores
        id: cores
        run: |
          echo 'cores=["cortex-m3", "cortex-m35p+nodsp"]' >> "$GITHUB_OUTPUT"

      - name: Define SE names
        id: se_names
        run: |
          echo 'se_names=["st33", "st33k1"]' >> "$GITHUB_OUTPUT"

  build:
    needs: define-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest
    strategy:
      fail-fast: false
      matrix:
        cores: ${{ fromJSON(needs.define-matrix.outputs.cores) }}
        se_names: ${{ fromJSON(needs.define-matrix.outputs.se_names) }}

    steps:
      - uses: actions/checkout@v4
        with:
          # TODO: remove this next line before merging!
          ref: feat/regain_control_over_libs
          sparse-checkout: |
            tools/build_clangrt_builtins.sh
          sparse-checkout-cone-mode: false

      - run: ./tools/build_clangrt_builtins.sh -t ${{ matrix.target.cores }} -o artifact/arch/${{ matrix.target.se_names }}/lib

      - uses: actions/upload-artifact@v4
        with:
          name: arch-${{ matrix.target.se }}
          path: artifact/

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/upload-artifact/merge@v4
        with:
          name: arch
          pattern: arch-*
          delete-merged: true

  pr_create:
    needs: [merge, define-matrix]
    runs-on: ubuntu-latest
    if: ${{ success() && inputs.create_pr }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        se_names: ${{ fromJSON(needs.define-matrix.outputs.se_names) }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          # by default the action uses fetch-depth = 1, which creates
          # shallow repositories from which we can't push
          fetch-depth: 0
          ref: ${{ inputs.target_sdk_branch }}

      - name: Download Binaries artifact
        uses: actions/download-artifact@v4
        with:
          name: arch

      - name: PR creation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -l
          git status
          git switch --create sdk_libs_update
          git add arch/${{ matrix.target.se_names }}/lib
          git status
          gh pr create -B ${{ inputs.target_sdk_branch }} --title '[SDK_LIBS_UPDATE] Updating static SDK libraries' --body 'Created by Github action'
